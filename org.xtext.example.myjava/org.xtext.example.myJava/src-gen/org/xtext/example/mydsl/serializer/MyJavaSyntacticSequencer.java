/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.mydsl.services.MyJavaGrammarAccess;

@SuppressWarnings("all")
public class MyJavaSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyJavaGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Method_declaration___LeftSquareBracketKeyword_6_0_RightSquareBracketKeyword_6_1__a;
	protected AbstractElementAlias match_Parameter___LeftSquareBracketKeyword_2_0_RightSquareBracketKeyword_2_1__a;
	protected AbstractElementAlias match_Statement_SemicolonKeyword_15_1_or___BreakKeyword_13_1_SemicolonKeyword_13_3___or___ContinueKeyword_14_1_SemicolonKeyword_14_3___or___ReturnKeyword_8_1_SemicolonKeyword_8_2___or___ThrowKeyword_9_1_SemicolonKeyword_9_2__;
	protected AbstractElementAlias match_Switch_statement___DefaultKeyword_5_1_q___CaseKeyword_5_0_0_ColonKeyword_5_0_1__q__p;
	protected AbstractElementAlias match_Type___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a;
	protected AbstractElementAlias match_Variable_declarator___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyJavaGrammarAccess) access;
		match_Method_declaration___LeftSquareBracketKeyword_6_0_RightSquareBracketKeyword_6_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getMethod_declarationAccess().getLeftSquareBracketKeyword_6_0()), new TokenAlias(false, false, grammarAccess.getMethod_declarationAccess().getRightSquareBracketKeyword_6_1()));
		match_Parameter___LeftSquareBracketKeyword_2_0_RightSquareBracketKeyword_2_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1()));
		match_Statement_SemicolonKeyword_15_1_or___BreakKeyword_13_1_SemicolonKeyword_13_3___or___ContinueKeyword_14_1_SemicolonKeyword_14_3___or___ReturnKeyword_8_1_SemicolonKeyword_8_2___or___ThrowKeyword_9_1_SemicolonKeyword_9_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getStatementAccess().getBreakKeyword_13_1()), new TokenAlias(false, false, grammarAccess.getStatementAccess().getSemicolonKeyword_13_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getStatementAccess().getContinueKeyword_14_1()), new TokenAlias(false, false, grammarAccess.getStatementAccess().getSemicolonKeyword_14_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getStatementAccess().getReturnKeyword_8_1()), new TokenAlias(false, false, grammarAccess.getStatementAccess().getSemicolonKeyword_8_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getStatementAccess().getThrowKeyword_9_1()), new TokenAlias(false, false, grammarAccess.getStatementAccess().getSemicolonKeyword_9_2())), new TokenAlias(false, false, grammarAccess.getStatementAccess().getSemicolonKeyword_15_1()));
		match_Switch_statement___DefaultKeyword_5_1_q___CaseKeyword_5_0_0_ColonKeyword_5_0_1__q__p = new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getSwitch_statementAccess().getDefaultKeyword_5_1()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSwitch_statementAccess().getCaseKeyword_5_0_0()), new TokenAlias(false, false, grammarAccess.getSwitch_statementAccess().getColonKeyword_5_0_1())));
		match_Type___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_1()));
		match_Variable_declarator___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getVariable_declaratorAccess().getLeftSquareBracketKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getVariable_declaratorAccess().getRightSquareBracketKeyword_1_1()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if(match_Method_declaration___LeftSquareBracketKeyword_6_0_RightSquareBracketKeyword_6_1__a.equals(syntax))
				emit_Method_declaration___LeftSquareBracketKeyword_6_0_RightSquareBracketKeyword_6_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Parameter___LeftSquareBracketKeyword_2_0_RightSquareBracketKeyword_2_1__a.equals(syntax))
				emit_Parameter___LeftSquareBracketKeyword_2_0_RightSquareBracketKeyword_2_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Statement_SemicolonKeyword_15_1_or___BreakKeyword_13_1_SemicolonKeyword_13_3___or___ContinueKeyword_14_1_SemicolonKeyword_14_3___or___ReturnKeyword_8_1_SemicolonKeyword_8_2___or___ThrowKeyword_9_1_SemicolonKeyword_9_2__.equals(syntax))
				emit_Statement_SemicolonKeyword_15_1_or___BreakKeyword_13_1_SemicolonKeyword_13_3___or___ContinueKeyword_14_1_SemicolonKeyword_14_3___or___ReturnKeyword_8_1_SemicolonKeyword_8_2___or___ThrowKeyword_9_1_SemicolonKeyword_9_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Switch_statement___DefaultKeyword_5_1_q___CaseKeyword_5_0_0_ColonKeyword_5_0_1__q__p.equals(syntax))
				emit_Switch_statement___DefaultKeyword_5_1_q___CaseKeyword_5_0_0_ColonKeyword_5_0_1__q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Type___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a.equals(syntax))
				emit_Type___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Variable_declarator___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a.equals(syntax))
				emit_Variable_declarator___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('[' ']')*
	 *
	 * This ambiguous syntax occurs at:
	 *     rparent=RPAREN (ambiguity) debug=';'
	 *     rparent=RPAREN (ambiguity) statementMethod=Statement_block
	 */
	protected void emit_Method_declaration___LeftSquareBracketKeyword_6_0_RightSquareBracketKeyword_6_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' ']')*
	 *
	 * This ambiguous syntax occurs at:
	 *     parameterName=ID (ambiguity) (rule end)
	 */
	protected void emit_Parameter___LeftSquareBracketKeyword_2_0_RightSquareBracketKeyword_2_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ';' | ('return' ';') | ('throw' ';') | ('break' ';') | ('continue' ';')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Statement_SemicolonKeyword_15_1_or___BreakKeyword_13_1_SemicolonKeyword_13_3___or___ContinueKeyword_14_1_SemicolonKeyword_14_3___or___ReturnKeyword_8_1_SemicolonKeyword_8_2___or___ThrowKeyword_9_1_SemicolonKeyword_9_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('default:'? ('case' ':')?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     rparent=RPAREN '{' (ambiguity) '}' (rule end)
	 *     rparent=RPAREN '{' (ambiguity) switchStatements+=Statement
	 *     switchStatements+=Statement (ambiguity) '}' (rule end)
	 *     switchStatements+=Statement (ambiguity) switchStatements+=Statement
	 */
	protected void emit_Switch_statement___DefaultKeyword_5_1_q___CaseKeyword_5_0_0_ColonKeyword_5_0_1__q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' ']')*
	 *
	 * This ambiguous syntax occurs at:
	 *     typeSpecifier=Type_specifier (ambiguity) (rule end)
	 */
	protected void emit_Type___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' ']')*
	 *
	 * This ambiguous syntax occurs at:
	 *     nameVariable=ID (ambiguity) (rule end)
	 */
	protected void emit_Variable_declarator___LeftSquareBracketKeyword_1_0_RightSquareBracketKeyword_1_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
