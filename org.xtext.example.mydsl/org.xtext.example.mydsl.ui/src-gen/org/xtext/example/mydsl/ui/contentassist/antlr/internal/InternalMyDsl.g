/*
 * generated by Xtext
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
(rule__Model__GreetingsAssignment)
{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompilation_unit
entryRuleCompilation_unit 
:
{ before(grammarAccess.getCompilation_unitRule()); }
	 ruleCompilation_unit
{ after(grammarAccess.getCompilation_unitRule()); } 
	 EOF 
;

// Rule Compilation_unit
ruleCompilation_unit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompilation_unitAccess().getGroup()); }
(rule__Compilation_unit__Group__0)
{ after(grammarAccess.getCompilation_unitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType_declaration
entryRuleType_declaration 
:
{ before(grammarAccess.getType_declarationRule()); }
	 ruleType_declaration
{ after(grammarAccess.getType_declarationRule()); } 
	 EOF 
;

// Rule Type_declaration
ruleType_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_declarationAccess().getGroup()); }
(rule__Type_declaration__Group__0)
{ after(grammarAccess.getType_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface_declaration
entryRuleInterface_declaration 
:
{ before(grammarAccess.getInterface_declarationRule()); }
	 ruleInterface_declaration
{ after(grammarAccess.getInterface_declarationRule()); } 
	 EOF 
;

// Rule Interface_declaration
ruleInterface_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterface_declarationAccess().getGroup()); }
(rule__Interface_declaration__Group__0)
{ after(grammarAccess.getInterface_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass_declaration
entryRuleClass_declaration 
:
{ before(grammarAccess.getClass_declarationRule()); }
	 ruleClass_declaration
{ after(grammarAccess.getClass_declarationRule()); } 
	 EOF 
;

// Rule Class_declaration
ruleClass_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_declarationAccess().getGroup()); }
(rule__Class_declaration__Group__0)
{ after(grammarAccess.getClass_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField_declaration
entryRuleField_declaration 
:
{ before(grammarAccess.getField_declarationRule()); }
	 ruleField_declaration
{ after(grammarAccess.getField_declarationRule()); } 
	 EOF 
;

// Rule Field_declaration
ruleField_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getField_declarationAccess().getAlternatives()); }
(rule__Field_declaration__Alternatives)
{ after(grammarAccess.getField_declarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod_declaration
entryRuleMethod_declaration 
:
{ before(grammarAccess.getMethod_declarationRule()); }
	 ruleMethod_declaration
{ after(grammarAccess.getMethod_declarationRule()); } 
	 EOF 
;

// Rule Method_declaration
ruleMethod_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethod_declarationAccess().getGroup()); }
(rule__Method_declaration__Group__0)
{ after(grammarAccess.getMethod_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructor_declaration
entryRuleConstructor_declaration 
:
{ before(grammarAccess.getConstructor_declarationRule()); }
	 ruleConstructor_declaration
{ after(grammarAccess.getConstructor_declarationRule()); } 
	 EOF 
;

// Rule Constructor_declaration
ruleConstructor_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructor_declarationAccess().getGroup()); }
(rule__Constructor_declaration__Group__0)
{ after(grammarAccess.getConstructor_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter_list
entryRuleParameter_list 
:
{ before(grammarAccess.getParameter_listRule()); }
	 ruleParameter_list
{ after(grammarAccess.getParameter_listRule()); } 
	 EOF 
;

// Rule Parameter_list
ruleParameter_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameter_listAccess().getGroup()); }
(rule__Parameter_list__Group__0)
{ after(grammarAccess.getParameter_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable_declaration
entryRuleVariable_declaration 
:
{ before(grammarAccess.getVariable_declarationRule()); }
	 ruleVariable_declaration
{ after(grammarAccess.getVariable_declarationRule()); } 
	 EOF 
;

// Rule Variable_declaration
ruleVariable_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup()); }
(rule__Variable_declaration__Group__0)
{ after(grammarAccess.getVariable_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable_declarator
entryRuleVariable_declarator 
:
{ before(grammarAccess.getVariable_declaratorRule()); }
	 ruleVariable_declarator
{ after(grammarAccess.getVariable_declaratorRule()); } 
	 EOF 
;

// Rule Variable_declarator
ruleVariable_declarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_declaratorAccess().getGroup()); }
(rule__Variable_declarator__Group__0)
{ after(grammarAccess.getVariable_declaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable_initializer
entryRuleVariable_initializer 
:
{ before(grammarAccess.getVariable_initializerRule()); }
	 ruleVariable_initializer
{ after(grammarAccess.getVariable_initializerRule()); } 
	 EOF 
;

// Rule Variable_initializer
ruleVariable_initializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_initializerAccess().getAlternatives()); }
(rule__Variable_initializer__Alternatives)
{ after(grammarAccess.getVariable_initializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray_initializer
entryRuleArray_initializer 
:
{ before(grammarAccess.getArray_initializerRule()); }
	 ruleArray_initializer
{ after(grammarAccess.getArray_initializerRule()); } 
	 EOF 
;

// Rule Array_initializer
ruleArray_initializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArray_initializerAccess().getGroup()); }
(rule__Array_initializer__Group__0)
{ after(grammarAccess.getArray_initializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType_specifier
entryRuleType_specifier 
:
{ before(grammarAccess.getType_specifierRule()); }
	 ruleType_specifier
{ after(grammarAccess.getType_specifierRule()); } 
	 EOF 
;

// Rule Type_specifier
ruleType_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_specifierAccess().getAlternatives()); }
(rule__Type_specifier__Alternatives)
{ after(grammarAccess.getType_specifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifier
entryRuleModifier 
:
{ before(grammarAccess.getModifierRule()); }
	 ruleModifier
{ after(grammarAccess.getModifierRule()); } 
	 EOF 
;

// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifierAccess().getAlternatives()); }
(rule__Modifier__Alternatives)
{ after(grammarAccess.getModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatic_initializer
entryRuleStatic_initializer 
:
{ before(grammarAccess.getStatic_initializerRule()); }
	 ruleStatic_initializer
{ after(grammarAccess.getStatic_initializerRule()); } 
	 EOF 
;

// Rule Static_initializer
ruleStatic_initializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatic_initializerAccess().getGroup()); }
(rule__Static_initializer__Group__0)
{ after(grammarAccess.getStatic_initializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_block
entryRuleStatement_block 
:
{ before(grammarAccess.getStatement_blockRule()); }
	 ruleStatement_block
{ after(grammarAccess.getStatement_blockRule()); } 
	 EOF 
;

// Rule Statement_block
ruleStatement_block
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_blockAccess().getGroup()); }
(rule__Statement_block__Group__0)
{ after(grammarAccess.getStatement_blockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor_Statement
entryRuleFor_Statement 
:
{ before(grammarAccess.getFor_StatementRule()); }
	 ruleFor_Statement
{ after(grammarAccess.getFor_StatementRule()); } 
	 EOF 
;

// Rule For_Statement
ruleFor_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_StatementAccess().getGroup()); }
(rule__For_Statement__Group__0)
{ after(grammarAccess.getFor_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor_control
entryRuleFor_control 
:
{ before(grammarAccess.getFor_controlRule()); }
	 ruleFor_control
{ after(grammarAccess.getFor_controlRule()); } 
	 EOF 
;

// Rule For_control
ruleFor_control
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_controlAccess().getGroup()); }
(rule__For_control__Group__0)
{ after(grammarAccess.getFor_controlAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
(rule__Variable__NameAssignment)
{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable_value
entryRuleVariable_value 
:
{ before(grammarAccess.getVariable_valueRule()); }
	 ruleVariable_value
{ after(grammarAccess.getVariable_valueRule()); } 
	 EOF 
;

// Rule Variable_value
ruleVariable_value
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_valueAccess().getNameAssignment()); }
(rule__Variable_value__NameAssignment)
{ after(grammarAccess.getVariable_valueAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitive_type
entryRulePrimitive_type 
:
{ before(grammarAccess.getPrimitive_typeRule()); }
	 rulePrimitive_type
{ after(grammarAccess.getPrimitive_typeRule()); } 
	 EOF 
;

// Rule Primitive_type
rulePrimitive_type
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitive_typeAccess().getNameAssignment()); }
(rule__Primitive_type__NameAssignment)
{ after(grammarAccess.getPrimitive_typeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor_init
entryRuleFor_init 
:
{ before(grammarAccess.getFor_initRule()); }
	 ruleFor_init
{ after(grammarAccess.getFor_initRule()); } 
	 EOF 
;

// Rule For_init
ruleFor_init
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_initAccess().getGroup()); }
(rule__For_init__Group__0)
{ after(grammarAccess.getFor_initAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor_expression
entryRuleFor_expression 
:
{ before(grammarAccess.getFor_expressionRule()); }
	 ruleFor_expression
{ after(grammarAccess.getFor_expressionRule()); } 
	 EOF 
;

// Rule For_expression
ruleFor_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_expressionAccess().getGroup()); }
(rule__For_expression__Group__0)
{ after(grammarAccess.getFor_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor_update
entryRuleFor_update 
:
{ before(grammarAccess.getFor_updateRule()); }
	 ruleFor_update
{ after(grammarAccess.getFor_updateRule()); } 
	 EOF 
;

// Rule For_update
ruleFor_update
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_updateAccess().getGroup()); }
(rule__For_update__Group__0)
{ after(grammarAccess.getFor_updateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor_update_operator
entryRuleFor_update_operator 
:
{ before(grammarAccess.getFor_update_operatorRule()); }
	 ruleFor_update_operator
{ after(grammarAccess.getFor_update_operatorRule()); } 
	 EOF 
;

// Rule For_update_operator
ruleFor_update_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_update_operatorAccess().getGroup()); }
(rule__For_update_operator__Group__0)
{ after(grammarAccess.getFor_update_operatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdate_operator
entryRuleUpdate_operator 
:
{ before(grammarAccess.getUpdate_operatorRule()); }
	 ruleUpdate_operator
{ after(grammarAccess.getUpdate_operatorRule()); } 
	 EOF 
;

// Rule Update_operator
ruleUpdate_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdate_operatorAccess().getAlternatives()); }
(rule__Update_operator__Alternatives)
{ after(grammarAccess.getUpdate_operatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor_expression_operator
entryRuleFor_expression_operator 
:
{ before(grammarAccess.getFor_expression_operatorRule()); }
	 ruleFor_expression_operator
{ after(grammarAccess.getFor_expression_operatorRule()); } 
	 EOF 
;

// Rule For_expression_operator
ruleFor_expression_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_expression_operatorAccess().getGroup()); }
(rule__For_expression_operator__Group__0)
{ after(grammarAccess.getFor_expression_operatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParens_expression
entryRuleParens_expression 
:
{ before(grammarAccess.getParens_expressionRule()); }
	 ruleParens_expression
{ after(grammarAccess.getParens_expressionRule()); } 
	 EOF 
;

// Rule Parens_expression
ruleParens_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParens_expressionAccess().getGroup()); }
(rule__Parens_expression__Group__0)
{ after(grammarAccess.getParens_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_list
entryRuleExpression_list 
:
{ before(grammarAccess.getExpression_listRule()); }
	 ruleExpression_list
{ after(grammarAccess.getExpression_listRule()); } 
	 EOF 
;

// Rule Expression_list
ruleExpression_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_listAccess().getGroup()); }
(rule__Expression_list__Group__0)
{ after(grammarAccess.getExpression_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditional_expression
entryRuleConditional_expression 
:
{ before(grammarAccess.getConditional_expressionRule()); }
	 ruleConditional_expression
{ after(grammarAccess.getConditional_expressionRule()); } 
	 EOF 
;

// Rule Conditional_expression
ruleConditional_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_expressionAccess().getGroup()); }
(rule__Conditional_expression__Group__0)
{ after(grammarAccess.getConditional_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditional_OR_expression
entryRuleConditional_OR_expression 
:
{ before(grammarAccess.getConditional_OR_expressionRule()); }
	 ruleConditional_OR_expression
{ after(grammarAccess.getConditional_OR_expressionRule()); } 
	 EOF 
;

// Rule Conditional_OR_expression
ruleConditional_OR_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_OR_expressionAccess().getGroup()); }
(rule__Conditional_OR_expression__Group__0)
{ after(grammarAccess.getConditional_OR_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditional_AND_expression
entryRuleConditional_AND_expression 
:
{ before(grammarAccess.getConditional_AND_expressionRule()); }
	 ruleConditional_AND_expression
{ after(grammarAccess.getConditional_AND_expressionRule()); } 
	 EOF 
;

// Rule Conditional_AND_expression
ruleConditional_AND_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_AND_expressionAccess().getGroup()); }
(rule__Conditional_AND_expression__Group__0)
{ after(grammarAccess.getConditional_AND_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInclusive_OR_expression
entryRuleInclusive_OR_expression 
:
{ before(grammarAccess.getInclusive_OR_expressionRule()); }
	 ruleInclusive_OR_expression
{ after(grammarAccess.getInclusive_OR_expressionRule()); } 
	 EOF 
;

// Rule Inclusive_OR_expression
ruleInclusive_OR_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInclusive_OR_expressionAccess().getGroup()); }
(rule__Inclusive_OR_expression__Group__0)
{ after(grammarAccess.getInclusive_OR_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExclusive_OR_expression
entryRuleExclusive_OR_expression 
:
{ before(grammarAccess.getExclusive_OR_expressionRule()); }
	 ruleExclusive_OR_expression
{ after(grammarAccess.getExclusive_OR_expressionRule()); } 
	 EOF 
;

// Rule Exclusive_OR_expression
ruleExclusive_OR_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExclusive_OR_expressionAccess().getGroup()); }
(rule__Exclusive_OR_expression__Group__0)
{ after(grammarAccess.getExclusive_OR_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAND_expression
entryRuleAND_expression 
:
{ before(grammarAccess.getAND_expressionRule()); }
	 ruleAND_expression
{ after(grammarAccess.getAND_expressionRule()); } 
	 EOF 
;

// Rule AND_expression
ruleAND_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAND_expressionAccess().getGroup()); }
(rule__AND_expression__Group__0)
{ after(grammarAccess.getAND_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquality_expression
entryRuleEquality_expression 
:
{ before(grammarAccess.getEquality_expressionRule()); }
	 ruleEquality_expression
{ after(grammarAccess.getEquality_expressionRule()); } 
	 EOF 
;

// Rule Equality_expression
ruleEquality_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquality_expressionAccess().getGroup()); }
(rule__Equality_expression__Group__0)
{ after(grammarAccess.getEquality_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceOf_expression
entryRuleInstanceOf_expression 
:
{ before(grammarAccess.getInstanceOf_expressionRule()); }
	 ruleInstanceOf_expression
{ after(grammarAccess.getInstanceOf_expressionRule()); } 
	 EOF 
;

// Rule InstanceOf_expression
ruleInstanceOf_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceOf_expressionAccess().getGroup()); }
(rule__InstanceOf_expression__Group__0)
{ after(grammarAccess.getInstanceOf_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelational_expression
entryRuleRelational_expression 
:
{ before(grammarAccess.getRelational_expressionRule()); }
	 ruleRelational_expression
{ after(grammarAccess.getRelational_expressionRule()); } 
	 EOF 
;

// Rule Relational_expression
ruleRelational_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelational_expressionAccess().getGroup()); }
(rule__Relational_expression__Group__0)
{ after(grammarAccess.getRelational_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShift_expression
entryRuleShift_expression 
:
{ before(grammarAccess.getShift_expressionRule()); }
	 ruleShift_expression
{ after(grammarAccess.getShift_expressionRule()); } 
	 EOF 
;

// Rule Shift_expression
ruleShift_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShift_expressionAccess().getGroup()); }
(rule__Shift_expression__Group__0)
{ after(grammarAccess.getShift_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditive_expression
entryRuleAdditive_expression 
:
{ before(grammarAccess.getAdditive_expressionRule()); }
	 ruleAdditive_expression
{ after(grammarAccess.getAdditive_expressionRule()); } 
	 EOF 
;

// Rule Additive_expression
ruleAdditive_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditive_expressionAccess().getGroup()); }
(rule__Additive_expression__Group__0)
{ after(grammarAccess.getAdditive_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicative_expression
entryRuleMultiplicative_expression 
:
{ before(grammarAccess.getMultiplicative_expressionRule()); }
	 ruleMultiplicative_expression
{ after(grammarAccess.getMultiplicative_expressionRule()); } 
	 EOF 
;

// Rule Multiplicative_expression
ruleMultiplicative_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getGroup()); }
(rule__Multiplicative_expression__Group__0)
{ after(grammarAccess.getMultiplicative_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnary_expression
entryRuleUnary_expression 
:
{ before(grammarAccess.getUnary_expressionRule()); }
	 ruleUnary_expression
{ after(grammarAccess.getUnary_expressionRule()); } 
	 EOF 
;

// Rule Unary_expression
ruleUnary_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnary_expressionAccess().getAlternatives()); }
(rule__Unary_expression__Alternatives)
{ after(grammarAccess.getUnary_expressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnary_expression_Not_Plus_Minus
entryRuleUnary_expression_Not_Plus_Minus 
:
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusRule()); }
	 ruleUnary_expression_Not_Plus_Minus
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusRule()); } 
	 EOF 
;

// Rule Unary_expression_Not_Plus_Minus
ruleUnary_expression_Not_Plus_Minus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup()); }
(rule__Unary_expression_Not_Plus_Minus__Group__0)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCast_expression
entryRuleCast_expression 
:
{ before(grammarAccess.getCast_expressionRule()); }
	 ruleCast_expression
{ after(grammarAccess.getCast_expressionRule()); } 
	 EOF 
;

// Rule Cast_expression
ruleCast_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCast_expressionAccess().getAlternatives()); }
(rule__Cast_expression__Alternatives)
{ after(grammarAccess.getCast_expressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimary_expression
entryRulePrimary_expression 
:
{ before(grammarAccess.getPrimary_expressionRule()); }
	 rulePrimary_expression
{ after(grammarAccess.getPrimary_expressionRule()); } 
	 EOF 
;

// Rule Primary_expression
rulePrimary_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup()); }
(rule__Primary_expression__Group__0)
{ after(grammarAccess.getPrimary_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifier_suffix
entryRuleIdentifier_suffix 
:
{ before(grammarAccess.getIdentifier_suffixRule()); }
	 ruleIdentifier_suffix
{ after(grammarAccess.getIdentifier_suffixRule()); } 
	 EOF 
;

// Rule Identifier_suffix
ruleIdentifier_suffix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup()); }
(rule__Identifier_suffix__Group__0)
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCreator
entryRuleCreator 
:
{ before(grammarAccess.getCreatorRule()); }
	 ruleCreator
{ after(grammarAccess.getCreatorRule()); } 
	 EOF 
;

// Rule Creator
ruleCreator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreatorAccess().getAlternatives()); }
(rule__Creator__Alternatives)
{ after(grammarAccess.getCreatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCreated_name
entryRuleCreated_name 
:
{ before(grammarAccess.getCreated_nameRule()); }
	 ruleCreated_name
{ after(grammarAccess.getCreated_nameRule()); } 
	 EOF 
;

// Rule Created_name
ruleCreated_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreated_nameAccess().getGroup()); }
(rule__Created_name__Group__0)
{ after(grammarAccess.getCreated_nameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInner_creator
entryRuleInner_creator 
:
{ before(grammarAccess.getInner_creatorRule()); }
	 ruleInner_creator
{ after(grammarAccess.getInner_creatorRule()); } 
	 EOF 
;

// Rule Inner_creator
ruleInner_creator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInner_creatorAccess().getGroup()); }
(rule__Inner_creator__Group__0)
{ after(grammarAccess.getInner_creatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray_creator_rest
entryRuleArray_creator_rest 
:
{ before(grammarAccess.getArray_creator_restRule()); }
	 ruleArray_creator_rest
{ after(grammarAccess.getArray_creator_restRule()); } 
	 EOF 
;

// Rule Array_creator_rest
ruleArray_creator_rest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArray_creator_restAccess().getGroup()); }
(rule__Array_creator_rest__Group__0)
{ after(grammarAccess.getArray_creator_restAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass_creator_rest
entryRuleClass_creator_rest 
:
{ before(grammarAccess.getClass_creator_restRule()); }
	 ruleClass_creator_rest
{ after(grammarAccess.getClass_creator_restRule()); } 
	 EOF 
;

// Rule Class_creator_rest
ruleClass_creator_rest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_creator_restAccess().getGroup()); }
(rule__Class_creator_rest__Group__0)
{ after(grammarAccess.getClass_creator_restAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExplicit_generic_invocation
entryRuleExplicit_generic_invocation 
:
{ before(grammarAccess.getExplicit_generic_invocationRule()); }
	 ruleExplicit_generic_invocation
{ after(grammarAccess.getExplicit_generic_invocationRule()); } 
	 EOF 
;

// Rule Explicit_generic_invocation
ruleExplicit_generic_invocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExplicit_generic_invocationAccess().getGroup()); }
(rule__Explicit_generic_invocation__Group__0)
{ after(grammarAccess.getExplicit_generic_invocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNon_wildcard_type_arguments
entryRuleNon_wildcard_type_arguments 
:
{ before(grammarAccess.getNon_wildcard_type_argumentsRule()); }
	 ruleNon_wildcard_type_arguments
{ after(grammarAccess.getNon_wildcard_type_argumentsRule()); } 
	 EOF 
;

// Rule Non_wildcard_type_arguments
ruleNon_wildcard_type_arguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNon_wildcard_type_argumentsAccess().getGroup()); }
(rule__Non_wildcard_type_arguments__Group__0)
{ after(grammarAccess.getNon_wildcard_type_argumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelector
entryRuleSelector 
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectorAccess().getGroup()); }
(rule__Selector__Group__0)
{ after(grammarAccess.getSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuper_suffix
entryRuleSuper_suffix 
:
{ before(grammarAccess.getSuper_suffixRule()); }
	 ruleSuper_suffix
{ after(grammarAccess.getSuper_suffixRule()); } 
	 EOF 
;

// Rule Super_suffix
ruleSuper_suffix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuper_suffixAccess().getGroup()); }
(rule__Super_suffix__Group__0)
{ after(grammarAccess.getSuper_suffixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArguments
entryRuleArguments 
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentsAccess().getGroup()); }
(rule__Arguments__Group__0)
{ after(grammarAccess.getArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitch_statement
entryRuleSwitch_statement 
:
{ before(grammarAccess.getSwitch_statementRule()); }
	 ruleSwitch_statement
{ after(grammarAccess.getSwitch_statementRule()); } 
	 EOF 
;

// Rule Switch_statement
ruleSwitch_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitch_statementAccess().getGroup()); }
(rule__Switch_statement__Group__0)
{ after(grammarAccess.getSwitch_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhile_Statement
entryRuleWhile_Statement 
:
{ before(grammarAccess.getWhile_StatementRule()); }
	 ruleWhile_Statement
{ after(grammarAccess.getWhile_StatementRule()); } 
	 EOF 
;

// Rule While_Statement
ruleWhile_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhile_StatementAccess().getGroup()); }
(rule__While_Statement__Group__0)
{ after(grammarAccess.getWhile_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDo_Statement
entryRuleDo_Statement 
:
{ before(grammarAccess.getDo_StatementRule()); }
	 ruleDo_Statement
{ after(grammarAccess.getDo_StatementRule()); } 
	 EOF 
;

// Rule Do_Statement
ruleDo_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDo_StatementAccess().getGroup()); }
(rule__Do_Statement__Group__0)
{ after(grammarAccess.getDo_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIf_statement
entryRuleIf_statement 
:
{ before(grammarAccess.getIf_statementRule()); }
	 ruleIf_statement
{ after(grammarAccess.getIf_statementRule()); } 
	 EOF 
;

// Rule If_statement
ruleIf_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_statementAccess().getGroup()); }
(rule__If_statement__Group__0)
{ after(grammarAccess.getIf_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTry_statement
entryRuleTry_statement 
:
{ before(grammarAccess.getTry_statementRule()); }
	 ruleTry_statement
{ after(grammarAccess.getTry_statementRule()); } 
	 EOF 
;

// Rule Try_statement
ruleTry_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTry_statementAccess().getGroup()); }
(rule__Try_statement__Group__0)
{ after(grammarAccess.getTry_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport_statement
entryRuleImport_statement 
:
{ before(grammarAccess.getImport_statementRule()); }
	 ruleImport_statement
{ after(grammarAccess.getImport_statementRule()); } 
	 EOF 
;

// Rule Import_statement
ruleImport_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImport_statementAccess().getGroup()); }
(rule__Import_statement__Group__0)
{ after(grammarAccess.getImport_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass_name
entryRuleClass_name 
:
{ before(grammarAccess.getClass_nameRule()); }
	 ruleClass_name
{ after(grammarAccess.getClass_nameRule()); } 
	 EOF 
;

// Rule Class_name
ruleClass_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_nameAccess().getPackage_nameParserRuleCall()); }
	rulePackage_name
{ after(grammarAccess.getClass_nameAccess().getPackage_nameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface_name
entryRuleInterface_name 
:
{ before(grammarAccess.getInterface_nameRule()); }
	 ruleInterface_name
{ after(grammarAccess.getInterface_nameRule()); } 
	 EOF 
;

// Rule Interface_name
ruleInterface_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterface_nameAccess().getPackage_nameParserRuleCall()); }
	rulePackage_name
{ after(grammarAccess.getInterface_nameAccess().getPackage_nameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage_statement
entryRulePackage_statement 
:
{ before(grammarAccess.getPackage_statementRule()); }
	 rulePackage_statement
{ after(grammarAccess.getPackage_statementRule()); } 
	 EOF 
;

// Rule Package_statement
rulePackage_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackage_statementAccess().getGroup()); }
(rule__Package_statement__Group__0)
{ after(grammarAccess.getPackage_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage_name
entryRulePackage_name 
:
{ before(grammarAccess.getPackage_nameRule()); }
	 rulePackage_name
{ after(grammarAccess.getPackage_nameRule()); } 
	 EOF 
;

// Rule Package_name
rulePackage_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackage_nameAccess().getGroup()); }
(rule__Package_name__Group__0)
{ after(grammarAccess.getPackage_nameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage_name_line
entryRulePackage_name_line 
:
{ before(grammarAccess.getPackage_name_lineRule()); }
	 rulePackage_name_line
{ after(grammarAccess.getPackage_name_lineRule()); } 
	 EOF 
;

// Rule Package_name_line
rulePackage_name_line
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackage_name_lineAccess().getGroup()); }
(rule__Package_name_line__Group__0)*
{ after(grammarAccess.getPackage_name_lineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteger_literal
entryRuleInteger_literal 
:
{ before(grammarAccess.getInteger_literalRule()); }
	 ruleInteger_literal
{ after(grammarAccess.getInteger_literalRule()); } 
	 EOF 
;

// Rule Integer_literal
ruleInteger_literal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteger_literalAccess().getAlternatives()); }
(rule__Integer_literal__Alternatives)
{ after(grammarAccess.getInteger_literalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolean_literal
entryRuleBoolean_literal 
:
{ before(grammarAccess.getBoolean_literalRule()); }
	 ruleBoolean_literal
{ after(grammarAccess.getBoolean_literalRule()); } 
	 EOF 
;

// Rule Boolean_literal
ruleBoolean_literal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolean_literalAccess().getAlternatives()); }
(rule__Boolean_literal__Alternatives)
{ after(grammarAccess.getBoolean_literalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelational_operator
entryRuleRelational_operator 
:
{ before(grammarAccess.getRelational_operatorRule()); }
	 ruleRelational_operator
{ after(grammarAccess.getRelational_operatorRule()); } 
	 EOF 
;

// Rule Relational_operator
ruleRelational_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelational_operatorAccess().getAlternatives()); }
(rule__Relational_operator__Alternatives)
{ after(grammarAccess.getRelational_operatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment_operator
entryRuleAssignment_operator 
:
{ before(grammarAccess.getAssignment_operatorRule()); }
	 ruleAssignment_operator
{ after(grammarAccess.getAssignment_operatorRule()); } 
	 EOF 
;

// Rule Assignment_operator
ruleAssignment_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignment_operatorAccess().getAlternatives()); }
(rule__Assignment_operator__Alternatives)
{ after(grammarAccess.getAssignment_operatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShift_operator
entryRuleShift_operator 
:
{ before(grammarAccess.getShift_operatorRule()); }
	 ruleShift_operator
{ after(grammarAccess.getShift_operatorRule()); } 
	 EOF 
;

// Rule Shift_operator
ruleShift_operator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShift_operatorAccess().getAlternatives()); }
(rule__Shift_operator__Alternatives)
{ after(grammarAccess.getShift_operatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type_declaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getClassDecAssignment_1_0()); }
(rule__Type_declaration__ClassDecAssignment_1_0)
{ after(grammarAccess.getType_declarationAccess().getClassDecAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getType_declarationAccess().getInterfaceDecAssignment_1_1()); }
(rule__Type_declaration__InterfaceDecAssignment_1_1)
{ after(grammarAccess.getType_declarationAccess().getInterfaceDecAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getGroup_0()); }
(rule__Field_declaration__Group_0__0)
{ after(grammarAccess.getField_declarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getStaticinitializerAssignment_1()); }
(rule__Field_declaration__StaticinitializerAssignment_1)
{ after(grammarAccess.getField_declarationAccess().getStaticinitializerAssignment_1()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getGroup_2()); }
(rule__Field_declaration__Group_2__0)
{ after(grammarAccess.getField_declarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getVariableDeclarationAssignment_0_1_0()); }
(rule__Field_declaration__VariableDeclarationAssignment_0_1_0)
{ after(grammarAccess.getField_declarationAccess().getVariableDeclarationAssignment_0_1_0()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getContructorNameAssignment_0_1_1()); }
(rule__Field_declaration__ContructorNameAssignment_0_1_1)
{ after(grammarAccess.getField_declarationAccess().getContructorNameAssignment_0_1_1()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getMethodNameAssignment_0_1_2()); }
(rule__Field_declaration__MethodNameAssignment_0_1_2)
{ after(grammarAccess.getField_declarationAccess().getMethodNameAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getStatementMethodAssignment_7_0()); }
(rule__Method_declaration__StatementMethodAssignment_7_0)
{ after(grammarAccess.getMethod_declarationAccess().getStatementMethodAssignment_7_0()); }
)

    |(
{ before(grammarAccess.getMethod_declarationAccess().getDebugAssignment_7_1()); }
(rule__Method_declaration__DebugAssignment_7_1)
{ after(grammarAccess.getMethod_declarationAccess().getDebugAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getArray_initializerParserRuleCall_0()); }
	ruleArray_initializer
{ after(grammarAccess.getVariable_initializerAccess().getArray_initializerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariable_initializerAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getVariable_initializerAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_specifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_specifierAccess().getBooleanKeyword_0()); }

	'boolean' 

{ after(grammarAccess.getType_specifierAccess().getBooleanKeyword_0()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getByteKeyword_1()); }

	'byte' 

{ after(grammarAccess.getType_specifierAccess().getByteKeyword_1()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getCharKeyword_2()); }

	'char' 

{ after(grammarAccess.getType_specifierAccess().getCharKeyword_2()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getShortKeyword_3()); }

	'short' 

{ after(grammarAccess.getType_specifierAccess().getShortKeyword_3()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getIntKeyword_4()); }

	'int' 

{ after(grammarAccess.getType_specifierAccess().getIntKeyword_4()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getFloatKeyword_5()); }

	'float' 

{ after(grammarAccess.getType_specifierAccess().getFloatKeyword_5()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getLongKeyword_6()); }

	'long' 

{ after(grammarAccess.getType_specifierAccess().getLongKeyword_6()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getDoubleKeyword_7()); }

	'double' 

{ after(grammarAccess.getType_specifierAccess().getDoubleKeyword_7()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getVoidKeyword_8()); }

	'void' 

{ after(grammarAccess.getType_specifierAccess().getVoidKeyword_8()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getClass_nameParserRuleCall_9()); }
	ruleClass_name
{ after(grammarAccess.getType_specifierAccess().getClass_nameParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getMODTerminalRuleCall_0()); }
	RULE_MOD
{ after(grammarAccess.getModifierAccess().getMODTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getSTATICTerminalRuleCall_1()); }
	RULE_STATIC
{ after(grammarAccess.getModifierAccess().getSTATICTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariableDeclarationAssignment_0()); }
(rule__Statement__VariableDeclarationAssignment_0)
{ after(grammarAccess.getStatementAccess().getVariableDeclarationAssignment_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementAssignment_2()); }
(rule__Statement__IfStatementAssignment_2)
{ after(grammarAccess.getStatementAccess().getIfStatementAssignment_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDoStatementAssignment_3()); }
(rule__Statement__DoStatementAssignment_3)
{ after(grammarAccess.getStatementAccess().getDoStatementAssignment_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementAssignment_4()); }
(rule__Statement__WhileStatementAssignment_4)
{ after(grammarAccess.getStatementAccess().getWhileStatementAssignment_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForStatementAssignment_5()); }
(rule__Statement__ForStatementAssignment_5)
{ after(grammarAccess.getStatementAccess().getForStatementAssignment_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSwitchStatementAssignment_6()); }
(rule__Statement__SwitchStatementAssignment_6)
{ after(grammarAccess.getStatementAccess().getSwitchStatementAssignment_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_7()); }
(rule__Statement__Group_7__0)
{ after(grammarAccess.getStatementAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_8()); }
(rule__Statement__Group_8__0)
{ after(grammarAccess.getStatementAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_9()); }
(rule__Statement__Group_9__0)
{ after(grammarAccess.getStatementAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_blockParserRuleCall_10()); }
	ruleStatement_block
{ after(grammarAccess.getStatementAccess().getStatement_blockParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getTryStatementAssignment_11()); }
(rule__Statement__TryStatementAssignment_11)
{ after(grammarAccess.getStatementAccess().getTryStatementAssignment_11()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_12()); }
(rule__Statement__Group_12__0)
{ after(grammarAccess.getStatementAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_13()); }
(rule__Statement__Group_13__0)
{ after(grammarAccess.getStatementAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_14()); }
(rule__Statement__Group_14__0)
{ after(grammarAccess.getStatementAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_15()); }
(rule__Statement__Group_15__0)
{ after(grammarAccess.getStatementAccess().getGroup_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Update_operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdate_operatorAccess().getPlusSignPlusSignKeyword_0()); }

	'++' 

{ after(grammarAccess.getUpdate_operatorAccess().getPlusSignPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getUpdate_operatorAccess().getHyphenMinusHyphenMinusKeyword_1()); }

	'--' 

{ after(grammarAccess.getUpdate_operatorAccess().getHyphenMinusHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }

	'==' 

{ after(grammarAccess.getEquality_expressionAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getEquality_expressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }

	'!=' 

{ after(grammarAccess.getEquality_expressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getPlusSignKeyword_1_0_0()); }

	'+' 

{ after(grammarAccess.getAdditive_expressionAccess().getPlusSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditive_expressionAccess().getHyphenMinusKeyword_1_0_1()); }

	'-' 

{ after(grammarAccess.getAdditive_expressionAccess().getHyphenMinusKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getAsteriskKeyword_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicative_expressionAccess().getAsteriskKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicative_expressionAccess().getSolidusKeyword_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicative_expressionAccess().getSolidusKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getMultiplicative_expressionAccess().getPercentSignKeyword_1_0_2()); }

	'%' 

{ after(grammarAccess.getMultiplicative_expressionAccess().getPercentSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_0()); }
(rule__Unary_expression__Group_0__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_1()); }
(rule__Unary_expression__Group_1__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_2()); }
(rule__Unary_expression__Group_2__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getGroup_3()); }
(rule__Unary_expression__Group_3__0)
{ after(grammarAccess.getUnary_expressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getUnary_expressionAccess().getUnary_expression_Not_Plus_MinusParserRuleCall_4()); }
	ruleUnary_expression_Not_Plus_Minus
{ after(grammarAccess.getUnary_expressionAccess().getUnary_expression_Not_Plus_MinusParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_0()); }
(rule__Unary_expression_Not_Plus_Minus__Group_1_0__0)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_1()); }
(rule__Unary_expression_Not_Plus_Minus__Group_1_1__0)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getCastexpressionAssignment_1_2()); }
(rule__Unary_expression_Not_Plus_Minus__CastexpressionAssignment_1_2)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getCastexpressionAssignment_1_2()); }
)

    |(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_3()); }
(rule__Unary_expression_Not_Plus_Minus__Group_1_3__0)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Alternatives_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getPlusSignPlusSignKeyword_1_3_2_0()); }

	'++' 

{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getPlusSignPlusSignKeyword_1_3_2_0()); }
)

    |(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getHyphenMinusHyphenMinusKeyword_1_3_2_1()); }

	'--' 

{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getHyphenMinusHyphenMinusKeyword_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getGroup_0()); }
(rule__Cast_expression__Group_0__0)
{ after(grammarAccess.getCast_expressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCast_expressionAccess().getGroup_1()); }
(rule__Cast_expression__Group_1__0)
{ after(grammarAccess.getCast_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getTypeAssignment_1_1_0()); }
(rule__Cast_expression__TypeAssignment_1_1_0)
{ after(grammarAccess.getCast_expressionAccess().getTypeAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getCast_expressionAccess().getExpressionAssignment_1_1_1()); }
(rule__Cast_expression__ExpressionAssignment_1_1_1)
{ after(grammarAccess.getCast_expressionAccess().getExpressionAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getParexpressionAssignment_1_0()); }
(rule__Primary_expression__ParexpressionAssignment_1_0)
{ after(grammarAccess.getPrimary_expressionAccess().getParexpressionAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_1()); }
(rule__Primary_expression__Group_1_1__0)
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_2()); }
(rule__Primary_expression__Group_1_2__0)
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getPrimary_expressionAccess().getLiteralAssignment_1_3()); }
(rule__Primary_expression__LiteralAssignment_1_3)
{ after(grammarAccess.getPrimary_expressionAccess().getLiteralAssignment_1_3()); }
)

    |(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_4()); }
(rule__Primary_expression__Group_1_4__0)
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_4()); }
)

    |(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_5()); }
(rule__Primary_expression__Group_1_5__0)
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_5()); }
)

    |(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_6()); }
(rule__Primary_expression__Group_1_6__0)
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_6()); }
)

    |(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_7()); }
(rule__Primary_expression__Group_1_7__0)
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup_1_0()); }
(rule__Identifier_suffix__Group_1_0__0)
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getIdentifier_suffixAccess().getArgumentsAssignment_1_1()); }
(rule__Identifier_suffix__ArgumentsAssignment_1_1)
{ after(grammarAccess.getIdentifier_suffixAccess().getArgumentsAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup_1_2()); }
(rule__Identifier_suffix__Group_1_2__0)
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup_1_3()); }
(rule__Identifier_suffix__Group_1_3__0)
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup_1_3()); }
)

    |(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup_1_4()); }
(rule__Identifier_suffix__Group_1_4__0)
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup_1_4()); }
)

    |(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup_1_5()); }
(rule__Identifier_suffix__Group_1_5__0)
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup_1_5()); }
)

    |(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup_1_6()); }
(rule__Identifier_suffix__Group_1_6__0)
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getGroup_0()); }
(rule__Creator__Group_0__0)
{ after(grammarAccess.getCreatorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCreatorAccess().getGroup_1()); }
(rule__Creator__Group_1__0)
{ after(grammarAccess.getCreatorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getArraycreatorrestAssignment_1_1_0()); }
(rule__Creator__ArraycreatorrestAssignment_1_1_0)
{ after(grammarAccess.getCreatorAccess().getArraycreatorrestAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getCreatorAccess().getClasscreatorrestAssignment_1_1_1()); }
(rule__Creator__ClasscreatorrestAssignment_1_1_1)
{ after(grammarAccess.getCreatorAccess().getClasscreatorrestAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Created_name__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreated_nameAccess().getClassorinterfacetypeAssignment_1_0()); }
(rule__Created_name__ClassorinterfacetypeAssignment_1_0)
{ after(grammarAccess.getCreated_nameAccess().getClassorinterfacetypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getCreated_nameAccess().getPrimitivetypeAssignment_1_1()); }
(rule__Created_name__PrimitivetypeAssignment_1_1)
{ after(grammarAccess.getCreated_nameAccess().getPrimitivetypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getGroup_1_0()); }
(rule__Array_creator_rest__Group_1_0__0)
{ after(grammarAccess.getArray_creator_restAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getArray_creator_restAccess().getGroup_1_1()); }
(rule__Array_creator_rest__Group_1_1__0)
{ after(grammarAccess.getArray_creator_restAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_1_0()); }
(rule__Selector__Group_1_0__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSelectorAccess().getGroup_1_1()); }
(rule__Selector__Group_1_1__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getSelectorAccess().getGroup_1_2()); }
(rule__Selector__Group_1_2__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getArgumentsAssignment_1_0()); }
(rule__Super_suffix__ArgumentsAssignment_1_0)
{ after(grammarAccess.getSuper_suffixAccess().getArgumentsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSuper_suffixAccess().getGroup_1_1()); }
(rule__Super_suffix__Group_1_1__0)
{ after(grammarAccess.getSuper_suffixAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getGroup_6_0()); }
(rule__Switch_statement__Group_6_0__0)
{ after(grammarAccess.getSwitch_statementAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getSwitch_statementAccess().getGroup_6_1()); }
(rule__Switch_statement__Group_6_1__0)
{ after(grammarAccess.getSwitch_statementAccess().getGroup_6_1()); }
)

    |(
{ before(grammarAccess.getSwitch_statementAccess().getSwitchStatementsAssignment_6_2()); }
(rule__Switch_statement__SwitchStatementsAssignment_6_2)
{ after(grammarAccess.getSwitch_statementAccess().getSwitchStatementsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getGroup_1_0()); }
(rule__Import_statement__Group_1_0__0)
{ after(grammarAccess.getImport_statementAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getImport_statementAccess().getGroup_1_1()); }
(rule__Import_statement__Group_1_1__0)
{ after(grammarAccess.getImport_statementAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getInteger_literalParserRuleCall_0()); }
	ruleInteger_literal
{ after(grammarAccess.getLiteralAccess().getInteger_literalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFLOATING_POINT_LITERALTerminalRuleCall_1()); }
	RULE_FLOATING_POINT_LITERAL
{ after(grammarAccess.getLiteralAccess().getFLOATING_POINT_LITERALTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getCHARACTER_LITERALTerminalRuleCall_2()); }
	RULE_CHARACTER_LITERAL
{ after(grammarAccess.getLiteralAccess().getCHARACTER_LITERALTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getSTRING_LITERALTerminalRuleCall_3()); }
	RULE_STRING_LITERAL
{ after(grammarAccess.getLiteralAccess().getSTRING_LITERALTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBoolean_literalParserRuleCall_4()); }
	ruleBoolean_literal
{ after(grammarAccess.getLiteralAccess().getBoolean_literalParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNullKeyword_5()); }

	'null' 

{ after(grammarAccess.getLiteralAccess().getNullKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Integer_literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteger_literalAccess().getHEX_LITERALTerminalRuleCall_0()); }
	RULE_HEX_LITERAL
{ after(grammarAccess.getInteger_literalAccess().getHEX_LITERALTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInteger_literalAccess().getOCTAL_LITERALTerminalRuleCall_1()); }
	RULE_OCTAL_LITERAL
{ after(grammarAccess.getInteger_literalAccess().getOCTAL_LITERALTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInteger_literalAccess().getDECIMAL_LITERALTerminalRuleCall_2()); }
	RULE_DECIMAL_LITERAL
{ after(grammarAccess.getInteger_literalAccess().getDECIMAL_LITERALTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean_literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolean_literalAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBoolean_literalAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBoolean_literalAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBoolean_literalAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_operatorAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getRelational_operatorAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelational_operatorAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getRelational_operatorAccess().getGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getRelational_operatorAccess().getGroup_2()); }
(rule__Relational_operator__Group_2__0)
{ after(grammarAccess.getRelational_operatorAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getRelational_operatorAccess().getGroup_3()); }
(rule__Relational_operator__Group_3__0)
{ after(grammarAccess.getRelational_operatorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignment_operatorAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getAssignment_operatorAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getAssignment_operatorAccess().getPlusSignEqualsSignKeyword_1()); }

	'+=' 

{ after(grammarAccess.getAssignment_operatorAccess().getPlusSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getAssignment_operatorAccess().getHyphenMinusEqualsSignKeyword_2()); }

	'-=' 

{ after(grammarAccess.getAssignment_operatorAccess().getHyphenMinusEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getAssignment_operatorAccess().getAsteriskEqualsSignKeyword_3()); }

	'*=' 

{ after(grammarAccess.getAssignment_operatorAccess().getAsteriskEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getAssignment_operatorAccess().getSolidusEqualsSignKeyword_4()); }

	'/=' 

{ after(grammarAccess.getAssignment_operatorAccess().getSolidusEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getAssignment_operatorAccess().getAmpersandEqualsSignKeyword_5()); }

	'&=' 

{ after(grammarAccess.getAssignment_operatorAccess().getAmpersandEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getAssignment_operatorAccess().getVerticalLineEqualsSignKeyword_6()); }

	'|=' 

{ after(grammarAccess.getAssignment_operatorAccess().getVerticalLineEqualsSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getAssignment_operatorAccess().getCircumflexAccentEqualsSignKeyword_7()); }

	'^=' 

{ after(grammarAccess.getAssignment_operatorAccess().getCircumflexAccentEqualsSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getAssignment_operatorAccess().getPercentSignEqualsSignKeyword_8()); }

	'%=' 

{ after(grammarAccess.getAssignment_operatorAccess().getPercentSignEqualsSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_operatorAccess().getGroup_0()); }
(rule__Shift_operator__Group_0__0)
{ after(grammarAccess.getShift_operatorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getShift_operatorAccess().getGroup_1()); }
(rule__Shift_operator__Group_1__0)
{ after(grammarAccess.getShift_operatorAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getShift_operatorAccess().getGroup_2()); }
(rule__Shift_operator__Group_2__0)
{ after(grammarAccess.getShift_operatorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Compilation_unit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compilation_unit__Group__0__Impl
	rule__Compilation_unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getCompilation_unitAction_0()); }
(

)
{ after(grammarAccess.getCompilation_unitAccess().getCompilation_unitAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compilation_unit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compilation_unit__Group__1__Impl
	rule__Compilation_unit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getNameAssignment_1()); }
(rule__Compilation_unit__NameAssignment_1)?
{ after(grammarAccess.getCompilation_unitAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compilation_unit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compilation_unit__Group__2__Impl
	rule__Compilation_unit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getImportsAssignment_2()); }
(rule__Compilation_unit__ImportsAssignment_2)*
{ after(grammarAccess.getCompilation_unitAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compilation_unit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compilation_unit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getTypeDeclarationsAssignment_3()); }
(rule__Compilation_unit__TypeDeclarationsAssignment_3)*
{ after(grammarAccess.getCompilation_unitAccess().getTypeDeclarationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__0__Impl
	rule__Type_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getCommentAssignment_0()); }
(rule__Type_declaration__CommentAssignment_0)?
{ after(grammarAccess.getType_declarationAccess().getCommentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__1__Impl
	rule__Type_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getAlternatives_1()); }
(rule__Type_declaration__Alternatives_1)
{ after(grammarAccess.getType_declarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getType_declarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interface_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__0__Impl
	rule__Interface_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getModifiersAssignment_0()); }
(rule__Interface_declaration__ModifiersAssignment_0)*
{ after(grammarAccess.getInterface_declarationAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__1__Impl
	rule__Interface_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getINTERFACETerminalRuleCall_1()); }
	RULE_INTERFACE
{ after(grammarAccess.getInterface_declarationAccess().getINTERFACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__2__Impl
	rule__Interface_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getInterfaceNameAssignment_2()); }
(rule__Interface_declaration__InterfaceNameAssignment_2)
{ after(grammarAccess.getInterface_declarationAccess().getInterfaceNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__3__Impl
	rule__Interface_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getGroup_3()); }
(rule__Interface_declaration__Group_3__0)?
{ after(grammarAccess.getInterface_declarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__4__Impl
	rule__Interface_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getInterface_declarationAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__5__Impl
	rule__Interface_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getFieldsDeclarationAssignment_5()); }
(rule__Interface_declaration__FieldsDeclarationAssignment_5)*
{ after(grammarAccess.getInterface_declarationAccess().getFieldsDeclarationAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getInterface_declarationAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Interface_declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3__0__Impl
	rule__Interface_declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
	RULE_EXTENDS
{ after(grammarAccess.getInterface_declarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3__1__Impl
	rule__Interface_declaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getInterfaceHerdadaAssignment_3_1()); }
(rule__Interface_declaration__InterfaceHerdadaAssignment_3_1)
{ after(grammarAccess.getInterface_declarationAccess().getInterfaceHerdadaAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getGroup_3_2()); }
(rule__Interface_declaration__Group_3_2__0)*
{ after(grammarAccess.getInterface_declarationAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interface_declaration__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3_2__0__Impl
	rule__Interface_declaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getInterface_declarationAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getInterfacesHerdadasAssignment_3_2_1()); }
(rule__Interface_declaration__InterfacesHerdadasAssignment_3_2_1)
{ after(grammarAccess.getInterface_declarationAccess().getInterfacesHerdadasAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__0__Impl
	rule__Class_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getModifiersAssignment_0()); }
(rule__Class_declaration__ModifiersAssignment_0)*
{ after(grammarAccess.getClass_declarationAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__1__Impl
	rule__Class_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getClassKeyword_1()); }

	'class' 

{ after(grammarAccess.getClass_declarationAccess().getClassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__2__Impl
	rule__Class_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getClassNameAssignment_2()); }
(rule__Class_declaration__ClassNameAssignment_2)
{ after(grammarAccess.getClass_declarationAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__3__Impl
	rule__Class_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getGroup_3()); }
(rule__Class_declaration__Group_3__0)?
{ after(grammarAccess.getClass_declarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__4__Impl
	rule__Class_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getGroup_4()); }
(rule__Class_declaration__Group_4__0)?
{ after(grammarAccess.getClass_declarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__5__Impl
	rule__Class_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getClass_declarationAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__6__Impl
	rule__Class_declaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getFieldsDeclarationAssignment_6()); }
(rule__Class_declaration__FieldsDeclarationAssignment_6)*
{ after(grammarAccess.getClass_declarationAccess().getFieldsDeclarationAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getClass_declarationAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Class_declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_3__0__Impl
	rule__Class_declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
	RULE_EXTENDS
{ after(grammarAccess.getClass_declarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getClassHerdadaAssignment_3_1()); }
(rule__Class_declaration__ClassHerdadaAssignment_3_1)
{ after(grammarAccess.getClass_declarationAccess().getClassHerdadaAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_declaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4__0__Impl
	rule__Class_declaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getImplementsKeyword_4_0()); }

	'implements' 

{ after(grammarAccess.getClass_declarationAccess().getImplementsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4__1__Impl
	rule__Class_declaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getInterfaceImplementadaAssignment_4_1()); }
(rule__Class_declaration__InterfaceImplementadaAssignment_4_1)
{ after(grammarAccess.getClass_declarationAccess().getInterfaceImplementadaAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getGroup_4_2()); }
(rule__Class_declaration__Group_4_2__0)*
{ after(grammarAccess.getClass_declarationAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Class_declaration__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4_2__0__Impl
	rule__Class_declaration__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getClass_declarationAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getInterfacesImplementadasAssignment_4_2_1()); }
(rule__Class_declaration__InterfacesImplementadasAssignment_4_2_1)
{ after(grammarAccess.getClass_declarationAccess().getInterfacesImplementadasAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field_declaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_declaration__Group_0__0__Impl
	rule__Field_declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getCommentAssignment_0_0()); }
(rule__Field_declaration__CommentAssignment_0_0)?
{ after(grammarAccess.getField_declarationAccess().getCommentAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_declaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getAlternatives_0_1()); }
(rule__Field_declaration__Alternatives_0_1)
{ after(grammarAccess.getField_declarationAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field_declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_declaration__Group_2__0__Impl
	rule__Field_declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getField_declarationAction_2_0()); }
(

)
{ after(grammarAccess.getField_declarationAccess().getField_declarationAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getField_declarationAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__0__Impl
	rule__Method_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getModifiersMethodAssignment_0()); }
(rule__Method_declaration__ModifiersMethodAssignment_0)*
{ after(grammarAccess.getMethod_declarationAccess().getModifiersMethodAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__1__Impl
	rule__Method_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getTypeMethodAssignment_1()); }
(rule__Method_declaration__TypeMethodAssignment_1)
{ after(grammarAccess.getMethod_declarationAccess().getTypeMethodAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__2__Impl
	rule__Method_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getNameMethodAssignment_2()); }
(rule__Method_declaration__NameMethodAssignment_2)
{ after(grammarAccess.getMethod_declarationAccess().getNameMethodAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__3__Impl
	rule__Method_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getLParenAssignment_3()); }
(rule__Method_declaration__LParenAssignment_3)
{ after(grammarAccess.getMethod_declarationAccess().getLParenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__4__Impl
	rule__Method_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getParameterListMethodAssignment_4()); }
(rule__Method_declaration__ParameterListMethodAssignment_4)?
{ after(grammarAccess.getMethod_declarationAccess().getParameterListMethodAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__5__Impl
	rule__Method_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getRparentAssignment_5()); }
(rule__Method_declaration__RparentAssignment_5)
{ after(grammarAccess.getMethod_declarationAccess().getRparentAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__6__Impl
	rule__Method_declaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getGroup_6()); }
(rule__Method_declaration__Group_6__0)*
{ after(grammarAccess.getMethod_declarationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getAlternatives_7()); }
(rule__Method_declaration__Alternatives_7)
{ after(grammarAccess.getMethod_declarationAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Method_declaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group_6__0__Impl
	rule__Method_declaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getLeftSquareBracketKeyword_6_0()); }

	'[' 

{ after(grammarAccess.getMethod_declarationAccess().getLeftSquareBracketKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getRightSquareBracketKeyword_6_1()); }

	']' 

{ after(grammarAccess.getMethod_declarationAccess().getRightSquareBracketKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constructor_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__0__Impl
	rule__Constructor_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getModifiersConstructorAssignment_0()); }
(rule__Constructor_declaration__ModifiersConstructorAssignment_0)*
{ after(grammarAccess.getConstructor_declarationAccess().getModifiersConstructorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__1__Impl
	rule__Constructor_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getNameConstructorAssignment_1()); }
(rule__Constructor_declaration__NameConstructorAssignment_1)
{ after(grammarAccess.getConstructor_declarationAccess().getNameConstructorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__2__Impl
	rule__Constructor_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getLParenAssignment_2()); }
(rule__Constructor_declaration__LParenAssignment_2)
{ after(grammarAccess.getConstructor_declarationAccess().getLParenAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__3__Impl
	rule__Constructor_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getParameterListConstructorAssignment_3()); }
(rule__Constructor_declaration__ParameterListConstructorAssignment_3)?
{ after(grammarAccess.getConstructor_declarationAccess().getParameterListConstructorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__4__Impl
	rule__Constructor_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getRparentAssignment_4()); }
(rule__Constructor_declaration__RparentAssignment_4)
{ after(grammarAccess.getConstructor_declarationAccess().getRparentAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getStatementConstructorAssignment_5()); }
(rule__Constructor_declaration__StatementConstructorAssignment_5)
{ after(grammarAccess.getConstructor_declarationAccess().getStatementConstructorAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Parameter_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group__0__Impl
	rule__Parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParameterAssignment_0()); }
(rule__Parameter_list__ParameterAssignment_0)
{ after(grammarAccess.getParameter_listAccess().getParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getGroup_1()); }
(rule__Parameter_list__Group_1__0)*
{ after(grammarAccess.getParameter_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group_1__0__Impl
	rule__Parameter_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1()); }
(rule__Parameter_list__ParametersAssignment_1_1)
{ after(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterNameAssignment_1()); }
(rule__Parameter__ParameterNameAssignment_1)
{ after(grammarAccess.getParameterAccess().getParameterNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_2()); }
(rule__Parameter__Group_2__0)*
{ after(grammarAccess.getParameterAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1()); }

	']' 

{ after(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__0__Impl
	rule__Variable_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getModifiersVariableAssignment_0()); }
(rule__Variable_declaration__ModifiersVariableAssignment_0)*
{ after(grammarAccess.getVariable_declarationAccess().getModifiersVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__1__Impl
	rule__Variable_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getTypeAssignment_1()); }
(rule__Variable_declaration__TypeAssignment_1)
{ after(grammarAccess.getVariable_declarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__2__Impl
	rule__Variable_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getNameVariableAssignment_2()); }
(rule__Variable_declaration__NameVariableAssignment_2)
{ after(grammarAccess.getVariable_declarationAccess().getNameVariableAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__3__Impl
	rule__Variable_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_3()); }
(rule__Variable_declaration__Group_3__0)*
{ after(grammarAccess.getVariable_declarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getVariable_declarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Variable_declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_3__0__Impl
	rule__Variable_declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getVariable_declarationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getNamesAssignment_3_1()); }
(rule__Variable_declaration__NamesAssignment_3_1)
{ after(grammarAccess.getVariable_declarationAccess().getNamesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group__0__Impl
	rule__Variable_declarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getNameVariableAssignment_0()); }
(rule__Variable_declarator__NameVariableAssignment_0)
{ after(grammarAccess.getVariable_declaratorAccess().getNameVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group__1__Impl
	rule__Variable_declarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getGroup_1()); }
(rule__Variable_declarator__Group_1__0)*
{ after(grammarAccess.getVariable_declaratorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getGroup_2()); }
(rule__Variable_declarator__Group_2__0)?
{ after(grammarAccess.getVariable_declaratorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_declarator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group_1__0__Impl
	rule__Variable_declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getVariable_declaratorAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declarator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getRightSquareBracketKeyword_1_1()); }

	']' 

{ after(grammarAccess.getVariable_declaratorAccess().getRightSquareBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declarator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group_2__0__Impl
	rule__Variable_declarator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getVariable_declaratorAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declarator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getVariAssignment_2_1()); }
(rule__Variable_declarator__VariAssignment_2_1)
{ after(grammarAccess.getVariable_declaratorAccess().getVariAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array_initializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group__0__Impl
	rule__Array_initializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getArray_initializerAction_0()); }
(

)
{ after(grammarAccess.getArray_initializerAccess().getArray_initializerAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_initializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group__1__Impl
	rule__Array_initializer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getArray_initializerAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_initializer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group__2__Impl
	rule__Array_initializer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getGroup_2()); }
(rule__Array_initializer__Group_2__0)?
{ after(grammarAccess.getArray_initializerAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_initializer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getArray_initializerAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Array_initializer__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group_2__0__Impl
	rule__Array_initializer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getVariableinitializerAssignment_2_0()); }
(rule__Array_initializer__VariableinitializerAssignment_2_0)
{ after(grammarAccess.getArray_initializerAccess().getVariableinitializerAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_initializer__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group_2__1__Impl
	rule__Array_initializer__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getGroup_2_1()); }
(rule__Array_initializer__Group_2_1__0)*
{ after(grammarAccess.getArray_initializerAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_initializer__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getCommaKeyword_2_2()); }
(
	',' 
)?
{ after(grammarAccess.getArray_initializerAccess().getCommaKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Array_initializer__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group_2_1__0__Impl
	rule__Array_initializer__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getArray_initializerAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_initializer__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_initializer__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getVariableinitializerAssignment_2_1_1()); }
(rule__Array_initializer__VariableinitializerAssignment_2_1_1)
{ after(grammarAccess.getArray_initializerAccess().getVariableinitializerAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeSpecifierAssignment_0()); }
(rule__Type__TypeSpecifierAssignment_0)
{ after(grammarAccess.getTypeAccess().getTypeSpecifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1()); }
(rule__Type__Group_1__0)*
{ after(grammarAccess.getTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_1()); }

	']' 

{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Static_initializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static_initializer__Group__0__Impl
	rule__Static_initializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getStaticAssignment_0()); }
(rule__Static_initializer__StaticAssignment_0)
{ after(grammarAccess.getStatic_initializerAccess().getStaticAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Static_initializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static_initializer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getNameAssignment_1()); }
(rule__Static_initializer__NameAssignment_1)
{ after(grammarAccess.getStatic_initializerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__0__Impl
	rule__Statement_block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getStatement_blockAction_0()); }
(

)
{ after(grammarAccess.getStatement_blockAccess().getStatement_blockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__1__Impl
	rule__Statement_block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStatement_blockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__2__Impl
	rule__Statement_block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getStatmentsAssignment_2()); }
(rule__Statement_block__StatmentsAssignment_2)*
{ after(grammarAccess.getStatement_blockAccess().getStatmentsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStatement_blockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionStatementAssignment_1_0()); }
(rule__Statement__ExpressionStatementAssignment_1_0)
{ after(grammarAccess.getStatementAccess().getExpressionStatementAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGAssignment_1_1()); }
(rule__Statement__GAssignment_1_1)
{ after(grammarAccess.getStatementAccess().getGAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__0__Impl
	rule__Statement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSynchronizedKeyword_7_0()); }

	'synchronized(' 

{ after(grammarAccess.getStatementAccess().getSynchronizedKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__1__Impl
	rule__Statement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionAssignment_7_1()); }
(rule__Statement__ExpressionAssignment_7_1)
{ after(grammarAccess.getStatementAccess().getExpressionAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__2__Impl
	rule__Statement__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRparentAssignment_7_2()); }
(rule__Statement__RparentAssignment_7_2)
{ after(grammarAccess.getStatementAccess().getRparentAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSyncStatementAssignment_7_3()); }
(rule__Statement__SyncStatementAssignment_7_3)
{ after(grammarAccess.getStatementAccess().getSyncStatementAssignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__0__Impl
	rule__Statement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_8_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__1__Impl
	rule__Statement__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnKeyword_8_1()); }

	'return' 

{ after(grammarAccess.getStatementAccess().getReturnKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__2__Impl
	rule__Statement__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionAssignment_8_2()); }
(rule__Statement__ExpressionAssignment_8_2)?
{ after(grammarAccess.getStatementAccess().getExpressionAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_8_3()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__0__Impl
	rule__Statement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_9_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__1__Impl
	rule__Statement__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getThrowKeyword_9_1()); }

	'throw' 

{ after(grammarAccess.getStatementAccess().getThrowKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__2__Impl
	rule__Statement__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionAssignment_9_2()); }
(rule__Statement__ExpressionAssignment_9_2)?
{ after(grammarAccess.getStatementAccess().getExpressionAssignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_9_3()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__0__Impl
	rule__Statement__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameStatementAssignment_12_0()); }
(rule__Statement__NameStatementAssignment_12_0)
{ after(grammarAccess.getStatementAccess().getNameStatementAssignment_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__1__Impl
	rule__Statement__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getColonKeyword_12_1()); }

	':' 

{ after(grammarAccess.getStatementAccess().getColonKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAssignment_12_2()); }
(rule__Statement__StatementAssignment_12_2)
{ after(grammarAccess.getStatementAccess().getStatementAssignment_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__0__Impl
	rule__Statement__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_13_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__1__Impl
	rule__Statement__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBreakKeyword_13_1()); }

	'break' 

{ after(grammarAccess.getStatementAccess().getBreakKeyword_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__2__Impl
	rule__Statement__Group_13__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameAssignment_13_2()); }
(rule__Statement__NameAssignment_13_2)?
{ after(grammarAccess.getStatementAccess().getNameAssignment_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_13_3()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_13_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__0__Impl
	rule__Statement__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_14_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__1__Impl
	rule__Statement__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getContinueKeyword_14_1()); }

	'continue' 

{ after(grammarAccess.getStatementAccess().getContinueKeyword_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_14__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__2__Impl
	rule__Statement__Group_14__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameAssignment_14_2()); }
(rule__Statement__NameAssignment_14_2)?
{ after(grammarAccess.getStatementAccess().getNameAssignment_14_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_14__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_14__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_14__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_14_3()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_14_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_15__0__Impl
	rule__Statement__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_15_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_15__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_15_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__0__Impl
	rule__For_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getFor_StatementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__1__Impl
	rule__For_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getLparentAssignment_1()); }
(rule__For_Statement__LparentAssignment_1)
{ after(grammarAccess.getFor_StatementAccess().getLparentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__2__Impl
	rule__For_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getForControlAssignment_2()); }
(rule__For_Statement__ForControlAssignment_2)
{ after(grammarAccess.getFor_StatementAccess().getForControlAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__3__Impl
	rule__For_Statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getRParentAssignment_3()); }
(rule__For_Statement__RParentAssignment_3)
{ after(grammarAccess.getFor_StatementAccess().getRParentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getForStatementAssignment_4()); }
(rule__For_Statement__ForStatementAssignment_4)
{ after(grammarAccess.getFor_StatementAccess().getForStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__For_control__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_control__Group__0__Impl
	rule__For_control__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getFor_controlAction_0()); }
(

)
{ after(grammarAccess.getFor_controlAccess().getFor_controlAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_control__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_control__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getGroup_1()); }
(rule__For_control__Group_1__0)
{ after(grammarAccess.getFor_controlAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_control__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_control__Group_1__0__Impl
	rule__For_control__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getForinitAssignment_1_0()); }
(rule__For_control__ForinitAssignment_1_0)?
{ after(grammarAccess.getFor_controlAccess().getForinitAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_control__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_control__Group_1__1__Impl
	rule__For_control__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getFor_controlAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_control__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_control__Group_1__2__Impl
	rule__For_control__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getExpressionAssignment_1_2()); }
(rule__For_control__ExpressionAssignment_1_2)?
{ after(grammarAccess.getFor_controlAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_control__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_control__Group_1__3__Impl
	rule__For_control__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getSemicolonKeyword_1_3()); }

	';' 

{ after(grammarAccess.getFor_controlAccess().getSemicolonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_control__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_control__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getForupdateAssignment_1_4()); }
(rule__For_control__ForupdateAssignment_1_4)?
{ after(grammarAccess.getFor_controlAccess().getForupdateAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__For_init__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_init__Group__0__Impl
	rule__For_init__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_init__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_initAccess().getFor_initAction_0()); }
(

)
{ after(grammarAccess.getFor_initAccess().getFor_initAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_init__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_init__Group__1__Impl
	rule__For_init__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_init__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_initAccess().getTypeAssignment_1()); }
(rule__For_init__TypeAssignment_1)
{ after(grammarAccess.getFor_initAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_init__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_init__Group__2__Impl
	rule__For_init__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_init__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_initAccess().getVarAssignment_2()); }
(rule__For_init__VarAssignment_2)
{ after(grammarAccess.getFor_initAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_init__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_init__Group__3__Impl
	rule__For_init__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_init__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_initAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getFor_initAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_init__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_init__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_init__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_initAccess().getVar_initAssignment_4()); }
(rule__For_init__Var_initAssignment_4)
{ after(grammarAccess.getFor_initAccess().getVar_initAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__For_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_expression__Group__0__Impl
	rule__For_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expressionAccess().getFor_expressionAction_0()); }
(

)
{ after(grammarAccess.getFor_expressionAccess().getFor_expressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_expression__Group__1__Impl
	rule__For_expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expressionAccess().getVariable1Assignment_1()); }
(rule__For_expression__Variable1Assignment_1)
{ after(grammarAccess.getFor_expressionAccess().getVariable1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_expression__Group__2__Impl
	rule__For_expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expressionAccess().getExpOpAssignment_2()); }
(rule__For_expression__ExpOpAssignment_2)
{ after(grammarAccess.getFor_expressionAccess().getExpOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_expression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_expression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expressionAccess().getLimitAssignment_3()); }
(rule__For_expression__LimitAssignment_3)
{ after(grammarAccess.getFor_expressionAccess().getLimitAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__For_update__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_update__Group__0__Impl
	rule__For_update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_update__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_updateAccess().getFor_updateAction_0()); }
(

)
{ after(grammarAccess.getFor_updateAccess().getFor_updateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_update__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_update__Group__1__Impl
	rule__For_update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_update__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_updateAccess().getVariableAssignment_1()); }
(rule__For_update__VariableAssignment_1)
{ after(grammarAccess.getFor_updateAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_update__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_update__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_update__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_updateAccess().getUpdateOpAssignment_2()); }
(rule__For_update__UpdateOpAssignment_2)
{ after(grammarAccess.getFor_updateAccess().getUpdateOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__For_update_operator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_update_operator__Group__0__Impl
	rule__For_update_operator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_update_operator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_update_operatorAccess().getFor_update_operatorAction_0()); }
(

)
{ after(grammarAccess.getFor_update_operatorAccess().getFor_update_operatorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_update_operator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_update_operator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_update_operator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_update_operatorAccess().getNameAssignment_1()); }
(rule__For_update_operator__NameAssignment_1)
{ after(grammarAccess.getFor_update_operatorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_expression_operator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_expression_operator__Group__0__Impl
	rule__For_expression_operator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression_operator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expression_operatorAccess().getFor_expression_operatorAction_0()); }
(

)
{ after(grammarAccess.getFor_expression_operatorAccess().getFor_expression_operatorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_expression_operator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_expression_operator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression_operator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expression_operatorAccess().getNameAssignment_1()); }
(rule__For_expression_operator__NameAssignment_1)
{ after(grammarAccess.getFor_expression_operatorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parens_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parens_expression__Group__0__Impl
	rule__Parens_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParens_expressionAccess().getLparentAssignment_0()); }
(rule__Parens_expression__LparentAssignment_0)
{ after(grammarAccess.getParens_expressionAccess().getLparentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parens_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parens_expression__Group__1__Impl
	rule__Parens_expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParens_expressionAccess().getExpressionAssignment_1()); }
(rule__Parens_expression__ExpressionAssignment_1)
{ after(grammarAccess.getParens_expressionAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parens_expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parens_expression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parens_expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParens_expressionAccess().getRparentAssignment_2()); }
(rule__Parens_expression__RparentAssignment_2)
{ after(grammarAccess.getParens_expressionAccess().getRparentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__0__Impl
	rule__Expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpression1Assignment_0()); }
(rule__Expression_list__Expression1Assignment_0)
{ after(grammarAccess.getExpression_listAccess().getExpression1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getGroup_1()); }
(rule__Expression_list__Group_1__0)*
{ after(grammarAccess.getExpression_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__0__Impl
	rule__Expression_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpression2Assignment_1_1()); }
(rule__Expression_list__Expression2Assignment_1_1)
{ after(grammarAccess.getExpression_listAccess().getExpression2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getConditional_expressionParserRuleCall_0()); }
	ruleConditional_expression
{ after(grammarAccess.getExpressionAccess().getConditional_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentoperatorAssignment_1_0()); }
(rule__Expression__AssignmentoperatorAssignment_1_0)
{ after(grammarAccess.getExpressionAccess().getAssignmentoperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionAssignment_1_1()); }
(rule__Expression__ExpressionAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group__0__Impl
	rule__Conditional_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getConditionalorexpressionAssignment_0()); }
(rule__Conditional_expression__ConditionalorexpressionAssignment_0)
{ after(grammarAccess.getConditional_expressionAccess().getConditionalorexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getGroup_1()); }
(rule__Conditional_expression__Group_1__0)?
{ after(grammarAccess.getConditional_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group_1__0__Impl
	rule__Conditional_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_0()); }

	'?' 

{ after(grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group_1__1__Impl
	rule__Conditional_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getExpression1Assignment_1_1()); }
(rule__Conditional_expression__Expression1Assignment_1_1)
{ after(grammarAccess.getConditional_expressionAccess().getExpression1Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group_1__2__Impl
	rule__Conditional_expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getConditional_expressionAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getExpression2Assignment_1_3()); }
(rule__Conditional_expression__Expression2Assignment_1_3)
{ after(grammarAccess.getConditional_expressionAccess().getExpression2Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Conditional_OR_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_OR_expression__Group__0__Impl
	rule__Conditional_OR_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_OR_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionAssignment_0()); }
(rule__Conditional_OR_expression__ConditionalandexpressionAssignment_0)
{ after(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_OR_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_OR_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_OR_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_OR_expressionAccess().getGroup_1()); }
(rule__Conditional_OR_expression__Group_1__0)*
{ after(grammarAccess.getConditional_OR_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_OR_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_OR_expression__Group_1__0__Impl
	rule__Conditional_OR_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_OR_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_OR_expressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getConditional_OR_expressionAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_OR_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_OR_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_OR_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionAssignment_1_1()); }
(rule__Conditional_OR_expression__ConditionalandexpressionAssignment_1_1)
{ after(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_AND_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_AND_expression__Group__0__Impl
	rule__Conditional_AND_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_AND_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionAssignment_0()); }
(rule__Conditional_AND_expression__InclusiveorexpressionAssignment_0)
{ after(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_AND_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_AND_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_AND_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_AND_expressionAccess().getGroup_1()); }
(rule__Conditional_AND_expression__Group_1__0)*
{ after(grammarAccess.getConditional_AND_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_AND_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_AND_expression__Group_1__0__Impl
	rule__Conditional_AND_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_AND_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_AND_expressionAccess().getAmpersandAmpersandKeyword_1_0()); }

	'&&' 

{ after(grammarAccess.getConditional_AND_expressionAccess().getAmpersandAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_AND_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_AND_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_AND_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionAssignment_1_1()); }
(rule__Conditional_AND_expression__InclusiveorexpressionAssignment_1_1)
{ after(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Inclusive_OR_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inclusive_OR_expression__Group__0__Impl
	rule__Inclusive_OR_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_OR_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionAssignment_0()); }
(rule__Inclusive_OR_expression__ExclusiveorexpressionAssignment_0)
{ after(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inclusive_OR_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inclusive_OR_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_OR_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_OR_expressionAccess().getGroup_1()); }
(rule__Inclusive_OR_expression__Group_1__0)*
{ after(grammarAccess.getInclusive_OR_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Inclusive_OR_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inclusive_OR_expression__Group_1__0__Impl
	rule__Inclusive_OR_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_OR_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_OR_expressionAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getInclusive_OR_expressionAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inclusive_OR_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inclusive_OR_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_OR_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionAssignment_1_1()); }
(rule__Inclusive_OR_expression__ExclusiveorexpressionAssignment_1_1)
{ after(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exclusive_OR_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exclusive_OR_expression__Group__0__Impl
	rule__Exclusive_OR_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_OR_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAssignment_0()); }
(rule__Exclusive_OR_expression__AndexpressionAssignment_0)
{ after(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exclusive_OR_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exclusive_OR_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_OR_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_OR_expressionAccess().getGroup_1()); }
(rule__Exclusive_OR_expression__Group_1__0)*
{ after(grammarAccess.getExclusive_OR_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exclusive_OR_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exclusive_OR_expression__Group_1__0__Impl
	rule__Exclusive_OR_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_OR_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_OR_expressionAccess().getCircumflexAccentKeyword_1_0()); }

	'^' 

{ after(grammarAccess.getExclusive_OR_expressionAccess().getCircumflexAccentKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exclusive_OR_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exclusive_OR_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_OR_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAssignment_1_1()); }
(rule__Exclusive_OR_expression__AndexpressionAssignment_1_1)
{ after(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AND_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND_expression__Group__0__Impl
	rule__AND_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AND_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAND_expressionAccess().getEqualityexpressionAssignment_0()); }
(rule__AND_expression__EqualityexpressionAssignment_0)
{ after(grammarAccess.getAND_expressionAccess().getEqualityexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AND_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AND_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAND_expressionAccess().getGroup_1()); }
(rule__AND_expression__Group_1__0)*
{ after(grammarAccess.getAND_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AND_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND_expression__Group_1__0__Impl
	rule__AND_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AND_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAND_expressionAccess().getAmpersandKeyword_1_0()); }

	'&' 

{ after(grammarAccess.getAND_expressionAccess().getAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AND_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AND_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAND_expressionAccess().getEqualityexpressionAssignment_1_1()); }
(rule__AND_expression__EqualityexpressionAssignment_1_1)
{ after(grammarAccess.getAND_expressionAccess().getEqualityexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equality_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equality_expression__Group__0__Impl
	rule__Equality_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionAssignment_0()); }
(rule__Equality_expression__InstanceofexpressionAssignment_0)
{ after(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equality_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getGroup_1()); }
(rule__Equality_expression__Group_1__0)*
{ after(grammarAccess.getEquality_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equality_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equality_expression__Group_1__0__Impl
	rule__Equality_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getAlternatives_1_0()); }
(rule__Equality_expression__Alternatives_1_0)
{ after(grammarAccess.getEquality_expressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equality_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equality_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionAssignment_1_1()); }
(rule__Equality_expression__InstanceofexpressionAssignment_1_1)
{ after(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOf_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOf_expression__Group__0__Impl
	rule__InstanceOf_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOf_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOf_expressionAccess().getRelational_expressionParserRuleCall_0()); }
	ruleRelational_expression
{ after(grammarAccess.getInstanceOf_expressionAccess().getRelational_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOf_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOf_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOf_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOf_expressionAccess().getGroup_1()); }
(rule__InstanceOf_expression__Group_1__0)?
{ after(grammarAccess.getInstanceOf_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOf_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOf_expression__Group_1__0__Impl
	rule__InstanceOf_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOf_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOf_expressionAccess().getInstanceofKeyword_1_0()); }

	'instanceof' 

{ after(grammarAccess.getInstanceOf_expressionAccess().getInstanceofKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOf_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOf_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOf_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOf_expressionAccess().getTypeAssignment_1_1()); }
(rule__InstanceOf_expression__TypeAssignment_1_1)
{ after(grammarAccess.getInstanceOf_expressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_expression__Group__0__Impl
	rule__Relational_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getShiftexpressionAssignment_0()); }
(rule__Relational_expression__ShiftexpressionAssignment_0)
{ after(grammarAccess.getRelational_expressionAccess().getShiftexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getGroup_1()); }
(rule__Relational_expression__Group_1__0)*
{ after(grammarAccess.getRelational_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_expression__Group_1__0__Impl
	rule__Relational_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getRelationalopAssignment_1_0()); }
(rule__Relational_expression__RelationalopAssignment_1_0)
{ after(grammarAccess.getRelational_expressionAccess().getRelationalopAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getShiftexpressionAssignment_1_1()); }
(rule__Relational_expression__ShiftexpressionAssignment_1_1)
{ after(grammarAccess.getRelational_expressionAccess().getShiftexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_expression__Group__0__Impl
	rule__Shift_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAssignment_0()); }
(rule__Shift_expression__AdditiveexpressionAssignment_0)
{ after(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getGroup_1()); }
(rule__Shift_expression__Group_1__0)*
{ after(grammarAccess.getShift_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_expression__Group_1__0__Impl
	rule__Shift_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getShiftopAssignment_1_0()); }
(rule__Shift_expression__ShiftopAssignment_1_0)
{ after(grammarAccess.getShift_expressionAccess().getShiftopAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAssignment_1_1()); }
(rule__Shift_expression__AdditiveexpressionAssignment_1_1)
{ after(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Additive_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Additive_expression__Group__0__Impl
	rule__Additive_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionAssignment_0()); }
(rule__Additive_expression__MultiplicativeexpressionAssignment_0)
{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Additive_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getGroup_1()); }
(rule__Additive_expression__Group_1__0)*
{ after(grammarAccess.getAdditive_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Additive_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Additive_expression__Group_1__0__Impl
	rule__Additive_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getAlternatives_1_0()); }
(rule__Additive_expression__Alternatives_1_0)
{ after(grammarAccess.getAdditive_expressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Additive_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Additive_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionAssignment_1_1()); }
(rule__Additive_expression__MultiplicativeexpressionAssignment_1_1)
{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplicative_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicative_expression__Group__0__Impl
	rule__Multiplicative_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionAssignment_0()); }
(rule__Multiplicative_expression__UnaryexpressionAssignment_0)
{ after(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicative_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getGroup_1()); }
(rule__Multiplicative_expression__Group_1__0)*
{ after(grammarAccess.getMultiplicative_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Multiplicative_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicative_expression__Group_1__0__Impl
	rule__Multiplicative_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getAlternatives_1_0()); }
(rule__Multiplicative_expression__Alternatives_1_0)
{ after(grammarAccess.getMultiplicative_expressionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicative_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Multiplicative_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionAssignment_1_1()); }
(rule__Multiplicative_expression__UnaryexpressionAssignment_1_1)
{ after(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_0__0__Impl
	rule__Unary_expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getUnary_expressionAccess().getPlusSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_0_1()); }
	ruleUnary_expression
{ after(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_1__0__Impl
	rule__Unary_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getHyphenMinusKeyword_1_0()); }

	'-' 

{ after(grammarAccess.getUnary_expressionAccess().getHyphenMinusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_1_1()); }
	ruleUnary_expression
{ after(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_2__0__Impl
	rule__Unary_expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getPlusSignPlusSignKeyword_2_0()); }

	'++' 

{ after(grammarAccess.getUnary_expressionAccess().getPlusSignPlusSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_2_1()); }
	ruleUnary_expression
{ after(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_3__0__Impl
	rule__Unary_expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getHyphenMinusHyphenMinusKeyword_3_0()); }

	'--' 

{ after(grammarAccess.getUnary_expressionAccess().getHyphenMinusHyphenMinusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_3_1()); }
	ruleUnary_expression
{ after(grammarAccess.getUnary_expressionAccess().getUnary_expressionParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression_Not_Plus_Minus__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group__0__Impl
	rule__Unary_expression_Not_Plus_Minus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnary_expression_Not_Plus_MinusAction_0()); }
(

)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnary_expression_Not_Plus_MinusAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression_Not_Plus_Minus__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getAlternatives_1()); }
(rule__Unary_expression_Not_Plus_Minus__Alternatives_1)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression_Not_Plus_Minus__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group_1_0__0__Impl
	rule__Unary_expression_Not_Plus_Minus__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getTildeKeyword_1_0_0()); }

	'~' 

{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getTildeKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression_Not_Plus_Minus__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionAssignment_1_0_1()); }
(rule__Unary_expression_Not_Plus_Minus__UnaryexpressionAssignment_1_0_1)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression_Not_Plus_Minus__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group_1_1__0__Impl
	rule__Unary_expression_Not_Plus_Minus__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getExclamationMarkKeyword_1_1_0()); }

	'!' 

{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getExclamationMarkKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression_Not_Plus_Minus__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionAssignment_1_1_1()); }
(rule__Unary_expression_Not_Plus_Minus__UnaryexpressionAssignment_1_1_1)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary_expression_Not_Plus_Minus__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group_1_3__0__Impl
	rule__Unary_expression_Not_Plus_Minus__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getPrimaryAssignment_1_3_0()); }
(rule__Unary_expression_Not_Plus_Minus__PrimaryAssignment_1_3_0)
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getPrimaryAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression_Not_Plus_Minus__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group_1_3__1__Impl
	rule__Unary_expression_Not_Plus_Minus__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getSelectorAssignment_1_3_1()); }
(rule__Unary_expression_Not_Plus_Minus__SelectorAssignment_1_3_1)*
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getSelectorAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary_expression_Not_Plus_Minus__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary_expression_Not_Plus_Minus__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getAlternatives_1_3_2()); }
(rule__Unary_expression_Not_Plus_Minus__Alternatives_1_3_2)?
{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getAlternatives_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cast_expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_0__0__Impl
	rule__Cast_expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getCast_expressionAction_0_0()); }
(

)
{ after(grammarAccess.getCast_expressionAccess().getCast_expressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_0__1__Impl
	rule__Cast_expression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getLparentAssignment_0_1()); }
(rule__Cast_expression__LparentAssignment_0_1)
{ after(grammarAccess.getCast_expressionAccess().getLparentAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_0__2__Impl
	rule__Cast_expression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getPrimitivetypeAssignment_0_2()); }
(rule__Cast_expression__PrimitivetypeAssignment_0_2)
{ after(grammarAccess.getCast_expressionAccess().getPrimitivetypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_0__3__Impl
	rule__Cast_expression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getRparentAssignment_0_3()); }
(rule__Cast_expression__RparentAssignment_0_3)
{ after(grammarAccess.getCast_expressionAccess().getRparentAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getUnaryexpressionAssignment_0_4()); }
(rule__Cast_expression__UnaryexpressionAssignment_0_4)
{ after(grammarAccess.getCast_expressionAccess().getUnaryexpressionAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Cast_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_1__0__Impl
	rule__Cast_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getLparentAssignment_1_0()); }
(rule__Cast_expression__LparentAssignment_1_0)
{ after(grammarAccess.getCast_expressionAccess().getLparentAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_1__1__Impl
	rule__Cast_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getAlternatives_1_1()); }
(rule__Cast_expression__Alternatives_1_1)
{ after(grammarAccess.getCast_expressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_1__2__Impl
	rule__Cast_expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getRparentAssignment_1_2()); }
(rule__Cast_expression__RparentAssignment_1_2)
{ after(grammarAccess.getCast_expressionAccess().getRparentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_expression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_expression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getUnaryexpressionnotplusminusAssignment_1_3()); }
(rule__Cast_expression__UnaryexpressionnotplusminusAssignment_1_3)
{ after(grammarAccess.getCast_expressionAccess().getUnaryexpressionnotplusminusAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Primary_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group__0__Impl
	rule__Primary_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getPrimary_expressionAction_0()); }
(

)
{ after(grammarAccess.getPrimary_expressionAccess().getPrimary_expressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getAlternatives_1()); }
(rule__Primary_expression__Alternatives_1)
{ after(grammarAccess.getPrimary_expressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary_expression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_1__0__Impl
	rule__Primary_expression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getThisKeyword_1_1_0()); }

	'this' 

{ after(grammarAccess.getPrimary_expressionAccess().getThisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_1__1__Impl
	rule__Primary_expression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_1_1()); }
(rule__Primary_expression__Group_1_1_1__0)*
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixAssignment_1_1_2()); }
(rule__Primary_expression__IdentifiersuffixAssignment_1_1_2)?
{ after(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary_expression__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_1_1__0__Impl
	rule__Primary_expression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getFullStopKeyword_1_1_1_0()); }

	'.' 

{ after(grammarAccess.getPrimary_expressionAccess().getFullStopKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_1_1_1()); }
(rule__Primary_expression__IdentifierAssignment_1_1_1_1)
{ after(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary_expression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_2__0__Impl
	rule__Primary_expression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getSuperKeyword_1_2_0()); }

	'super' 

{ after(grammarAccess.getPrimary_expressionAccess().getSuperKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getSupersuffixAssignment_1_2_1()); }
(rule__Primary_expression__SupersuffixAssignment_1_2_1)
{ after(grammarAccess.getPrimary_expressionAccess().getSupersuffixAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary_expression__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_4__0__Impl
	rule__Primary_expression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getNewKeyword_1_4_0()); }

	'new' 

{ after(grammarAccess.getPrimary_expressionAccess().getNewKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getCreatorAssignment_1_4_1()); }
(rule__Primary_expression__CreatorAssignment_1_4_1)
{ after(grammarAccess.getPrimary_expressionAccess().getCreatorAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary_expression__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_5__0__Impl
	rule__Primary_expression__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_5_0()); }
(rule__Primary_expression__IdentifierAssignment_1_5_0)
{ after(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_5__1__Impl
	rule__Primary_expression__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_5_1()); }
(rule__Primary_expression__Group_1_5_1__0)*
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixAssignment_1_5_2()); }
(rule__Primary_expression__IdentifiersuffixAssignment_1_5_2)?
{ after(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixAssignment_1_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary_expression__Group_1_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_5_1__0__Impl
	rule__Primary_expression__Group_1_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getFullStopKeyword_1_5_1_0()); }

	'.' 

{ after(grammarAccess.getPrimary_expressionAccess().getFullStopKeyword_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_5_1_1()); }
(rule__Primary_expression__IdentifierAssignment_1_5_1_1)
{ after(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary_expression__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_6__0__Impl
	rule__Primary_expression__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getPrimitivetypeAssignment_1_6_0()); }
(rule__Primary_expression__PrimitivetypeAssignment_1_6_0)
{ after(grammarAccess.getPrimary_expressionAccess().getPrimitivetypeAssignment_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_6__1__Impl
	rule__Primary_expression__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getGroup_1_6_1()); }
(rule__Primary_expression__Group_1_6_1__0)*
{ after(grammarAccess.getPrimary_expressionAccess().getGroup_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_6__2__Impl
	rule__Primary_expression__Group_1_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getFullStopKeyword_1_6_2()); }

	'.' 

{ after(grammarAccess.getPrimary_expressionAccess().getFullStopKeyword_1_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getClassKeyword_1_6_3()); }

	'class' 

{ after(grammarAccess.getPrimary_expressionAccess().getClassKeyword_1_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Primary_expression__Group_1_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_6_1__0__Impl
	rule__Primary_expression__Group_1_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getLeftSquareBracketKeyword_1_6_1_0()); }

	'[' 

{ after(grammarAccess.getPrimary_expressionAccess().getLeftSquareBracketKeyword_1_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getRightSquareBracketKeyword_1_6_1_1()); }

	']' 

{ after(grammarAccess.getPrimary_expressionAccess().getRightSquareBracketKeyword_1_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary_expression__Group_1_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_7__0__Impl
	rule__Primary_expression__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getVoidKeyword_1_7_0()); }

	'void' 

{ after(grammarAccess.getPrimary_expressionAccess().getVoidKeyword_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_7__1__Impl
	rule__Primary_expression__Group_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getFullStopKeyword_1_7_1()); }

	'.' 

{ after(grammarAccess.getPrimary_expressionAccess().getFullStopKeyword_1_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary_expression__Group_1_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary_expression__Group_1_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__Group_1_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getClassKeyword_1_7_2()); }

	'class' 

{ after(grammarAccess.getPrimary_expressionAccess().getClassKeyword_1_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Identifier_suffix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group__0__Impl
	rule__Identifier_suffix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getIdentifier_suffixAction_0()); }
(

)
{ after(grammarAccess.getIdentifier_suffixAccess().getIdentifier_suffixAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getAlternatives_1()); }
(rule__Identifier_suffix__Alternatives_1)
{ after(grammarAccess.getIdentifier_suffixAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Identifier_suffix__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_0__0__Impl
	rule__Identifier_suffix__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup_1_0_0()); }
(rule__Identifier_suffix__Group_1_0_0__0)
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup_1_0_0()); }
)
(
{ before(grammarAccess.getIdentifier_suffixAccess().getGroup_1_0_0()); }
(rule__Identifier_suffix__Group_1_0_0__0)*
{ after(grammarAccess.getIdentifier_suffixAccess().getGroup_1_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_0__1__Impl
	rule__Identifier_suffix__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_0_1()); }

	'.' 

{ after(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getClassKeyword_1_0_2()); }

	'class' 

{ after(grammarAccess.getIdentifier_suffixAccess().getClassKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Identifier_suffix__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_0_0__0__Impl
	rule__Identifier_suffix__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getLeftSquareBracketKeyword_1_0_0_0()); }

	'[' 

{ after(grammarAccess.getIdentifier_suffixAccess().getLeftSquareBracketKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getRightSquareBracketKeyword_1_0_0_1()); }

	']' 

{ after(grammarAccess.getIdentifier_suffixAccess().getRightSquareBracketKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Identifier_suffix__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_2__0__Impl
	rule__Identifier_suffix__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_2_0()); }

	'.' 

{ after(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getClassKeyword_1_2_1()); }

	'class' 

{ after(grammarAccess.getIdentifier_suffixAccess().getClassKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Identifier_suffix__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_3__0__Impl
	rule__Identifier_suffix__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_3_0()); }

	'.' 

{ after(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getExplicitgenericinvocationAssignment_1_3_1()); }
(rule__Identifier_suffix__ExplicitgenericinvocationAssignment_1_3_1)
{ after(grammarAccess.getIdentifier_suffixAccess().getExplicitgenericinvocationAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Identifier_suffix__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_4__0__Impl
	rule__Identifier_suffix__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_4_0()); }

	'.' 

{ after(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getThisKeyword_1_4_1()); }

	'this' 

{ after(grammarAccess.getIdentifier_suffixAccess().getThisKeyword_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Identifier_suffix__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_5__0__Impl
	rule__Identifier_suffix__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_5_0()); }

	'.' 

{ after(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_5__1__Impl
	rule__Identifier_suffix__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getSuperKeyword_1_5_1()); }

	'super' 

{ after(grammarAccess.getIdentifier_suffixAccess().getSuperKeyword_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getArgumentsAssignment_1_5_2()); }
(rule__Identifier_suffix__ArgumentsAssignment_1_5_2)
{ after(grammarAccess.getIdentifier_suffixAccess().getArgumentsAssignment_1_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Identifier_suffix__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_6__0__Impl
	rule__Identifier_suffix__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_6_0()); }

	'.' 

{ after(grammarAccess.getIdentifier_suffixAccess().getFullStopKeyword_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_6__1__Impl
	rule__Identifier_suffix__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getNewKeyword_1_6_1()); }

	'new' 

{ after(grammarAccess.getIdentifier_suffixAccess().getNewKeyword_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_suffix__Group_1_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_suffix__Group_1_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__Group_1_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getInnercreatorAssignment_1_6_2()); }
(rule__Identifier_suffix__InnercreatorAssignment_1_6_2)
{ after(grammarAccess.getIdentifier_suffixAccess().getInnercreatorAssignment_1_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Creator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creator__Group_0__0__Impl
	rule__Creator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getNon_wildcard_type_argumentsParserRuleCall_0_0()); }
	ruleNon_wildcard_type_arguments
{ after(grammarAccess.getCreatorAccess().getNon_wildcard_type_argumentsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creator__Group_0__1__Impl
	rule__Creator__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getCreatednameAssignment_0_1()); }
(rule__Creator__CreatednameAssignment_0_1)
{ after(grammarAccess.getCreatorAccess().getCreatednameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creator__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creator__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getClasscreatorrestAssignment_0_2()); }
(rule__Creator__ClasscreatorrestAssignment_0_2)
{ after(grammarAccess.getCreatorAccess().getClasscreatorrestAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Creator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creator__Group_1__0__Impl
	rule__Creator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getCreated_nameParserRuleCall_1_0()); }
	ruleCreated_name
{ after(grammarAccess.getCreatorAccess().getCreated_nameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getAlternatives_1_1()); }
(rule__Creator__Alternatives_1_1)
{ after(grammarAccess.getCreatorAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Created_name__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Created_name__Group__0__Impl
	rule__Created_name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Created_name__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreated_nameAccess().getCreated_nameAction_0()); }
(

)
{ after(grammarAccess.getCreated_nameAccess().getCreated_nameAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Created_name__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Created_name__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Created_name__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreated_nameAccess().getAlternatives_1()); }
(rule__Created_name__Alternatives_1)
{ after(grammarAccess.getCreated_nameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Inner_creator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inner_creator__Group__0__Impl
	rule__Inner_creator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inner_creator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInner_creatorAccess().getNonwildcardtypeargumentsAssignment_0()); }
(rule__Inner_creator__NonwildcardtypeargumentsAssignment_0)?
{ after(grammarAccess.getInner_creatorAccess().getNonwildcardtypeargumentsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inner_creator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inner_creator__Group__1__Impl
	rule__Inner_creator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inner_creator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInner_creatorAccess().getIdentifierAssignment_1()); }
(rule__Inner_creator__IdentifierAssignment_1)
{ after(grammarAccess.getInner_creatorAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Inner_creator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Inner_creator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inner_creator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInner_creatorAccess().getClasscreatorrestAssignment_2()); }
(rule__Inner_creator__ClasscreatorrestAssignment_2)
{ after(grammarAccess.getInner_creatorAccess().getClasscreatorrestAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Array_creator_rest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group__0__Impl
	rule__Array_creator_rest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArray_creator_restAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getAlternatives_1()); }
(rule__Array_creator_rest__Alternatives_1)
{ after(grammarAccess.getArray_creator_restAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array_creator_rest__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_0__0__Impl
	rule__Array_creator_rest__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_0_0()); }

	']' 

{ after(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_0__1__Impl
	rule__Array_creator_rest__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getGroup_1_0_1()); }
(rule__Array_creator_rest__Group_1_0_1__0)*
{ after(grammarAccess.getArray_creator_restAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getArray_initializerParserRuleCall_1_0_2()); }
	ruleArray_initializer
{ after(grammarAccess.getArray_creator_restAccess().getArray_initializerParserRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Array_creator_rest__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_0_1__0__Impl
	rule__Array_creator_rest__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getLeftSquareBracketKeyword_1_0_1_0()); }

	'[' 

{ after(grammarAccess.getArray_creator_restAccess().getLeftSquareBracketKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_0_1_1()); }

	']' 

{ after(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array_creator_rest__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1__0__Impl
	rule__Array_creator_rest__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getExpressionAssignment_1_1_0()); }
(rule__Array_creator_rest__ExpressionAssignment_1_1_0)
{ after(grammarAccess.getArray_creator_restAccess().getExpressionAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1__1__Impl
	rule__Array_creator_rest__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_1_1()); }

	']' 

{ after(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1__2__Impl
	rule__Array_creator_rest__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getGroup_1_1_2()); }
(rule__Array_creator_rest__Group_1_1_2__0)*
{ after(grammarAccess.getArray_creator_restAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getGroup_1_1_3()); }
(rule__Array_creator_rest__Group_1_1_3__0)*
{ after(grammarAccess.getArray_creator_restAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Array_creator_rest__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1_2__0__Impl
	rule__Array_creator_rest__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getLeftSquareBracketKeyword_1_1_2_0()); }
(
	'[' 
)
{ after(grammarAccess.getArray_creator_restAccess().getLeftSquareBracketKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1_2__1__Impl
	rule__Array_creator_rest__Group_1_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getExpressionAssignment_1_1_2_1()); }
(rule__Array_creator_rest__ExpressionAssignment_1_1_2_1)
{ after(grammarAccess.getArray_creator_restAccess().getExpressionAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_1_2_2()); }

	']' 

{ after(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Array_creator_rest__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1_3__0__Impl
	rule__Array_creator_rest__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getLeftSquareBracketKeyword_1_1_3_0()); }

	'[' 

{ after(grammarAccess.getArray_creator_restAccess().getLeftSquareBracketKeyword_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_creator_rest__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_creator_rest__Group_1_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_1_3_1()); }

	']' 

{ after(grammarAccess.getArray_creator_restAccess().getRightSquareBracketKeyword_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_creator_rest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_creator_rest__Group__0__Impl
	rule__Class_creator_rest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_creator_rest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_creator_restAccess().getArgumentsAssignment_0()); }
(rule__Class_creator_rest__ArgumentsAssignment_0)
{ after(grammarAccess.getClass_creator_restAccess().getArgumentsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_creator_rest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_creator_rest__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_creator_rest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_creator_restAccess().getClassbodyAssignment_1()); }
(rule__Class_creator_rest__ClassbodyAssignment_1)?
{ after(grammarAccess.getClass_creator_restAccess().getClassbodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Explicit_generic_invocation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explicit_generic_invocation__Group__0__Impl
	rule__Explicit_generic_invocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Explicit_generic_invocation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicit_generic_invocationAccess().getNonwildcardtypeargumentsAssignment_0()); }
(rule__Explicit_generic_invocation__NonwildcardtypeargumentsAssignment_0)
{ after(grammarAccess.getExplicit_generic_invocationAccess().getNonwildcardtypeargumentsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Explicit_generic_invocation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explicit_generic_invocation__Group__1__Impl
	rule__Explicit_generic_invocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Explicit_generic_invocation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicit_generic_invocationAccess().getIdentifierAssignment_1()); }
(rule__Explicit_generic_invocation__IdentifierAssignment_1)
{ after(grammarAccess.getExplicit_generic_invocationAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Explicit_generic_invocation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Explicit_generic_invocation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Explicit_generic_invocation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicit_generic_invocationAccess().getArgumentsAssignment_2()); }
(rule__Explicit_generic_invocation__ArgumentsAssignment_2)
{ after(grammarAccess.getExplicit_generic_invocationAccess().getArgumentsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Non_wildcard_type_arguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Non_wildcard_type_arguments__Group__0__Impl
	rule__Non_wildcard_type_arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Non_wildcard_type_arguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNon_wildcard_type_argumentsAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getNon_wildcard_type_argumentsAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Non_wildcard_type_arguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Non_wildcard_type_arguments__Group__1__Impl
	rule__Non_wildcard_type_arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Non_wildcard_type_arguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNon_wildcard_type_argumentsAccess().getTypeAssignment_1()); }
(rule__Non_wildcard_type_arguments__TypeAssignment_1)
{ after(grammarAccess.getNon_wildcard_type_argumentsAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Non_wildcard_type_arguments__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Non_wildcard_type_arguments__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Non_wildcard_type_arguments__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNon_wildcard_type_argumentsAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getNon_wildcard_type_argumentsAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Selector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorAction_0()); }
(

)
{ after(grammarAccess.getSelectorAccess().getSelectorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getAlternatives_1()); }
(rule__Selector__Alternatives_1)
{ after(grammarAccess.getSelectorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__0__Impl
	rule__Selector__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getSelectorAccess().getFullStopKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__1__Impl
	rule__Selector__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSuperKeyword_1_0_1()); }

	'super' 

{ after(grammarAccess.getSelectorAccess().getSuperKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSupersuffixAssignment_1_0_2()); }
(rule__Selector__SupersuffixAssignment_1_0_2)
{ after(grammarAccess.getSelectorAccess().getSupersuffixAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Selector__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__0__Impl
	rule__Selector__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getSelectorAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__1__Impl
	rule__Selector__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getNewKeyword_1_1_1()); }

	'new' 

{ after(grammarAccess.getSelectorAccess().getNewKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getInnercreatorAssignment_1_1_2()); }
(rule__Selector__InnercreatorAssignment_1_1_2)
{ after(grammarAccess.getSelectorAccess().getInnercreatorAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Selector__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_2__0__Impl
	rule__Selector__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_1_2_0()); }

	'[' 

{ after(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_2__1__Impl
	rule__Selector__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getExpressionAssignment_1_2_1()); }
(rule__Selector__ExpressionAssignment_1_2_1)
{ after(grammarAccess.getSelectorAccess().getExpressionAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_1_2_2()); }

	']' 

{ after(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Super_suffix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Super_suffix__Group__0__Impl
	rule__Super_suffix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getSuper_suffixAction_0()); }
(

)
{ after(grammarAccess.getSuper_suffixAccess().getSuper_suffixAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Super_suffix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Super_suffix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getAlternatives_1()); }
(rule__Super_suffix__Alternatives_1)
{ after(grammarAccess.getSuper_suffixAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Super_suffix__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Super_suffix__Group_1_1__0__Impl
	rule__Super_suffix__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getSuper_suffixAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Super_suffix__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Super_suffix__Group_1_1__1__Impl
	rule__Super_suffix__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getIdentifierAssignment_1_1_1()); }
(rule__Super_suffix__IdentifierAssignment_1_1_1)
{ after(grammarAccess.getSuper_suffixAccess().getIdentifierAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Super_suffix__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Super_suffix__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getArgumentsAssignment_1_1_2()); }
(rule__Super_suffix__ArgumentsAssignment_1_1_2)?
{ after(grammarAccess.getSuper_suffixAccess().getArgumentsAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Arguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
(

)
{ after(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getLparentAssignment_1()); }
(rule__Arguments__LparentAssignment_1)
{ after(grammarAccess.getArgumentsAccess().getLparentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__2__Impl
	rule__Arguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2()); }
(rule__Arguments__ExpressionlistAssignment_2)?
{ after(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getRparentAssignment_3()); }
(rule__Arguments__RparentAssignment_3)
{ after(grammarAccess.getArgumentsAccess().getRparentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Switch_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__0__Impl
	rule__Switch_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getSwitch_statementAction_0()); }
(

)
{ after(grammarAccess.getSwitch_statementAccess().getSwitch_statementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__1__Impl
	rule__Switch_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getSwitch_statementAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__2__Impl
	rule__Switch_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getLParenAssignment_2()); }
(rule__Switch_statement__LParenAssignment_2)
{ after(grammarAccess.getSwitch_statementAccess().getLParenAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__3__Impl
	rule__Switch_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getExpressionAssignment_3()); }
(rule__Switch_statement__ExpressionAssignment_3)
{ after(grammarAccess.getSwitch_statementAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__4__Impl
	rule__Switch_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getRparentAssignment_4()); }
(rule__Switch_statement__RparentAssignment_4)
{ after(grammarAccess.getSwitch_statementAccess().getRparentAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__5__Impl
	rule__Switch_statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getSwitch_statementAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__6__Impl
	rule__Switch_statement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getAlternatives_6()); }
(rule__Switch_statement__Alternatives_6)*
{ after(grammarAccess.getSwitch_statementAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getSwitch_statementAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Switch_statement__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_6_0__0__Impl
	rule__Switch_statement__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getCaseKeyword_6_0_0()); }

	'case' 

{ after(grammarAccess.getSwitch_statementAccess().getCaseKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_6_0__1__Impl
	rule__Switch_statement__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getExpression2Assignment_6_0_1()); }
(rule__Switch_statement__Expression2Assignment_6_0_1)
{ after(grammarAccess.getSwitch_statementAccess().getExpression2Assignment_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group_6_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_6_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_6_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getColonKeyword_6_0_2()); }

	':' 

{ after(grammarAccess.getSwitch_statementAccess().getColonKeyword_6_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Switch_statement__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_6_1__0__Impl
	rule__Switch_statement__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getDefaultKeyword_6_1_0()); }

	'default' 

{ after(grammarAccess.getSwitch_statementAccess().getDefaultKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_statement__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_statement__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getColonKeyword_6_1_1()); }

	':' 

{ after(grammarAccess.getSwitch_statementAccess().getColonKeyword_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__While_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__0__Impl
	rule__While_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getWhileKeyword_0()); }

	'while(' 

{ after(grammarAccess.getWhile_StatementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__1__Impl
	rule__While_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getExpressionAssignment_1()); }
(rule__While_Statement__ExpressionAssignment_1)
{ after(grammarAccess.getWhile_StatementAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__2__Impl
	rule__While_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getRparentAssignment_2()); }
(rule__While_Statement__RparentAssignment_2)
{ after(grammarAccess.getWhile_StatementAccess().getRparentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getWhileStatementAssignment_3()); }
(rule__While_Statement__WhileStatementAssignment_3)
{ after(grammarAccess.getWhile_StatementAccess().getWhileStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Do_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__0__Impl
	rule__Do_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDo_StatementAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__1__Impl
	rule__Do_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getDoStatementAssignment_1()); }
(rule__Do_Statement__DoStatementAssignment_1)
{ after(grammarAccess.getDo_StatementAccess().getDoStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__2__Impl
	rule__Do_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDo_StatementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__3__Impl
	rule__Do_Statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getLparentAssignment_3()); }
(rule__Do_Statement__LparentAssignment_3)
{ after(grammarAccess.getDo_StatementAccess().getLparentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__4__Impl
	rule__Do_Statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getRparentAssignment_4()); }
(rule__Do_Statement__RparentAssignment_4)
{ after(grammarAccess.getDo_StatementAccess().getRparentAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getDo_StatementAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__If_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__0__Impl
	rule__If_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIf_statementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__1__Impl
	rule__If_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getLparenAssignment_1()); }
(rule__If_statement__LparenAssignment_1)
{ after(grammarAccess.getIf_statementAccess().getLparenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__2__Impl
	rule__If_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getExpressionAssignment_2()); }
(rule__If_statement__ExpressionAssignment_2)
{ after(grammarAccess.getIf_statementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__3__Impl
	rule__If_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getRparentAssignment_3()); }
(rule__If_statement__RparentAssignment_3)
{ after(grammarAccess.getIf_statementAccess().getRparentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__4__Impl
	rule__If_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getIdStatementAssignment_4()); }
(rule__If_statement__IdStatementAssignment_4)
{ after(grammarAccess.getIf_statementAccess().getIdStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getGroup_5()); }
(rule__If_statement__Group_5__0)?
{ after(grammarAccess.getIf_statementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__If_statement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_5__0__Impl
	rule__If_statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getElseKeyword_5_0()); }
(
	'else' 
)
{ after(grammarAccess.getIf_statementAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getElseStatementAssignment_5_1()); }
(rule__If_statement__ElseStatementAssignment_5_1)
{ after(grammarAccess.getIf_statementAccess().getElseStatementAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Try_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__0__Impl
	rule__Try_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getTryKeyword_0()); }

	'try' 

{ after(grammarAccess.getTry_statementAccess().getTryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__1__Impl
	rule__Try_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getTryStatementAssignment_1()); }
(rule__Try_statement__TryStatementAssignment_1)
{ after(grammarAccess.getTry_statementAccess().getTryStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__2__Impl
	rule__Try_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getGroup_2()); }
(rule__Try_statement__Group_2__0)*
{ after(grammarAccess.getTry_statementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getGroup_3()); }
(rule__Try_statement__Group_3__0)?
{ after(grammarAccess.getTry_statementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Try_statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__0__Impl
	rule__Try_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getCatchKeyword_2_0()); }
(
	'catch' 
)
{ after(grammarAccess.getTry_statementAccess().getCatchKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__1__Impl
	rule__Try_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getLParenAssignment_2_1()); }
(rule__Try_statement__LParenAssignment_2_1)
{ after(grammarAccess.getTry_statementAccess().getLParenAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__2__Impl
	rule__Try_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getParametersAssignment_2_2()); }
(rule__Try_statement__ParametersAssignment_2_2)
{ after(grammarAccess.getTry_statementAccess().getParametersAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__3__Impl
	rule__Try_statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getRparentAssignment_2_3()); }
(rule__Try_statement__RparentAssignment_2_3)
{ after(grammarAccess.getTry_statementAccess().getRparentAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getCatchStatementAssignment_2_4()); }
(rule__Try_statement__CatchStatementAssignment_2_4)
{ after(grammarAccess.getTry_statementAccess().getCatchStatementAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Try_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_3__0__Impl
	rule__Try_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getFinallyKeyword_3_0()); }
(
	'finally' 
)
{ after(grammarAccess.getTry_statementAccess().getFinallyKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getFinallyStatementAssignment_3_1()); }
(rule__Try_statement__FinallyStatementAssignment_3_1)
{ after(grammarAccess.getTry_statementAccess().getFinallyStatementAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group__0__Impl
	rule__Import_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImport_statementAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getAlternatives_1()); }
(rule__Import_statement__Alternatives_1)
{ after(grammarAccess.getImport_statementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import_statement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_0__0__Impl
	rule__Import_statement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getClassNameAssignment_1_0_0()); }
(rule__Import_statement__ClassNameAssignment_1_0_0)
{ after(grammarAccess.getImport_statementAccess().getClassNameAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getSemicolonKeyword_1_0_1()); }

	';' 

{ after(grammarAccess.getImport_statementAccess().getSemicolonKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import_statement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_1__0__Impl
	rule__Import_statement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getPacNameAssignment_1_1_0()); }
(rule__Import_statement__PacNameAssignment_1_1_0)
{ after(grammarAccess.getImport_statementAccess().getPacNameAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getFullStopAsteriskSemicolonKeyword_1_1_1()); }

	'.*;' 

{ after(grammarAccess.getImport_statementAccess().getFullStopAsteriskSemicolonKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_statement__Group__0__Impl
	rule__Package_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_statementAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackage_statementAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_statement__Group__1__Impl
	rule__Package_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_statementAccess().getPacNameAssignment_1()); }
(rule__Package_statement__PacNameAssignment_1)
{ after(grammarAccess.getPackage_statementAccess().getPacNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_statementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getPackage_statementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Package_name__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name__Group__0__Impl
	rule__Package_name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_nameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getPackage_nameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_name__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_nameAccess().getPackage_name_lineParserRuleCall_1()); }
	rulePackage_name_line
{ after(grammarAccess.getPackage_nameAccess().getPackage_name_lineParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package_name_line__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name_line__Group__0__Impl
	rule__Package_name_line__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name_line__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_name_lineAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getPackage_name_lineAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_name_line__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name_line__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name_line__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_name_lineAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getPackage_name_lineAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational_operator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_operator__Group_2__0__Impl
	rule__Relational_operator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_operator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_operatorAccess().getGreaterThanSignKeyword_2_0()); }

	'>' 

{ after(grammarAccess.getRelational_operatorAccess().getGreaterThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_operator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_operator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_operator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_operatorAccess().getEqualsSignKeyword_2_1()); }

	'=' 

{ after(grammarAccess.getRelational_operatorAccess().getEqualsSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relational_operator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_operator__Group_3__0__Impl
	rule__Relational_operator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_operator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_operatorAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getRelational_operatorAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relational_operator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relational_operator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_operator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_operatorAccess().getEqualsSignKeyword_3_1()); }

	'=' 

{ after(grammarAccess.getRelational_operatorAccess().getEqualsSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift_operator__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_operator__Group_0__0__Impl
	rule__Shift_operator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_operator__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_operatorAccess().getLessThanSignKeyword_0_0()); }

	'<' 

{ after(grammarAccess.getShift_operatorAccess().getLessThanSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_operator__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_operator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_operator__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_operatorAccess().getLessThanSignKeyword_0_1()); }

	'<' 

{ after(grammarAccess.getShift_operatorAccess().getLessThanSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Shift_operator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_operator__Group_1__0__Impl
	rule__Shift_operator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_operator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_1_0()); }

	'>' 

{ after(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_operator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_operator__Group_1__1__Impl
	rule__Shift_operator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_operator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_1_1()); }

	'>' 

{ after(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_operator__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_operator__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_operator__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_1_2()); }

	'>' 

{ after(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Shift_operator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_operator__Group_2__0__Impl
	rule__Shift_operator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_operator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_2_0()); }

	'>' 

{ after(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Shift_operator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Shift_operator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_operator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_2_1()); }

	'>' 

{ after(grammarAccess.getShift_operatorAccess().getGreaterThanSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__GreetingsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGreetingsCompilation_unitParserRuleCall_0()); }
	ruleCompilation_unit{ after(grammarAccess.getModelAccess().getGreetingsCompilation_unitParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getNamePackage_statementParserRuleCall_1_0()); }
	rulePackage_statement{ after(grammarAccess.getCompilation_unitAccess().getNamePackage_statementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getImportsImport_statementParserRuleCall_2_0()); }
	ruleImport_statement{ after(grammarAccess.getCompilation_unitAccess().getImportsImport_statementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__TypeDeclarationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getTypeDeclarationsType_declarationParserRuleCall_3_0()); }
	ruleType_declaration{ after(grammarAccess.getCompilation_unitAccess().getTypeDeclarationsType_declarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__CommentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getCommentDOC_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOC_COMMENT{ after(grammarAccess.getType_declarationAccess().getCommentDOC_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__ClassDecAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getClassDecClass_declarationParserRuleCall_1_0_0()); }
	ruleClass_declaration{ after(grammarAccess.getType_declarationAccess().getClassDecClass_declarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__InterfaceDecAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getInterfaceDecInterface_declarationParserRuleCall_1_1_0()); }
	ruleInterface_declaration{ after(grammarAccess.getType_declarationAccess().getInterfaceDecInterface_declarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getInterface_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__InterfaceNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getInterfaceNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getInterface_declarationAccess().getInterfaceNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__InterfaceHerdadaAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getInterfaceHerdadaInterface_nameParserRuleCall_3_1_0()); }
	ruleInterface_name{ after(grammarAccess.getInterface_declarationAccess().getInterfaceHerdadaInterface_nameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__InterfacesHerdadasAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getInterfacesHerdadasInterface_nameParserRuleCall_3_2_1_0()); }
	ruleInterface_name{ after(grammarAccess.getInterface_declarationAccess().getInterfacesHerdadasInterface_nameParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__FieldsDeclarationAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getFieldsDeclarationField_declarationParserRuleCall_5_0()); }
	ruleField_declaration{ after(grammarAccess.getInterface_declarationAccess().getFieldsDeclarationField_declarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getClass_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getClassNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getClass_declarationAccess().getClassNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__ClassHerdadaAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getClassHerdadaClass_nameParserRuleCall_3_1_0()); }
	ruleClass_name{ after(grammarAccess.getClass_declarationAccess().getClassHerdadaClass_nameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__InterfaceImplementadaAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getInterfaceImplementadaInterface_nameParserRuleCall_4_1_0()); }
	ruleInterface_name{ after(grammarAccess.getClass_declarationAccess().getInterfaceImplementadaInterface_nameParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__InterfacesImplementadasAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getInterfacesImplementadasInterface_nameParserRuleCall_4_2_1_0()); }
	ruleInterface_name{ after(grammarAccess.getClass_declarationAccess().getInterfacesImplementadasInterface_nameParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__FieldsDeclarationAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getFieldsDeclarationField_declarationParserRuleCall_6_0()); }
	ruleField_declaration{ after(grammarAccess.getClass_declarationAccess().getFieldsDeclarationField_declarationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__CommentAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getCommentDOC_COMMENTTerminalRuleCall_0_0_0()); }
	RULE_DOC_COMMENT{ after(grammarAccess.getField_declarationAccess().getCommentDOC_COMMENTTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__VariableDeclarationAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getVariableDeclarationVariable_declarationParserRuleCall_0_1_0_0()); }
	ruleVariable_declaration{ after(grammarAccess.getField_declarationAccess().getVariableDeclarationVariable_declarationParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__ContructorNameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getContructorNameConstructor_declarationParserRuleCall_0_1_1_0()); }
	ruleConstructor_declaration{ after(grammarAccess.getField_declarationAccess().getContructorNameConstructor_declarationParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__MethodNameAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getMethodNameMethod_declarationParserRuleCall_0_1_2_0()); }
	ruleMethod_declaration{ after(grammarAccess.getField_declarationAccess().getMethodNameMethod_declarationParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__StaticinitializerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getStaticinitializerStatic_initializerParserRuleCall_1_0()); }
	ruleStatic_initializer{ after(grammarAccess.getField_declarationAccess().getStaticinitializerStatic_initializerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__ModifiersMethodAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getModifiersMethodModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getMethod_declarationAccess().getModifiersMethodModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__TypeMethodAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getTypeMethodTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getMethod_declarationAccess().getTypeMethodTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__NameMethodAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getNameMethodIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMethod_declarationAccess().getNameMethodIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__LParenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getLParenLPARENTerminalRuleCall_3_0()); }
	RULE_LPAREN{ after(grammarAccess.getMethod_declarationAccess().getLParenLPARENTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__ParameterListMethodAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getParameterListMethodParameter_listParserRuleCall_4_0()); }
	ruleParameter_list{ after(grammarAccess.getMethod_declarationAccess().getParameterListMethodParameter_listParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__RparentAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getRparentRPARENTerminalRuleCall_5_0()); }
	RULE_RPAREN{ after(grammarAccess.getMethod_declarationAccess().getRparentRPARENTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__StatementMethodAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getStatementMethodStatement_blockParserRuleCall_7_0_0()); }
	ruleStatement_block{ after(grammarAccess.getMethod_declarationAccess().getStatementMethodStatement_blockParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__DebugAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getDebugSemicolonKeyword_7_1_0()); }
(
{ before(grammarAccess.getMethod_declarationAccess().getDebugSemicolonKeyword_7_1_0()); }

	';' 

{ after(grammarAccess.getMethod_declarationAccess().getDebugSemicolonKeyword_7_1_0()); }
)

{ after(grammarAccess.getMethod_declarationAccess().getDebugSemicolonKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__ModifiersConstructorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getModifiersConstructorModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getConstructor_declarationAccess().getModifiersConstructorModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__NameConstructorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getNameConstructorIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstructor_declarationAccess().getNameConstructorIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__LParenAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getLParenLPARENTerminalRuleCall_2_0()); }
	RULE_LPAREN{ after(grammarAccess.getConstructor_declarationAccess().getLParenLPARENTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__ParameterListConstructorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getParameterListConstructorParameter_listParserRuleCall_3_0()); }
	ruleParameter_list{ after(grammarAccess.getConstructor_declarationAccess().getParameterListConstructorParameter_listParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__RparentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getRparentRPARENTerminalRuleCall_4_0()); }
	RULE_RPAREN{ after(grammarAccess.getConstructor_declarationAccess().getRparentRPARENTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__StatementConstructorAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getStatementConstructorStatement_blockParserRuleCall_5_0()); }
	ruleStatement_block{ after(grammarAccess.getConstructor_declarationAccess().getStatementConstructorStatement_blockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__ParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParameterParameterParserRuleCall_0_0()); }
	ruleParameter{ after(grammarAccess.getParameter_listAccess().getParameterParameterParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParametersParameterParserRuleCall_1_1_0()); }
	ruleParameter{ after(grammarAccess.getParameter_listAccess().getParametersParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ParameterNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getParameterNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__ModifiersVariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getModifiersVariableModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getVariable_declarationAccess().getModifiersVariableModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getVariable_declarationAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__NameVariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getNameVariableVariable_declaratorParserRuleCall_2_0()); }
	ruleVariable_declarator{ after(grammarAccess.getVariable_declarationAccess().getNameVariableVariable_declaratorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__NamesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getNamesVariable_declaratorParserRuleCall_3_1_0()); }
	ruleVariable_declarator{ after(grammarAccess.getVariable_declarationAccess().getNamesVariable_declaratorParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__NameVariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getNameVariableIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getVariable_declaratorAccess().getNameVariableIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__VariAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getVariVariable_initializerParserRuleCall_2_1_0()); }
	ruleVariable_initializer{ after(grammarAccess.getVariable_declaratorAccess().getVariVariable_initializerParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__VariableinitializerAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getVariableinitializerVariable_initializerParserRuleCall_2_0_0()); }
	ruleVariable_initializer{ after(grammarAccess.getArray_initializerAccess().getVariableinitializerVariable_initializerParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_initializer__VariableinitializerAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_initializerAccess().getVariableinitializerVariable_initializerParserRuleCall_2_1_1_0()); }
	ruleVariable_initializer{ after(grammarAccess.getArray_initializerAccess().getVariableinitializerVariable_initializerParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeSpecifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeSpecifierType_specifierParserRuleCall_0_0()); }
	ruleType_specifier{ after(grammarAccess.getTypeAccess().getTypeSpecifierType_specifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__StaticAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getStaticSTATICTerminalRuleCall_0_0()); }
	RULE_STATIC{ after(grammarAccess.getStatic_initializerAccess().getStaticSTATICTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getNameStatement_blockParserRuleCall_1_0()); }
	ruleStatement_block{ after(grammarAccess.getStatic_initializerAccess().getNameStatement_blockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__StatmentsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getStatmentsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getStatement_blockAccess().getStatmentsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VariableDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariableDeclarationVariable_declarationParserRuleCall_0_0()); }
	ruleVariable_declaration{ after(grammarAccess.getStatementAccess().getVariableDeclarationVariable_declarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpressionStatementAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionStatementExpressionParserRuleCall_1_0_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getExpressionStatementExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGSemicolonKeyword_1_1_0()); }
(
{ before(grammarAccess.getStatementAccess().getGSemicolonKeyword_1_1_0()); }

	';' 

{ after(grammarAccess.getStatementAccess().getGSemicolonKeyword_1_1_0()); }
)

{ after(grammarAccess.getStatementAccess().getGSemicolonKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfStatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIfStatementIf_statementParserRuleCall_2_0()); }
	ruleIf_statement{ after(grammarAccess.getStatementAccess().getIfStatementIf_statementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DoStatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoStatementDo_StatementParserRuleCall_3_0()); }
	ruleDo_Statement{ after(grammarAccess.getStatementAccess().getDoStatementDo_StatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__WhileStatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileStatementWhile_StatementParserRuleCall_4_0()); }
	ruleWhile_Statement{ after(grammarAccess.getStatementAccess().getWhileStatementWhile_StatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForStatementAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForStatementFor_StatementParserRuleCall_5_0()); }
	ruleFor_Statement{ after(grammarAccess.getStatementAccess().getForStatementFor_StatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SwitchStatementAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSwitchStatementSwitch_statementParserRuleCall_6_0()); }
	ruleSwitch_statement{ after(grammarAccess.getStatementAccess().getSwitchStatementSwitch_statementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpressionAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_7_1_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RparentAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRparentRPARENTerminalRuleCall_7_2_0()); }
	RULE_RPAREN{ after(grammarAccess.getStatementAccess().getRparentRPARENTerminalRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SyncStatementAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSyncStatementStatementParserRuleCall_7_3_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getSyncStatementStatementParserRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpressionAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_8_2_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpressionAssignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_9_2_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TryStatementAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getTryStatementTry_statementParserRuleCall_11_0()); }
	ruleTry_statement{ after(grammarAccess.getStatementAccess().getTryStatementTry_statementParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameStatementAssignment_12_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameStatementIDTerminalRuleCall_12_0_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getNameStatementIDTerminalRuleCall_12_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_12_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_12_2_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_12_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_13_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_13_2_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_13_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_14_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_14_2_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_14_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__LparentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getLparentLPARENTerminalRuleCall_1_0()); }
	RULE_LPAREN{ after(grammarAccess.getFor_StatementAccess().getLparentLPARENTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__ForControlAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getForControlFor_controlParserRuleCall_2_0()); }
	ruleFor_control{ after(grammarAccess.getFor_StatementAccess().getForControlFor_controlParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__RParentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getRParentRPARENTerminalRuleCall_3_0()); }
	RULE_RPAREN{ after(grammarAccess.getFor_StatementAccess().getRParentRPARENTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__ForStatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getForStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getFor_StatementAccess().getForStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__ForinitAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getForinitFor_initParserRuleCall_1_0_0()); }
	ruleFor_init{ after(grammarAccess.getFor_controlAccess().getForinitFor_initParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getExpressionFor_expressionParserRuleCall_1_2_0()); }
	ruleFor_expression{ after(grammarAccess.getFor_controlAccess().getExpressionFor_expressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_control__ForupdateAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_controlAccess().getForupdateFor_updateParserRuleCall_1_4_0()); }
	ruleFor_update{ after(grammarAccess.getFor_controlAccess().getForupdateFor_updateParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_value__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_valueAccess().getNameLiteralParserRuleCall_0()); }
	ruleLiteral{ after(grammarAccess.getVariable_valueAccess().getNameLiteralParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive_type__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitive_typeAccess().getNameType_specifierParserRuleCall_0()); }
	ruleType_specifier{ after(grammarAccess.getPrimitive_typeAccess().getNameType_specifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_init__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_initAccess().getTypePrimitive_typeParserRuleCall_1_0()); }
	rulePrimitive_type{ after(grammarAccess.getFor_initAccess().getTypePrimitive_typeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_init__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_initAccess().getVarVariableParserRuleCall_2_0()); }
	ruleVariable{ after(grammarAccess.getFor_initAccess().getVarVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_init__Var_initAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_initAccess().getVar_initVariable_valueParserRuleCall_4_0()); }
	ruleVariable_value{ after(grammarAccess.getFor_initAccess().getVar_initVariable_valueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression__Variable1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expressionAccess().getVariable1VariableParserRuleCall_1_0()); }
	ruleVariable{ after(grammarAccess.getFor_expressionAccess().getVariable1VariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression__ExpOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expressionAccess().getExpOpFor_expression_operatorParserRuleCall_2_0()); }
	ruleFor_expression_operator{ after(grammarAccess.getFor_expressionAccess().getExpOpFor_expression_operatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression__LimitAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expressionAccess().getLimitVariable_valueParserRuleCall_3_0()); }
	ruleVariable_value{ after(grammarAccess.getFor_expressionAccess().getLimitVariable_valueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_update__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_updateAccess().getVariableVariableParserRuleCall_1_0()); }
	ruleVariable{ after(grammarAccess.getFor_updateAccess().getVariableVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_update__UpdateOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_updateAccess().getUpdateOpFor_update_operatorParserRuleCall_2_0()); }
	ruleFor_update_operator{ after(grammarAccess.getFor_updateAccess().getUpdateOpFor_update_operatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_update_operator__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_update_operatorAccess().getNameUpdate_operatorParserRuleCall_1_0()); }
	ruleUpdate_operator{ after(grammarAccess.getFor_update_operatorAccess().getNameUpdate_operatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_expression_operator__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_expression_operatorAccess().getNameRelational_operatorParserRuleCall_1_0()); }
	ruleRelational_operator{ after(grammarAccess.getFor_expression_operatorAccess().getNameRelational_operatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parens_expression__LparentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParens_expressionAccess().getLparentLPARENTerminalRuleCall_0_0()); }
	RULE_LPAREN{ after(grammarAccess.getParens_expressionAccess().getLparentLPARENTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parens_expression__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParens_expressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParens_expressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parens_expression__RparentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParens_expressionAccess().getRparentRPARENTerminalRuleCall_2_0()); }
	RULE_RPAREN{ after(grammarAccess.getParens_expressionAccess().getRparentRPARENTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Expression1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpression1ExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpression_listAccess().getExpression1ExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Expression2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpression2ExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_listAccess().getExpression2ExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AssignmentoperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentoperatorAssignment_operatorParserRuleCall_1_0_0()); }
	ruleAssignment_operator{ after(grammarAccess.getExpressionAccess().getAssignmentoperatorAssignment_operatorParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__ConditionalorexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getConditionalorexpressionConditional_OR_expressionParserRuleCall_0_0()); }
	ruleConditional_OR_expression{ after(grammarAccess.getConditional_expressionAccess().getConditionalorexpressionConditional_OR_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Expression1Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getExpression1ExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getConditional_expressionAccess().getExpression1ExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expression__Expression2Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_expressionAccess().getExpression2ExpressionParserRuleCall_1_3_0()); }
	ruleExpression{ after(grammarAccess.getConditional_expressionAccess().getExpression2ExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_OR_expression__ConditionalandexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionConditional_AND_expressionParserRuleCall_0_0()); }
	ruleConditional_AND_expression{ after(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionConditional_AND_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_OR_expression__ConditionalandexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionConditional_AND_expressionParserRuleCall_1_1_0()); }
	ruleConditional_AND_expression{ after(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionConditional_AND_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_AND_expression__InclusiveorexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionInclusive_OR_expressionParserRuleCall_0_0()); }
	ruleInclusive_OR_expression{ after(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionInclusive_OR_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_AND_expression__InclusiveorexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionInclusive_OR_expressionParserRuleCall_1_1_0()); }
	ruleInclusive_OR_expression{ after(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionInclusive_OR_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_OR_expression__ExclusiveorexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionExclusive_OR_expressionParserRuleCall_0_0()); }
	ruleExclusive_OR_expression{ after(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionExclusive_OR_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inclusive_OR_expression__ExclusiveorexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionExclusive_OR_expressionParserRuleCall_1_1_0()); }
	ruleExclusive_OR_expression{ after(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionExclusive_OR_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_OR_expression__AndexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAND_expressionParserRuleCall_0_0()); }
	ruleAND_expression{ after(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAND_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exclusive_OR_expression__AndexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAND_expressionParserRuleCall_1_1_0()); }
	ruleAND_expression{ after(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAND_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AND_expression__EqualityexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAND_expressionAccess().getEqualityexpressionEquality_expressionParserRuleCall_0_0()); }
	ruleEquality_expression{ after(grammarAccess.getAND_expressionAccess().getEqualityexpressionEquality_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AND_expression__EqualityexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAND_expressionAccess().getEqualityexpressionEquality_expressionParserRuleCall_1_1_0()); }
	ruleEquality_expression{ after(grammarAccess.getAND_expressionAccess().getEqualityexpressionEquality_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__InstanceofexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionInstanceOf_expressionParserRuleCall_0_0()); }
	ruleInstanceOf_expression{ after(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionInstanceOf_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equality_expression__InstanceofexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionInstanceOf_expressionParserRuleCall_1_1_0()); }
	ruleInstanceOf_expression{ after(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionInstanceOf_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOf_expression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOf_expressionAccess().getTypeTypeParserRuleCall_1_1_0()); }
	ruleType{ after(grammarAccess.getInstanceOf_expressionAccess().getTypeTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__ShiftexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getShiftexpressionShift_expressionParserRuleCall_0_0()); }
	ruleShift_expression{ after(grammarAccess.getRelational_expressionAccess().getShiftexpressionShift_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__RelationalopAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getRelationalopRelational_operatorParserRuleCall_1_0_0()); }
	ruleRelational_operator{ after(grammarAccess.getRelational_expressionAccess().getRelationalopRelational_operatorParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relational_expression__ShiftexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelational_expressionAccess().getShiftexpressionShift_expressionParserRuleCall_1_1_0()); }
	ruleShift_expression{ after(grammarAccess.getRelational_expressionAccess().getShiftexpressionShift_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__AdditiveexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAdditive_expressionParserRuleCall_0_0()); }
	ruleAdditive_expression{ after(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAdditive_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__ShiftopAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getShiftopShift_operatorParserRuleCall_1_0_0()); }
	ruleShift_operator{ after(grammarAccess.getShift_expressionAccess().getShiftopShift_operatorParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Shift_expression__AdditiveexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAdditive_expressionParserRuleCall_1_1_0()); }
	ruleAdditive_expression{ after(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAdditive_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__MultiplicativeexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionMultiplicative_expressionParserRuleCall_0_0()); }
	ruleMultiplicative_expression{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionMultiplicative_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Additive_expression__MultiplicativeexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionMultiplicative_expressionParserRuleCall_1_1_0()); }
	ruleMultiplicative_expression{ after(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionMultiplicative_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__UnaryexpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionUnary_expressionParserRuleCall_0_0()); }
	ruleUnary_expression{ after(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionUnary_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicative_expression__UnaryexpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionUnary_expressionParserRuleCall_1_1_0()); }
	ruleUnary_expression{ after(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionUnary_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__UnaryexpressionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionUnary_expressionParserRuleCall_1_0_1_0()); }
	ruleUnary_expression{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionUnary_expressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__UnaryexpressionAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionUnary_expressionParserRuleCall_1_1_1_0()); }
	ruleUnary_expression{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionUnary_expressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__CastexpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getCastexpressionCast_expressionParserRuleCall_1_2_0()); }
	ruleCast_expression{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getCastexpressionCast_expressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__PrimaryAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getPrimaryPrimary_expressionParserRuleCall_1_3_0_0()); }
	rulePrimary_expression{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getPrimaryPrimary_expressionParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary_expression_Not_Plus_Minus__SelectorAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getSelectorSelectorParserRuleCall_1_3_1_0()); }
	ruleSelector{ after(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getSelectorSelectorParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__LparentAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getLparentLPARENTerminalRuleCall_0_1_0()); }
	RULE_LPAREN{ after(grammarAccess.getCast_expressionAccess().getLparentLPARENTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__PrimitivetypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getPrimitivetypePrimitive_typeParserRuleCall_0_2_0()); }
	rulePrimitive_type{ after(grammarAccess.getCast_expressionAccess().getPrimitivetypePrimitive_typeParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__RparentAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getRparentRPARENTerminalRuleCall_0_3_0()); }
	RULE_RPAREN{ after(grammarAccess.getCast_expressionAccess().getRparentRPARENTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__UnaryexpressionAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getUnaryexpressionUnary_expressionParserRuleCall_0_4_0()); }
	ruleUnary_expression{ after(grammarAccess.getCast_expressionAccess().getUnaryexpressionUnary_expressionParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__LparentAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getLparentLPARENTerminalRuleCall_1_0_0()); }
	RULE_LPAREN{ after(grammarAccess.getCast_expressionAccess().getLparentLPARENTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__TypeAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getTypeTypeParserRuleCall_1_1_0_0()); }
	ruleType{ after(grammarAccess.getCast_expressionAccess().getTypeTypeParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__ExpressionAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getCast_expressionAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__RparentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getRparentRPARENTerminalRuleCall_1_2_0()); }
	RULE_RPAREN{ after(grammarAccess.getCast_expressionAccess().getRparentRPARENTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_expression__UnaryexpressionnotplusminusAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_expressionAccess().getUnaryexpressionnotplusminusUnary_expression_Not_Plus_MinusParserRuleCall_1_3_0()); }
	ruleUnary_expression_Not_Plus_Minus{ after(grammarAccess.getCast_expressionAccess().getUnaryexpressionnotplusminusUnary_expression_Not_Plus_MinusParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__ParexpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getParexpressionParens_expressionParserRuleCall_1_0_0()); }
	ruleParens_expression{ after(grammarAccess.getPrimary_expressionAccess().getParexpressionParens_expressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__IdentifierAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifierIDTerminalRuleCall_1_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getPrimary_expressionAccess().getIdentifierIDTerminalRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__IdentifiersuffixAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixIdentifier_suffixParserRuleCall_1_1_2_0()); }
	ruleIdentifier_suffix{ after(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixIdentifier_suffixParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__SupersuffixAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getSupersuffixSuper_suffixParserRuleCall_1_2_1_0()); }
	ruleSuper_suffix{ after(grammarAccess.getPrimary_expressionAccess().getSupersuffixSuper_suffixParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__LiteralAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getLiteralLiteralParserRuleCall_1_3_0()); }
	ruleLiteral{ after(grammarAccess.getPrimary_expressionAccess().getLiteralLiteralParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__CreatorAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getCreatorCreatorParserRuleCall_1_4_1_0()); }
	ruleCreator{ after(grammarAccess.getPrimary_expressionAccess().getCreatorCreatorParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__IdentifierAssignment_1_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifierIDTerminalRuleCall_1_5_0_0()); }
	RULE_ID{ after(grammarAccess.getPrimary_expressionAccess().getIdentifierIDTerminalRuleCall_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__IdentifierAssignment_1_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifierIDTerminalRuleCall_1_5_1_1_0()); }
	RULE_ID{ after(grammarAccess.getPrimary_expressionAccess().getIdentifierIDTerminalRuleCall_1_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__IdentifiersuffixAssignment_1_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixIdentifier_suffixParserRuleCall_1_5_2_0()); }
	ruleIdentifier_suffix{ after(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixIdentifier_suffixParserRuleCall_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary_expression__PrimitivetypeAssignment_1_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimary_expressionAccess().getPrimitivetypePrimitive_typeParserRuleCall_1_6_0_0()); }
	rulePrimitive_type{ after(grammarAccess.getPrimary_expressionAccess().getPrimitivetypePrimitive_typeParserRuleCall_1_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getArgumentsArgumentsParserRuleCall_1_1_0()); }
	ruleArguments{ after(grammarAccess.getIdentifier_suffixAccess().getArgumentsArgumentsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__ExplicitgenericinvocationAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getExplicitgenericinvocationExplicit_generic_invocationParserRuleCall_1_3_1_0()); }
	ruleExplicit_generic_invocation{ after(grammarAccess.getIdentifier_suffixAccess().getExplicitgenericinvocationExplicit_generic_invocationParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__ArgumentsAssignment_1_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getArgumentsArgumentsParserRuleCall_1_5_2_0()); }
	ruleArguments{ after(grammarAccess.getIdentifier_suffixAccess().getArgumentsArgumentsParserRuleCall_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_suffix__InnercreatorAssignment_1_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_suffixAccess().getInnercreatorInner_creatorParserRuleCall_1_6_2_0()); }
	ruleInner_creator{ after(grammarAccess.getIdentifier_suffixAccess().getInnercreatorInner_creatorParserRuleCall_1_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__CreatednameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getCreatednameCreated_nameParserRuleCall_0_1_0()); }
	ruleCreated_name{ after(grammarAccess.getCreatorAccess().getCreatednameCreated_nameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__ClasscreatorrestAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getClasscreatorrestClass_creator_restParserRuleCall_0_2_0()); }
	ruleClass_creator_rest{ after(grammarAccess.getCreatorAccess().getClasscreatorrestClass_creator_restParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__ArraycreatorrestAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getArraycreatorrestArray_creator_restParserRuleCall_1_1_0_0()); }
	ruleArray_creator_rest{ after(grammarAccess.getCreatorAccess().getArraycreatorrestArray_creator_restParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creator__ClasscreatorrestAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreatorAccess().getClasscreatorrestClass_creator_restParserRuleCall_1_1_1_0()); }
	ruleClass_creator_rest{ after(grammarAccess.getCreatorAccess().getClasscreatorrestClass_creator_restParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Created_name__ClassorinterfacetypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreated_nameAccess().getClassorinterfacetypeClass_declarationParserRuleCall_1_0_0()); }
	ruleClass_declaration{ after(grammarAccess.getCreated_nameAccess().getClassorinterfacetypeClass_declarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Created_name__PrimitivetypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreated_nameAccess().getPrimitivetypePrimitive_typeParserRuleCall_1_1_0()); }
	rulePrimitive_type{ after(grammarAccess.getCreated_nameAccess().getPrimitivetypePrimitive_typeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inner_creator__NonwildcardtypeargumentsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInner_creatorAccess().getNonwildcardtypeargumentsNon_wildcard_type_argumentsParserRuleCall_0_0()); }
	ruleNon_wildcard_type_arguments{ after(grammarAccess.getInner_creatorAccess().getNonwildcardtypeargumentsNon_wildcard_type_argumentsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inner_creator__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInner_creatorAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInner_creatorAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Inner_creator__ClasscreatorrestAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInner_creatorAccess().getClasscreatorrestClass_creator_restParserRuleCall_2_0()); }
	ruleClass_creator_rest{ after(grammarAccess.getInner_creatorAccess().getClasscreatorrestClass_creator_restParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__ExpressionAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getExpressionExpressionParserRuleCall_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getArray_creator_restAccess().getExpressionExpressionParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_creator_rest__ExpressionAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_creator_restAccess().getExpressionExpressionParserRuleCall_1_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getArray_creator_restAccess().getExpressionExpressionParserRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_creator_rest__ArgumentsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_creator_restAccess().getArgumentsArgumentsParserRuleCall_0_0()); }
	ruleArguments{ after(grammarAccess.getClass_creator_restAccess().getArgumentsArgumentsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_creator_rest__ClassbodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_creator_restAccess().getClassbodyClass_declarationParserRuleCall_1_0()); }
	ruleClass_declaration{ after(grammarAccess.getClass_creator_restAccess().getClassbodyClass_declarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Explicit_generic_invocation__NonwildcardtypeargumentsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicit_generic_invocationAccess().getNonwildcardtypeargumentsNon_wildcard_type_argumentsParserRuleCall_0_0()); }
	ruleNon_wildcard_type_arguments{ after(grammarAccess.getExplicit_generic_invocationAccess().getNonwildcardtypeargumentsNon_wildcard_type_argumentsParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Explicit_generic_invocation__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicit_generic_invocationAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExplicit_generic_invocationAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Explicit_generic_invocation__ArgumentsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicit_generic_invocationAccess().getArgumentsArgumentsParserRuleCall_2_0()); }
	ruleArguments{ after(grammarAccess.getExplicit_generic_invocationAccess().getArgumentsArgumentsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Non_wildcard_type_arguments__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNon_wildcard_type_argumentsAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getNon_wildcard_type_argumentsAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SupersuffixAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSupersuffixSuper_suffixParserRuleCall_1_0_2_0()); }
	ruleSuper_suffix{ after(grammarAccess.getSelectorAccess().getSupersuffixSuper_suffixParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__InnercreatorAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getInnercreatorInner_creatorParserRuleCall_1_1_2_0()); }
	ruleInner_creator{ after(grammarAccess.getSelectorAccess().getInnercreatorInner_creatorParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__ExpressionAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getExpressionExpressionParserRuleCall_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getSelectorAccess().getExpressionExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__ArgumentsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getArgumentsArgumentsParserRuleCall_1_0_0()); }
	ruleArguments{ after(grammarAccess.getSuper_suffixAccess().getArgumentsArgumentsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__IdentifierAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getIdentifierIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getSuper_suffixAccess().getIdentifierIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Super_suffix__ArgumentsAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuper_suffixAccess().getArgumentsArgumentsParserRuleCall_1_1_2_0()); }
	ruleArguments{ after(grammarAccess.getSuper_suffixAccess().getArgumentsArgumentsParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__LparentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getLparentLPARENTerminalRuleCall_1_0()); }
	RULE_LPAREN{ after(grammarAccess.getArgumentsAccess().getLparentLPARENTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionlistAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getExpressionlistExpression_listParserRuleCall_2_0()); }
	ruleExpression_list{ after(grammarAccess.getArgumentsAccess().getExpressionlistExpression_listParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__RparentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsAccess().getRparentRPARENTerminalRuleCall_3_0()); }
	RULE_RPAREN{ after(grammarAccess.getArgumentsAccess().getRparentRPARENTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__LParenAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getLParenLPARENTerminalRuleCall_2_0()); }
	RULE_LPAREN{ after(grammarAccess.getSwitch_statementAccess().getLParenLPARENTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getSwitch_statementAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__RparentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getRparentRPARENTerminalRuleCall_4_0()); }
	RULE_RPAREN{ after(grammarAccess.getSwitch_statementAccess().getRparentRPARENTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__Expression2Assignment_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getExpression2ExpressionParserRuleCall_6_0_1_0()); }
	ruleExpression{ after(grammarAccess.getSwitch_statementAccess().getExpression2ExpressionParserRuleCall_6_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_statement__SwitchStatementsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_statementAccess().getSwitchStatementsStatementParserRuleCall_6_2_0()); }
	ruleStatement{ after(grammarAccess.getSwitch_statementAccess().getSwitchStatementsStatementParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getWhile_StatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__RparentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getRparentRPARENTerminalRuleCall_2_0()); }
	RULE_RPAREN{ after(grammarAccess.getWhile_StatementAccess().getRparentRPARENTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__WhileStatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getWhileStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getWhile_StatementAccess().getWhileStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__DoStatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getDoStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDo_StatementAccess().getDoStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__LparentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getLparentLPARENTerminalRuleCall_3_0()); }
	RULE_LPAREN{ after(grammarAccess.getDo_StatementAccess().getLparentLPARENTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__RparentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getRparentRPARENTerminalRuleCall_4_0()); }
	RULE_RPAREN{ after(grammarAccess.getDo_StatementAccess().getRparentRPARENTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__LparenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getLparenLPARENTerminalRuleCall_1_0()); }
	RULE_LPAREN{ after(grammarAccess.getIf_statementAccess().getLparenLPARENTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIf_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__RparentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getRparentRPARENTerminalRuleCall_3_0()); }
	RULE_RPAREN{ after(grammarAccess.getIf_statementAccess().getRparentRPARENTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__IdStatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getIdStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getIf_statementAccess().getIdStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__ElseStatementAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getElseStatementStatementParserRuleCall_5_1_0()); }
	ruleStatement{ after(grammarAccess.getIf_statementAccess().getElseStatementStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__TryStatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getTryStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getTry_statementAccess().getTryStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__LParenAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getLParenLPARENTerminalRuleCall_2_1_0()); }
	RULE_LPAREN{ after(grammarAccess.getTry_statementAccess().getLParenLPARENTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__ParametersAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getParametersParameterParserRuleCall_2_2_0()); }
	ruleParameter{ after(grammarAccess.getTry_statementAccess().getParametersParameterParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__RparentAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getRparentRPARENTerminalRuleCall_2_3_0()); }
	RULE_RPAREN{ after(grammarAccess.getTry_statementAccess().getRparentRPARENTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__CatchStatementAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getCatchStatementStatementParserRuleCall_2_4_0()); }
	ruleStatement{ after(grammarAccess.getTry_statementAccess().getCatchStatementStatementParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__FinallyStatementAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getFinallyStatementStatementParserRuleCall_3_1_0()); }
	ruleStatement{ after(grammarAccess.getTry_statementAccess().getFinallyStatementStatementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__ClassNameAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getClassNameClass_nameParserRuleCall_1_0_0_0()); }
	ruleClass_name{ after(grammarAccess.getImport_statementAccess().getClassNameClass_nameParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__PacNameAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getPacNamePackage_nameParserRuleCall_1_1_0_0()); }
	rulePackage_name{ after(grammarAccess.getImport_statementAccess().getPacNamePackage_nameParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package_statement__PacNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_statementAccess().getPacNamePackage_nameParserRuleCall_1_0()); }
	rulePackage_name{ after(grammarAccess.getPackage_statementAccess().getPacNamePackage_nameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTERFACE : 'interface';

RULE_EXTENDS : 'extends';

RULE_STATIC : 'static';

RULE_HEX_LITERAL : '0' ('x'|'X') RULE_HEX_DIGIT+ RULE_INTEGER_TYPE_SUFFIX?;

RULE_DECIMAL_LITERAL : ('0'|'1'..'9' ('0'..'9')*) RULE_INTEGER_TYPE_SUFFIX?;

RULE_OCTAL_LITERAL : '0' ('0'..'7')+ RULE_INTEGER_TYPE_SUFFIX?;

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_INTEGER_TYPE_SUFFIX : ('l'|'L');

RULE_FLOATING_POINT_LITERAL : (('0'..'9')+ '.' ('0'..'9')* RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX?|'.' ('0'..'9')+ RULE_EXPONENT? RULE_FLOAT_TYPE_SUFFIX?|('0'..'9')+ RULE_EXPONENT RULE_FLOAT_TYPE_SUFFIX?|('0'..'9')+ RULE_FLOAT_TYPE_SUFFIX);

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+;

fragment RULE_FLOAT_TYPE_SUFFIX : ('f'|'F'|'d'|'D');

RULE_CHARACTER_LITERAL : '\'' (RULE_ESCAPE_SEQUENCE|~(('\''|'\\'))) '\'';

RULE_STRING_LITERAL : '"' (RULE_ESCAPE_SEQUENCE|~(('\\'|'"')))* '"';

fragment RULE_ESCAPE_SEQUENCE : ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|RULE_UNICODE_ESCAPE|RULE_OCTAL_ESCAPE);

fragment RULE_OCTAL_ESCAPE : ('\\' '0'..'3' '0'..'7' '0'..'7'|'\\' '0'..'7' '0'..'7'|'\\' '0'..'7');

fragment RULE_UNICODE_ESCAPE : '\\' 'u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

RULE_RPAREN : ')';

RULE_LPAREN : '(';

RULE_MOD : ('public'|'private'|'protected'|'final'|'native'|'synchronized'|'abstract'|'threadsafe'|'transient');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$'|'\u00C0'..'\uFFFF')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n');

RULE_DOC_COMMENT : '/**';


