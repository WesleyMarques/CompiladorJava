/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser result = new org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getType_declarationAccess().getAlternatives_1(), "rule__Type_declaration__Alternatives_1");
					put(grammarAccess.getField_declarationAccess().getAlternatives(), "rule__Field_declaration__Alternatives");
					put(grammarAccess.getField_declarationAccess().getAlternatives_0_1(), "rule__Field_declaration__Alternatives_0_1");
					put(grammarAccess.getMethod_declarationAccess().getAlternatives_7(), "rule__Method_declaration__Alternatives_7");
					put(grammarAccess.getVariable_initializerAccess().getAlternatives(), "rule__Variable_initializer__Alternatives");
					put(grammarAccess.getType_specifierAccess().getAlternatives(), "rule__Type_specifier__Alternatives");
					put(grammarAccess.getModifierAccess().getAlternatives(), "rule__Modifier__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getUpdate_operatorAccess().getAlternatives(), "rule__Update_operator__Alternatives");
					put(grammarAccess.getEquality_expressionAccess().getAlternatives_1_0(), "rule__Equality_expression__Alternatives_1_0");
					put(grammarAccess.getAdditive_expressionAccess().getAlternatives_1_0(), "rule__Additive_expression__Alternatives_1_0");
					put(grammarAccess.getMultiplicative_expressionAccess().getAlternatives_1_0(), "rule__Multiplicative_expression__Alternatives_1_0");
					put(grammarAccess.getUnary_expressionAccess().getAlternatives(), "rule__Unary_expression__Alternatives");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getAlternatives_1(), "rule__Unary_expression_Not_Plus_Minus__Alternatives_1");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getAlternatives_1_3_2(), "rule__Unary_expression_Not_Plus_Minus__Alternatives_1_3_2");
					put(grammarAccess.getCast_expressionAccess().getAlternatives(), "rule__Cast_expression__Alternatives");
					put(grammarAccess.getCast_expressionAccess().getAlternatives_1_1(), "rule__Cast_expression__Alternatives_1_1");
					put(grammarAccess.getPrimary_expressionAccess().getAlternatives_1(), "rule__Primary_expression__Alternatives_1");
					put(grammarAccess.getIdentifier_suffixAccess().getAlternatives_1(), "rule__Identifier_suffix__Alternatives_1");
					put(grammarAccess.getCreatorAccess().getAlternatives(), "rule__Creator__Alternatives");
					put(grammarAccess.getCreatorAccess().getAlternatives_1_1(), "rule__Creator__Alternatives_1_1");
					put(grammarAccess.getCreated_nameAccess().getAlternatives_1(), "rule__Created_name__Alternatives_1");
					put(grammarAccess.getArray_creator_restAccess().getAlternatives_1(), "rule__Array_creator_rest__Alternatives_1");
					put(grammarAccess.getSelectorAccess().getAlternatives_1(), "rule__Selector__Alternatives_1");
					put(grammarAccess.getSuper_suffixAccess().getAlternatives_1(), "rule__Super_suffix__Alternatives_1");
					put(grammarAccess.getSwitch_statementAccess().getAlternatives_6(), "rule__Switch_statement__Alternatives_6");
					put(grammarAccess.getImport_statementAccess().getAlternatives_1(), "rule__Import_statement__Alternatives_1");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getInteger_literalAccess().getAlternatives(), "rule__Integer_literal__Alternatives");
					put(grammarAccess.getBoolean_literalAccess().getAlternatives(), "rule__Boolean_literal__Alternatives");
					put(grammarAccess.getRelational_operatorAccess().getAlternatives(), "rule__Relational_operator__Alternatives");
					put(grammarAccess.getAssignment_operatorAccess().getAlternatives(), "rule__Assignment_operator__Alternatives");
					put(grammarAccess.getShift_operatorAccess().getAlternatives(), "rule__Shift_operator__Alternatives");
					put(grammarAccess.getCompilation_unitAccess().getGroup(), "rule__Compilation_unit__Group__0");
					put(grammarAccess.getType_declarationAccess().getGroup(), "rule__Type_declaration__Group__0");
					put(grammarAccess.getInterface_declarationAccess().getGroup(), "rule__Interface_declaration__Group__0");
					put(grammarAccess.getInterface_declarationAccess().getGroup_3(), "rule__Interface_declaration__Group_3__0");
					put(grammarAccess.getInterface_declarationAccess().getGroup_3_2(), "rule__Interface_declaration__Group_3_2__0");
					put(grammarAccess.getClass_declarationAccess().getGroup(), "rule__Class_declaration__Group__0");
					put(grammarAccess.getClass_declarationAccess().getGroup_3(), "rule__Class_declaration__Group_3__0");
					put(grammarAccess.getClass_declarationAccess().getGroup_4(), "rule__Class_declaration__Group_4__0");
					put(grammarAccess.getClass_declarationAccess().getGroup_4_2(), "rule__Class_declaration__Group_4_2__0");
					put(grammarAccess.getField_declarationAccess().getGroup_0(), "rule__Field_declaration__Group_0__0");
					put(grammarAccess.getField_declarationAccess().getGroup_2(), "rule__Field_declaration__Group_2__0");
					put(grammarAccess.getMethod_declarationAccess().getGroup(), "rule__Method_declaration__Group__0");
					put(grammarAccess.getMethod_declarationAccess().getGroup_6(), "rule__Method_declaration__Group_6__0");
					put(grammarAccess.getConstructor_declarationAccess().getGroup(), "rule__Constructor_declaration__Group__0");
					put(grammarAccess.getParameter_listAccess().getGroup(), "rule__Parameter_list__Group__0");
					put(grammarAccess.getParameter_listAccess().getGroup_1(), "rule__Parameter_list__Group_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getParameterAccess().getGroup_2(), "rule__Parameter__Group_2__0");
					put(grammarAccess.getVariable_declarationAccess().getGroup(), "rule__Variable_declaration__Group__0");
					put(grammarAccess.getVariable_declarationAccess().getGroup_3(), "rule__Variable_declaration__Group_3__0");
					put(grammarAccess.getVariable_declaratorAccess().getGroup(), "rule__Variable_declarator__Group__0");
					put(grammarAccess.getVariable_declaratorAccess().getGroup_1(), "rule__Variable_declarator__Group_1__0");
					put(grammarAccess.getVariable_declaratorAccess().getGroup_2(), "rule__Variable_declarator__Group_2__0");
					put(grammarAccess.getArray_initializerAccess().getGroup(), "rule__Array_initializer__Group__0");
					put(grammarAccess.getArray_initializerAccess().getGroup_2(), "rule__Array_initializer__Group_2__0");
					put(grammarAccess.getArray_initializerAccess().getGroup_2_1(), "rule__Array_initializer__Group_2_1__0");
					put(grammarAccess.getTypeAccess().getGroup(), "rule__Type__Group__0");
					put(grammarAccess.getTypeAccess().getGroup_1(), "rule__Type__Group_1__0");
					put(grammarAccess.getStatic_initializerAccess().getGroup(), "rule__Static_initializer__Group__0");
					put(grammarAccess.getStatement_blockAccess().getGroup(), "rule__Statement_block__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_1(), "rule__Statement__Group_1__0");
					put(grammarAccess.getStatementAccess().getGroup_7(), "rule__Statement__Group_7__0");
					put(grammarAccess.getStatementAccess().getGroup_8(), "rule__Statement__Group_8__0");
					put(grammarAccess.getStatementAccess().getGroup_9(), "rule__Statement__Group_9__0");
					put(grammarAccess.getStatementAccess().getGroup_12(), "rule__Statement__Group_12__0");
					put(grammarAccess.getStatementAccess().getGroup_13(), "rule__Statement__Group_13__0");
					put(grammarAccess.getStatementAccess().getGroup_14(), "rule__Statement__Group_14__0");
					put(grammarAccess.getStatementAccess().getGroup_15(), "rule__Statement__Group_15__0");
					put(grammarAccess.getFor_StatementAccess().getGroup(), "rule__For_Statement__Group__0");
					put(grammarAccess.getFor_controlAccess().getGroup(), "rule__For_control__Group__0");
					put(grammarAccess.getFor_controlAccess().getGroup_1(), "rule__For_control__Group_1__0");
					put(grammarAccess.getFor_initAccess().getGroup(), "rule__For_init__Group__0");
					put(grammarAccess.getFor_expressionAccess().getGroup(), "rule__For_expression__Group__0");
					put(grammarAccess.getFor_updateAccess().getGroup(), "rule__For_update__Group__0");
					put(grammarAccess.getFor_update_operatorAccess().getGroup(), "rule__For_update_operator__Group__0");
					put(grammarAccess.getFor_expression_operatorAccess().getGroup(), "rule__For_expression_operator__Group__0");
					put(grammarAccess.getParens_expressionAccess().getGroup(), "rule__Parens_expression__Group__0");
					put(grammarAccess.getExpression_listAccess().getGroup(), "rule__Expression_list__Group__0");
					put(grammarAccess.getExpression_listAccess().getGroup_1(), "rule__Expression_list__Group_1__0");
					put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
					put(grammarAccess.getConditional_expressionAccess().getGroup(), "rule__Conditional_expression__Group__0");
					put(grammarAccess.getConditional_expressionAccess().getGroup_1(), "rule__Conditional_expression__Group_1__0");
					put(grammarAccess.getConditional_OR_expressionAccess().getGroup(), "rule__Conditional_OR_expression__Group__0");
					put(grammarAccess.getConditional_OR_expressionAccess().getGroup_1(), "rule__Conditional_OR_expression__Group_1__0");
					put(grammarAccess.getConditional_AND_expressionAccess().getGroup(), "rule__Conditional_AND_expression__Group__0");
					put(grammarAccess.getConditional_AND_expressionAccess().getGroup_1(), "rule__Conditional_AND_expression__Group_1__0");
					put(grammarAccess.getInclusive_OR_expressionAccess().getGroup(), "rule__Inclusive_OR_expression__Group__0");
					put(grammarAccess.getInclusive_OR_expressionAccess().getGroup_1(), "rule__Inclusive_OR_expression__Group_1__0");
					put(grammarAccess.getExclusive_OR_expressionAccess().getGroup(), "rule__Exclusive_OR_expression__Group__0");
					put(grammarAccess.getExclusive_OR_expressionAccess().getGroup_1(), "rule__Exclusive_OR_expression__Group_1__0");
					put(grammarAccess.getAND_expressionAccess().getGroup(), "rule__AND_expression__Group__0");
					put(grammarAccess.getAND_expressionAccess().getGroup_1(), "rule__AND_expression__Group_1__0");
					put(grammarAccess.getEquality_expressionAccess().getGroup(), "rule__Equality_expression__Group__0");
					put(grammarAccess.getEquality_expressionAccess().getGroup_1(), "rule__Equality_expression__Group_1__0");
					put(grammarAccess.getInstanceOf_expressionAccess().getGroup(), "rule__InstanceOf_expression__Group__0");
					put(grammarAccess.getInstanceOf_expressionAccess().getGroup_1(), "rule__InstanceOf_expression__Group_1__0");
					put(grammarAccess.getRelational_expressionAccess().getGroup(), "rule__Relational_expression__Group__0");
					put(grammarAccess.getRelational_expressionAccess().getGroup_1(), "rule__Relational_expression__Group_1__0");
					put(grammarAccess.getShift_expressionAccess().getGroup(), "rule__Shift_expression__Group__0");
					put(grammarAccess.getShift_expressionAccess().getGroup_1(), "rule__Shift_expression__Group_1__0");
					put(grammarAccess.getAdditive_expressionAccess().getGroup(), "rule__Additive_expression__Group__0");
					put(grammarAccess.getAdditive_expressionAccess().getGroup_1(), "rule__Additive_expression__Group_1__0");
					put(grammarAccess.getMultiplicative_expressionAccess().getGroup(), "rule__Multiplicative_expression__Group__0");
					put(grammarAccess.getMultiplicative_expressionAccess().getGroup_1(), "rule__Multiplicative_expression__Group_1__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_0(), "rule__Unary_expression__Group_0__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_1(), "rule__Unary_expression__Group_1__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_2(), "rule__Unary_expression__Group_2__0");
					put(grammarAccess.getUnary_expressionAccess().getGroup_3(), "rule__Unary_expression__Group_3__0");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup(), "rule__Unary_expression_Not_Plus_Minus__Group__0");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_0(), "rule__Unary_expression_Not_Plus_Minus__Group_1_0__0");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_1(), "rule__Unary_expression_Not_Plus_Minus__Group_1_1__0");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getGroup_1_3(), "rule__Unary_expression_Not_Plus_Minus__Group_1_3__0");
					put(grammarAccess.getCast_expressionAccess().getGroup_0(), "rule__Cast_expression__Group_0__0");
					put(grammarAccess.getCast_expressionAccess().getGroup_1(), "rule__Cast_expression__Group_1__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup(), "rule__Primary_expression__Group__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_1(), "rule__Primary_expression__Group_1_1__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_1_1(), "rule__Primary_expression__Group_1_1_1__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_2(), "rule__Primary_expression__Group_1_2__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_4(), "rule__Primary_expression__Group_1_4__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_5(), "rule__Primary_expression__Group_1_5__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_5_1(), "rule__Primary_expression__Group_1_5_1__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_6(), "rule__Primary_expression__Group_1_6__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_6_1(), "rule__Primary_expression__Group_1_6_1__0");
					put(grammarAccess.getPrimary_expressionAccess().getGroup_1_7(), "rule__Primary_expression__Group_1_7__0");
					put(grammarAccess.getIdentifier_suffixAccess().getGroup(), "rule__Identifier_suffix__Group__0");
					put(grammarAccess.getIdentifier_suffixAccess().getGroup_1_0(), "rule__Identifier_suffix__Group_1_0__0");
					put(grammarAccess.getIdentifier_suffixAccess().getGroup_1_0_0(), "rule__Identifier_suffix__Group_1_0_0__0");
					put(grammarAccess.getIdentifier_suffixAccess().getGroup_1_2(), "rule__Identifier_suffix__Group_1_2__0");
					put(grammarAccess.getIdentifier_suffixAccess().getGroup_1_3(), "rule__Identifier_suffix__Group_1_3__0");
					put(grammarAccess.getIdentifier_suffixAccess().getGroup_1_4(), "rule__Identifier_suffix__Group_1_4__0");
					put(grammarAccess.getIdentifier_suffixAccess().getGroup_1_5(), "rule__Identifier_suffix__Group_1_5__0");
					put(grammarAccess.getIdentifier_suffixAccess().getGroup_1_6(), "rule__Identifier_suffix__Group_1_6__0");
					put(grammarAccess.getCreatorAccess().getGroup_0(), "rule__Creator__Group_0__0");
					put(grammarAccess.getCreatorAccess().getGroup_1(), "rule__Creator__Group_1__0");
					put(grammarAccess.getCreated_nameAccess().getGroup(), "rule__Created_name__Group__0");
					put(grammarAccess.getInner_creatorAccess().getGroup(), "rule__Inner_creator__Group__0");
					put(grammarAccess.getArray_creator_restAccess().getGroup(), "rule__Array_creator_rest__Group__0");
					put(grammarAccess.getArray_creator_restAccess().getGroup_1_0(), "rule__Array_creator_rest__Group_1_0__0");
					put(grammarAccess.getArray_creator_restAccess().getGroup_1_0_1(), "rule__Array_creator_rest__Group_1_0_1__0");
					put(grammarAccess.getArray_creator_restAccess().getGroup_1_1(), "rule__Array_creator_rest__Group_1_1__0");
					put(grammarAccess.getArray_creator_restAccess().getGroup_1_1_2(), "rule__Array_creator_rest__Group_1_1_2__0");
					put(grammarAccess.getArray_creator_restAccess().getGroup_1_1_3(), "rule__Array_creator_rest__Group_1_1_3__0");
					put(grammarAccess.getClass_creator_restAccess().getGroup(), "rule__Class_creator_rest__Group__0");
					put(grammarAccess.getExplicit_generic_invocationAccess().getGroup(), "rule__Explicit_generic_invocation__Group__0");
					put(grammarAccess.getNon_wildcard_type_argumentsAccess().getGroup(), "rule__Non_wildcard_type_arguments__Group__0");
					put(grammarAccess.getSelectorAccess().getGroup(), "rule__Selector__Group__0");
					put(grammarAccess.getSelectorAccess().getGroup_1_0(), "rule__Selector__Group_1_0__0");
					put(grammarAccess.getSelectorAccess().getGroup_1_1(), "rule__Selector__Group_1_1__0");
					put(grammarAccess.getSelectorAccess().getGroup_1_2(), "rule__Selector__Group_1_2__0");
					put(grammarAccess.getSuper_suffixAccess().getGroup(), "rule__Super_suffix__Group__0");
					put(grammarAccess.getSuper_suffixAccess().getGroup_1_1(), "rule__Super_suffix__Group_1_1__0");
					put(grammarAccess.getArgumentsAccess().getGroup(), "rule__Arguments__Group__0");
					put(grammarAccess.getSwitch_statementAccess().getGroup(), "rule__Switch_statement__Group__0");
					put(grammarAccess.getSwitch_statementAccess().getGroup_6_0(), "rule__Switch_statement__Group_6_0__0");
					put(grammarAccess.getSwitch_statementAccess().getGroup_6_1(), "rule__Switch_statement__Group_6_1__0");
					put(grammarAccess.getWhile_StatementAccess().getGroup(), "rule__While_Statement__Group__0");
					put(grammarAccess.getDo_StatementAccess().getGroup(), "rule__Do_Statement__Group__0");
					put(grammarAccess.getIf_statementAccess().getGroup(), "rule__If_statement__Group__0");
					put(grammarAccess.getIf_statementAccess().getGroup_5(), "rule__If_statement__Group_5__0");
					put(grammarAccess.getTry_statementAccess().getGroup(), "rule__Try_statement__Group__0");
					put(grammarAccess.getTry_statementAccess().getGroup_2(), "rule__Try_statement__Group_2__0");
					put(grammarAccess.getTry_statementAccess().getGroup_3(), "rule__Try_statement__Group_3__0");
					put(grammarAccess.getImport_statementAccess().getGroup(), "rule__Import_statement__Group__0");
					put(grammarAccess.getImport_statementAccess().getGroup_1_0(), "rule__Import_statement__Group_1_0__0");
					put(grammarAccess.getImport_statementAccess().getGroup_1_1(), "rule__Import_statement__Group_1_1__0");
					put(grammarAccess.getPackage_statementAccess().getGroup(), "rule__Package_statement__Group__0");
					put(grammarAccess.getPackage_nameAccess().getGroup(), "rule__Package_name__Group__0");
					put(grammarAccess.getPackage_name_lineAccess().getGroup(), "rule__Package_name_line__Group__0");
					put(grammarAccess.getRelational_operatorAccess().getGroup_2(), "rule__Relational_operator__Group_2__0");
					put(grammarAccess.getRelational_operatorAccess().getGroup_3(), "rule__Relational_operator__Group_3__0");
					put(grammarAccess.getShift_operatorAccess().getGroup_0(), "rule__Shift_operator__Group_0__0");
					put(grammarAccess.getShift_operatorAccess().getGroup_1(), "rule__Shift_operator__Group_1__0");
					put(grammarAccess.getShift_operatorAccess().getGroup_2(), "rule__Shift_operator__Group_2__0");
					put(grammarAccess.getModelAccess().getGreetingsAssignment(), "rule__Model__GreetingsAssignment");
					put(grammarAccess.getCompilation_unitAccess().getNameAssignment_1(), "rule__Compilation_unit__NameAssignment_1");
					put(grammarAccess.getCompilation_unitAccess().getImportsAssignment_2(), "rule__Compilation_unit__ImportsAssignment_2");
					put(grammarAccess.getCompilation_unitAccess().getTypeDeclarationsAssignment_3(), "rule__Compilation_unit__TypeDeclarationsAssignment_3");
					put(grammarAccess.getType_declarationAccess().getCommentAssignment_0(), "rule__Type_declaration__CommentAssignment_0");
					put(grammarAccess.getType_declarationAccess().getClassDecAssignment_1_0(), "rule__Type_declaration__ClassDecAssignment_1_0");
					put(grammarAccess.getType_declarationAccess().getInterfaceDecAssignment_1_1(), "rule__Type_declaration__InterfaceDecAssignment_1_1");
					put(grammarAccess.getInterface_declarationAccess().getModifiersAssignment_0(), "rule__Interface_declaration__ModifiersAssignment_0");
					put(grammarAccess.getInterface_declarationAccess().getInterfaceNameAssignment_2(), "rule__Interface_declaration__InterfaceNameAssignment_2");
					put(grammarAccess.getInterface_declarationAccess().getInterfaceHerdadaAssignment_3_1(), "rule__Interface_declaration__InterfaceHerdadaAssignment_3_1");
					put(grammarAccess.getInterface_declarationAccess().getInterfacesHerdadasAssignment_3_2_1(), "rule__Interface_declaration__InterfacesHerdadasAssignment_3_2_1");
					put(grammarAccess.getClass_declarationAccess().getModifiersAssignment_0(), "rule__Class_declaration__ModifiersAssignment_0");
					put(grammarAccess.getClass_declarationAccess().getClassNameAssignment_2(), "rule__Class_declaration__ClassNameAssignment_2");
					put(grammarAccess.getClass_declarationAccess().getClassHerdadaAssignment_3_1(), "rule__Class_declaration__ClassHerdadaAssignment_3_1");
					put(grammarAccess.getClass_declarationAccess().getInterfaceImplementadaAssignment_4_1(), "rule__Class_declaration__InterfaceImplementadaAssignment_4_1");
					put(grammarAccess.getClass_declarationAccess().getInterfacesImplementadasAssignment_4_2_1(), "rule__Class_declaration__InterfacesImplementadasAssignment_4_2_1");
					put(grammarAccess.getClass_declarationAccess().getFieldsDeclarationAssignment_6(), "rule__Class_declaration__FieldsDeclarationAssignment_6");
					put(grammarAccess.getField_declarationAccess().getCommentAssignment_0_0(), "rule__Field_declaration__CommentAssignment_0_0");
					put(grammarAccess.getField_declarationAccess().getVariableDeclarationAssignment_0_1_0(), "rule__Field_declaration__VariableDeclarationAssignment_0_1_0");
					put(grammarAccess.getField_declarationAccess().getContructorNameAssignment_0_1_1(), "rule__Field_declaration__ContructorNameAssignment_0_1_1");
					put(grammarAccess.getField_declarationAccess().getMethodNameAssignment_0_1_2(), "rule__Field_declaration__MethodNameAssignment_0_1_2");
					put(grammarAccess.getField_declarationAccess().getStaticinitializerAssignment_1(), "rule__Field_declaration__StaticinitializerAssignment_1");
					put(grammarAccess.getMethod_declarationAccess().getModifiersMethodAssignment_0(), "rule__Method_declaration__ModifiersMethodAssignment_0");
					put(grammarAccess.getMethod_declarationAccess().getTypeMethodAssignment_1(), "rule__Method_declaration__TypeMethodAssignment_1");
					put(grammarAccess.getMethod_declarationAccess().getNameMethodAssignment_2(), "rule__Method_declaration__NameMethodAssignment_2");
					put(grammarAccess.getMethod_declarationAccess().getLParenAssignment_3(), "rule__Method_declaration__LParenAssignment_3");
					put(grammarAccess.getMethod_declarationAccess().getParameterListMethodAssignment_4(), "rule__Method_declaration__ParameterListMethodAssignment_4");
					put(grammarAccess.getMethod_declarationAccess().getRparentAssignment_5(), "rule__Method_declaration__RparentAssignment_5");
					put(grammarAccess.getMethod_declarationAccess().getStatementMethodAssignment_7_0(), "rule__Method_declaration__StatementMethodAssignment_7_0");
					put(grammarAccess.getMethod_declarationAccess().getDebugAssignment_7_1(), "rule__Method_declaration__DebugAssignment_7_1");
					put(grammarAccess.getConstructor_declarationAccess().getModifiersConstructorAssignment_0(), "rule__Constructor_declaration__ModifiersConstructorAssignment_0");
					put(grammarAccess.getConstructor_declarationAccess().getNameConstructorAssignment_1(), "rule__Constructor_declaration__NameConstructorAssignment_1");
					put(grammarAccess.getConstructor_declarationAccess().getLParenAssignment_2(), "rule__Constructor_declaration__LParenAssignment_2");
					put(grammarAccess.getConstructor_declarationAccess().getParameterListConstructorAssignment_3(), "rule__Constructor_declaration__ParameterListConstructorAssignment_3");
					put(grammarAccess.getConstructor_declarationAccess().getRparentAssignment_4(), "rule__Constructor_declaration__RparentAssignment_4");
					put(grammarAccess.getConstructor_declarationAccess().getStatementConstructorAssignment_5(), "rule__Constructor_declaration__StatementConstructorAssignment_5");
					put(grammarAccess.getParameter_listAccess().getParameterAssignment_0(), "rule__Parameter_list__ParameterAssignment_0");
					put(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1(), "rule__Parameter_list__ParametersAssignment_1_1");
					put(grammarAccess.getParameterAccess().getTypeAssignment_0(), "rule__Parameter__TypeAssignment_0");
					put(grammarAccess.getParameterAccess().getParameterNameAssignment_1(), "rule__Parameter__ParameterNameAssignment_1");
					put(grammarAccess.getVariable_declarationAccess().getModifiersVariableAssignment_0(), "rule__Variable_declaration__ModifiersVariableAssignment_0");
					put(grammarAccess.getVariable_declarationAccess().getTypeAssignment_1(), "rule__Variable_declaration__TypeAssignment_1");
					put(grammarAccess.getVariable_declarationAccess().getNameVariableAssignment_2(), "rule__Variable_declaration__NameVariableAssignment_2");
					put(grammarAccess.getVariable_declarationAccess().getNamesAssignment_3_1(), "rule__Variable_declaration__NamesAssignment_3_1");
					put(grammarAccess.getVariable_declaratorAccess().getNameVariableAssignment_0(), "rule__Variable_declarator__NameVariableAssignment_0");
					put(grammarAccess.getVariable_declaratorAccess().getVariAssignment_2_1(), "rule__Variable_declarator__VariAssignment_2_1");
					put(grammarAccess.getArray_initializerAccess().getVariableinitializerAssignment_2_0(), "rule__Array_initializer__VariableinitializerAssignment_2_0");
					put(grammarAccess.getArray_initializerAccess().getVariableinitializerAssignment_2_1_1(), "rule__Array_initializer__VariableinitializerAssignment_2_1_1");
					put(grammarAccess.getTypeAccess().getTypeSpecifierAssignment_0(), "rule__Type__TypeSpecifierAssignment_0");
					put(grammarAccess.getStatic_initializerAccess().getStaticAssignment_0(), "rule__Static_initializer__StaticAssignment_0");
					put(grammarAccess.getStatic_initializerAccess().getNameAssignment_1(), "rule__Static_initializer__NameAssignment_1");
					put(grammarAccess.getStatement_blockAccess().getStatmentsAssignment_2(), "rule__Statement_block__StatmentsAssignment_2");
					put(grammarAccess.getStatementAccess().getVariableDeclarationAssignment_0(), "rule__Statement__VariableDeclarationAssignment_0");
					put(grammarAccess.getStatementAccess().getExpressionStatementAssignment_1_0(), "rule__Statement__ExpressionStatementAssignment_1_0");
					put(grammarAccess.getStatementAccess().getGAssignment_1_1(), "rule__Statement__GAssignment_1_1");
					put(grammarAccess.getStatementAccess().getIfStatementAssignment_2(), "rule__Statement__IfStatementAssignment_2");
					put(grammarAccess.getStatementAccess().getDoStatementAssignment_3(), "rule__Statement__DoStatementAssignment_3");
					put(grammarAccess.getStatementAccess().getWhileStatementAssignment_4(), "rule__Statement__WhileStatementAssignment_4");
					put(grammarAccess.getStatementAccess().getForStatementAssignment_5(), "rule__Statement__ForStatementAssignment_5");
					put(grammarAccess.getStatementAccess().getSwitchStatementAssignment_6(), "rule__Statement__SwitchStatementAssignment_6");
					put(grammarAccess.getStatementAccess().getExpressionAssignment_7_1(), "rule__Statement__ExpressionAssignment_7_1");
					put(grammarAccess.getStatementAccess().getRparentAssignment_7_2(), "rule__Statement__RparentAssignment_7_2");
					put(grammarAccess.getStatementAccess().getSyncStatementAssignment_7_3(), "rule__Statement__SyncStatementAssignment_7_3");
					put(grammarAccess.getStatementAccess().getExpressionAssignment_8_2(), "rule__Statement__ExpressionAssignment_8_2");
					put(grammarAccess.getStatementAccess().getExpressionAssignment_9_2(), "rule__Statement__ExpressionAssignment_9_2");
					put(grammarAccess.getStatementAccess().getTryStatementAssignment_11(), "rule__Statement__TryStatementAssignment_11");
					put(grammarAccess.getStatementAccess().getNameStatementAssignment_12_0(), "rule__Statement__NameStatementAssignment_12_0");
					put(grammarAccess.getStatementAccess().getStatementAssignment_12_2(), "rule__Statement__StatementAssignment_12_2");
					put(grammarAccess.getStatementAccess().getNameAssignment_13_2(), "rule__Statement__NameAssignment_13_2");
					put(grammarAccess.getStatementAccess().getNameAssignment_14_2(), "rule__Statement__NameAssignment_14_2");
					put(grammarAccess.getFor_StatementAccess().getLparentAssignment_1(), "rule__For_Statement__LparentAssignment_1");
					put(grammarAccess.getFor_StatementAccess().getForControlAssignment_2(), "rule__For_Statement__ForControlAssignment_2");
					put(grammarAccess.getFor_StatementAccess().getRParentAssignment_3(), "rule__For_Statement__RParentAssignment_3");
					put(grammarAccess.getFor_StatementAccess().getForStatementAssignment_4(), "rule__For_Statement__ForStatementAssignment_4");
					put(grammarAccess.getFor_controlAccess().getForinitAssignment_1_0(), "rule__For_control__ForinitAssignment_1_0");
					put(grammarAccess.getFor_controlAccess().getExpressionAssignment_1_2(), "rule__For_control__ExpressionAssignment_1_2");
					put(grammarAccess.getFor_controlAccess().getForupdateAssignment_1_4(), "rule__For_control__ForupdateAssignment_1_4");
					put(grammarAccess.getVariableAccess().getNameAssignment(), "rule__Variable__NameAssignment");
					put(grammarAccess.getVariable_valueAccess().getNameAssignment(), "rule__Variable_value__NameAssignment");
					put(grammarAccess.getPrimitive_typeAccess().getNameAssignment(), "rule__Primitive_type__NameAssignment");
					put(grammarAccess.getFor_initAccess().getTypeAssignment_1(), "rule__For_init__TypeAssignment_1");
					put(grammarAccess.getFor_initAccess().getVarAssignment_2(), "rule__For_init__VarAssignment_2");
					put(grammarAccess.getFor_initAccess().getVar_initAssignment_4(), "rule__For_init__Var_initAssignment_4");
					put(grammarAccess.getFor_expressionAccess().getVariable1Assignment_1(), "rule__For_expression__Variable1Assignment_1");
					put(grammarAccess.getFor_expressionAccess().getExpOpAssignment_2(), "rule__For_expression__ExpOpAssignment_2");
					put(grammarAccess.getFor_expressionAccess().getLimitAssignment_3(), "rule__For_expression__LimitAssignment_3");
					put(grammarAccess.getFor_updateAccess().getVariableAssignment_1(), "rule__For_update__VariableAssignment_1");
					put(grammarAccess.getFor_updateAccess().getUpdateOpAssignment_2(), "rule__For_update__UpdateOpAssignment_2");
					put(grammarAccess.getFor_update_operatorAccess().getNameAssignment_1(), "rule__For_update_operator__NameAssignment_1");
					put(grammarAccess.getFor_expression_operatorAccess().getNameAssignment_1(), "rule__For_expression_operator__NameAssignment_1");
					put(grammarAccess.getParens_expressionAccess().getLparentAssignment_0(), "rule__Parens_expression__LparentAssignment_0");
					put(grammarAccess.getParens_expressionAccess().getExpressionAssignment_1(), "rule__Parens_expression__ExpressionAssignment_1");
					put(grammarAccess.getParens_expressionAccess().getRparentAssignment_2(), "rule__Parens_expression__RparentAssignment_2");
					put(grammarAccess.getExpression_listAccess().getExpression1Assignment_0(), "rule__Expression_list__Expression1Assignment_0");
					put(grammarAccess.getExpression_listAccess().getExpression2Assignment_1_1(), "rule__Expression_list__Expression2Assignment_1_1");
					put(grammarAccess.getExpressionAccess().getAssignmentoperatorAssignment_1_0(), "rule__Expression__AssignmentoperatorAssignment_1_0");
					put(grammarAccess.getExpressionAccess().getExpressionAssignment_1_1(), "rule__Expression__ExpressionAssignment_1_1");
					put(grammarAccess.getConditional_expressionAccess().getConditionalorexpressionAssignment_0(), "rule__Conditional_expression__ConditionalorexpressionAssignment_0");
					put(grammarAccess.getConditional_expressionAccess().getExpression1Assignment_1_1(), "rule__Conditional_expression__Expression1Assignment_1_1");
					put(grammarAccess.getConditional_expressionAccess().getExpression2Assignment_1_3(), "rule__Conditional_expression__Expression2Assignment_1_3");
					put(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionAssignment_0(), "rule__Conditional_OR_expression__ConditionalandexpressionAssignment_0");
					put(grammarAccess.getConditional_OR_expressionAccess().getConditionalandexpressionAssignment_1_1(), "rule__Conditional_OR_expression__ConditionalandexpressionAssignment_1_1");
					put(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionAssignment_0(), "rule__Conditional_AND_expression__InclusiveorexpressionAssignment_0");
					put(grammarAccess.getConditional_AND_expressionAccess().getInclusiveorexpressionAssignment_1_1(), "rule__Conditional_AND_expression__InclusiveorexpressionAssignment_1_1");
					put(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionAssignment_0(), "rule__Inclusive_OR_expression__ExclusiveorexpressionAssignment_0");
					put(grammarAccess.getInclusive_OR_expressionAccess().getExclusiveorexpressionAssignment_1_1(), "rule__Inclusive_OR_expression__ExclusiveorexpressionAssignment_1_1");
					put(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAssignment_0(), "rule__Exclusive_OR_expression__AndexpressionAssignment_0");
					put(grammarAccess.getExclusive_OR_expressionAccess().getAndexpressionAssignment_1_1(), "rule__Exclusive_OR_expression__AndexpressionAssignment_1_1");
					put(grammarAccess.getAND_expressionAccess().getEqualityexpressionAssignment_0(), "rule__AND_expression__EqualityexpressionAssignment_0");
					put(grammarAccess.getAND_expressionAccess().getEqualityexpressionAssignment_1_1(), "rule__AND_expression__EqualityexpressionAssignment_1_1");
					put(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionAssignment_0(), "rule__Equality_expression__InstanceofexpressionAssignment_0");
					put(grammarAccess.getEquality_expressionAccess().getInstanceofexpressionAssignment_1_1(), "rule__Equality_expression__InstanceofexpressionAssignment_1_1");
					put(grammarAccess.getInstanceOf_expressionAccess().getTypeAssignment_1_1(), "rule__InstanceOf_expression__TypeAssignment_1_1");
					put(grammarAccess.getRelational_expressionAccess().getShiftexpressionAssignment_0(), "rule__Relational_expression__ShiftexpressionAssignment_0");
					put(grammarAccess.getRelational_expressionAccess().getRelationalopAssignment_1_0(), "rule__Relational_expression__RelationalopAssignment_1_0");
					put(grammarAccess.getRelational_expressionAccess().getShiftexpressionAssignment_1_1(), "rule__Relational_expression__ShiftexpressionAssignment_1_1");
					put(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAssignment_0(), "rule__Shift_expression__AdditiveexpressionAssignment_0");
					put(grammarAccess.getShift_expressionAccess().getShiftopAssignment_1_0(), "rule__Shift_expression__ShiftopAssignment_1_0");
					put(grammarAccess.getShift_expressionAccess().getAdditiveexpressionAssignment_1_1(), "rule__Shift_expression__AdditiveexpressionAssignment_1_1");
					put(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionAssignment_0(), "rule__Additive_expression__MultiplicativeexpressionAssignment_0");
					put(grammarAccess.getAdditive_expressionAccess().getMultiplicativeexpressionAssignment_1_1(), "rule__Additive_expression__MultiplicativeexpressionAssignment_1_1");
					put(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionAssignment_0(), "rule__Multiplicative_expression__UnaryexpressionAssignment_0");
					put(grammarAccess.getMultiplicative_expressionAccess().getUnaryexpressionAssignment_1_1(), "rule__Multiplicative_expression__UnaryexpressionAssignment_1_1");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionAssignment_1_0_1(), "rule__Unary_expression_Not_Plus_Minus__UnaryexpressionAssignment_1_0_1");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getUnaryexpressionAssignment_1_1_1(), "rule__Unary_expression_Not_Plus_Minus__UnaryexpressionAssignment_1_1_1");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getCastexpressionAssignment_1_2(), "rule__Unary_expression_Not_Plus_Minus__CastexpressionAssignment_1_2");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getPrimaryAssignment_1_3_0(), "rule__Unary_expression_Not_Plus_Minus__PrimaryAssignment_1_3_0");
					put(grammarAccess.getUnary_expression_Not_Plus_MinusAccess().getSelectorAssignment_1_3_1(), "rule__Unary_expression_Not_Plus_Minus__SelectorAssignment_1_3_1");
					put(grammarAccess.getCast_expressionAccess().getLparentAssignment_0_1(), "rule__Cast_expression__LparentAssignment_0_1");
					put(grammarAccess.getCast_expressionAccess().getPrimitivetypeAssignment_0_2(), "rule__Cast_expression__PrimitivetypeAssignment_0_2");
					put(grammarAccess.getCast_expressionAccess().getRparentAssignment_0_3(), "rule__Cast_expression__RparentAssignment_0_3");
					put(grammarAccess.getCast_expressionAccess().getUnaryexpressionAssignment_0_4(), "rule__Cast_expression__UnaryexpressionAssignment_0_4");
					put(grammarAccess.getCast_expressionAccess().getLparentAssignment_1_0(), "rule__Cast_expression__LparentAssignment_1_0");
					put(grammarAccess.getCast_expressionAccess().getTypeAssignment_1_1_0(), "rule__Cast_expression__TypeAssignment_1_1_0");
					put(grammarAccess.getCast_expressionAccess().getExpressionAssignment_1_1_1(), "rule__Cast_expression__ExpressionAssignment_1_1_1");
					put(grammarAccess.getCast_expressionAccess().getRparentAssignment_1_2(), "rule__Cast_expression__RparentAssignment_1_2");
					put(grammarAccess.getCast_expressionAccess().getUnaryexpressionnotplusminusAssignment_1_3(), "rule__Cast_expression__UnaryexpressionnotplusminusAssignment_1_3");
					put(grammarAccess.getPrimary_expressionAccess().getParexpressionAssignment_1_0(), "rule__Primary_expression__ParexpressionAssignment_1_0");
					put(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_1_1_1(), "rule__Primary_expression__IdentifierAssignment_1_1_1_1");
					put(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixAssignment_1_1_2(), "rule__Primary_expression__IdentifiersuffixAssignment_1_1_2");
					put(grammarAccess.getPrimary_expressionAccess().getSupersuffixAssignment_1_2_1(), "rule__Primary_expression__SupersuffixAssignment_1_2_1");
					put(grammarAccess.getPrimary_expressionAccess().getLiteralAssignment_1_3(), "rule__Primary_expression__LiteralAssignment_1_3");
					put(grammarAccess.getPrimary_expressionAccess().getCreatorAssignment_1_4_1(), "rule__Primary_expression__CreatorAssignment_1_4_1");
					put(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_5_0(), "rule__Primary_expression__IdentifierAssignment_1_5_0");
					put(grammarAccess.getPrimary_expressionAccess().getIdentifierAssignment_1_5_1_1(), "rule__Primary_expression__IdentifierAssignment_1_5_1_1");
					put(grammarAccess.getPrimary_expressionAccess().getIdentifiersuffixAssignment_1_5_2(), "rule__Primary_expression__IdentifiersuffixAssignment_1_5_2");
					put(grammarAccess.getPrimary_expressionAccess().getPrimitivetypeAssignment_1_6_0(), "rule__Primary_expression__PrimitivetypeAssignment_1_6_0");
					put(grammarAccess.getIdentifier_suffixAccess().getArgumentsAssignment_1_1(), "rule__Identifier_suffix__ArgumentsAssignment_1_1");
					put(grammarAccess.getIdentifier_suffixAccess().getExplicitgenericinvocationAssignment_1_3_1(), "rule__Identifier_suffix__ExplicitgenericinvocationAssignment_1_3_1");
					put(grammarAccess.getIdentifier_suffixAccess().getArgumentsAssignment_1_5_2(), "rule__Identifier_suffix__ArgumentsAssignment_1_5_2");
					put(grammarAccess.getIdentifier_suffixAccess().getInnercreatorAssignment_1_6_2(), "rule__Identifier_suffix__InnercreatorAssignment_1_6_2");
					put(grammarAccess.getCreatorAccess().getCreatednameAssignment_0_1(), "rule__Creator__CreatednameAssignment_0_1");
					put(grammarAccess.getCreatorAccess().getClasscreatorrestAssignment_0_2(), "rule__Creator__ClasscreatorrestAssignment_0_2");
					put(grammarAccess.getCreatorAccess().getArraycreatorrestAssignment_1_1_0(), "rule__Creator__ArraycreatorrestAssignment_1_1_0");
					put(grammarAccess.getCreatorAccess().getClasscreatorrestAssignment_1_1_1(), "rule__Creator__ClasscreatorrestAssignment_1_1_1");
					put(grammarAccess.getCreated_nameAccess().getClassorinterfacetypeAssignment_1_0(), "rule__Created_name__ClassorinterfacetypeAssignment_1_0");
					put(grammarAccess.getCreated_nameAccess().getPrimitivetypeAssignment_1_1(), "rule__Created_name__PrimitivetypeAssignment_1_1");
					put(grammarAccess.getInner_creatorAccess().getNonwildcardtypeargumentsAssignment_0(), "rule__Inner_creator__NonwildcardtypeargumentsAssignment_0");
					put(grammarAccess.getInner_creatorAccess().getIdentifierAssignment_1(), "rule__Inner_creator__IdentifierAssignment_1");
					put(grammarAccess.getInner_creatorAccess().getClasscreatorrestAssignment_2(), "rule__Inner_creator__ClasscreatorrestAssignment_2");
					put(grammarAccess.getArray_creator_restAccess().getExpressionAssignment_1_1_0(), "rule__Array_creator_rest__ExpressionAssignment_1_1_0");
					put(grammarAccess.getArray_creator_restAccess().getExpressionAssignment_1_1_2_1(), "rule__Array_creator_rest__ExpressionAssignment_1_1_2_1");
					put(grammarAccess.getClass_creator_restAccess().getArgumentsAssignment_0(), "rule__Class_creator_rest__ArgumentsAssignment_0");
					put(grammarAccess.getClass_creator_restAccess().getClassbodyAssignment_1(), "rule__Class_creator_rest__ClassbodyAssignment_1");
					put(grammarAccess.getExplicit_generic_invocationAccess().getNonwildcardtypeargumentsAssignment_0(), "rule__Explicit_generic_invocation__NonwildcardtypeargumentsAssignment_0");
					put(grammarAccess.getExplicit_generic_invocationAccess().getIdentifierAssignment_1(), "rule__Explicit_generic_invocation__IdentifierAssignment_1");
					put(grammarAccess.getExplicit_generic_invocationAccess().getArgumentsAssignment_2(), "rule__Explicit_generic_invocation__ArgumentsAssignment_2");
					put(grammarAccess.getNon_wildcard_type_argumentsAccess().getTypeAssignment_1(), "rule__Non_wildcard_type_arguments__TypeAssignment_1");
					put(grammarAccess.getSelectorAccess().getSupersuffixAssignment_1_0_2(), "rule__Selector__SupersuffixAssignment_1_0_2");
					put(grammarAccess.getSelectorAccess().getInnercreatorAssignment_1_1_2(), "rule__Selector__InnercreatorAssignment_1_1_2");
					put(grammarAccess.getSelectorAccess().getExpressionAssignment_1_2_1(), "rule__Selector__ExpressionAssignment_1_2_1");
					put(grammarAccess.getSuper_suffixAccess().getArgumentsAssignment_1_0(), "rule__Super_suffix__ArgumentsAssignment_1_0");
					put(grammarAccess.getSuper_suffixAccess().getIdentifierAssignment_1_1_1(), "rule__Super_suffix__IdentifierAssignment_1_1_1");
					put(grammarAccess.getSuper_suffixAccess().getArgumentsAssignment_1_1_2(), "rule__Super_suffix__ArgumentsAssignment_1_1_2");
					put(grammarAccess.getArgumentsAccess().getLparentAssignment_1(), "rule__Arguments__LparentAssignment_1");
					put(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2(), "rule__Arguments__ExpressionlistAssignment_2");
					put(grammarAccess.getArgumentsAccess().getRparentAssignment_3(), "rule__Arguments__RparentAssignment_3");
					put(grammarAccess.getSwitch_statementAccess().getLParenAssignment_2(), "rule__Switch_statement__LParenAssignment_2");
					put(grammarAccess.getSwitch_statementAccess().getExpressionAssignment_3(), "rule__Switch_statement__ExpressionAssignment_3");
					put(grammarAccess.getSwitch_statementAccess().getRparentAssignment_4(), "rule__Switch_statement__RparentAssignment_4");
					put(grammarAccess.getSwitch_statementAccess().getExpression2Assignment_6_0_1(), "rule__Switch_statement__Expression2Assignment_6_0_1");
					put(grammarAccess.getSwitch_statementAccess().getSwitchStatementsAssignment_6_2(), "rule__Switch_statement__SwitchStatementsAssignment_6_2");
					put(grammarAccess.getWhile_StatementAccess().getExpressionAssignment_1(), "rule__While_Statement__ExpressionAssignment_1");
					put(grammarAccess.getWhile_StatementAccess().getRparentAssignment_2(), "rule__While_Statement__RparentAssignment_2");
					put(grammarAccess.getWhile_StatementAccess().getWhileStatementAssignment_3(), "rule__While_Statement__WhileStatementAssignment_3");
					put(grammarAccess.getDo_StatementAccess().getDoStatementAssignment_1(), "rule__Do_Statement__DoStatementAssignment_1");
					put(grammarAccess.getDo_StatementAccess().getLparentAssignment_3(), "rule__Do_Statement__LparentAssignment_3");
					put(grammarAccess.getDo_StatementAccess().getRparentAssignment_4(), "rule__Do_Statement__RparentAssignment_4");
					put(grammarAccess.getIf_statementAccess().getLparenAssignment_1(), "rule__If_statement__LparenAssignment_1");
					put(grammarAccess.getIf_statementAccess().getExpressionAssignment_2(), "rule__If_statement__ExpressionAssignment_2");
					put(grammarAccess.getIf_statementAccess().getRparentAssignment_3(), "rule__If_statement__RparentAssignment_3");
					put(grammarAccess.getIf_statementAccess().getIdStatementAssignment_4(), "rule__If_statement__IdStatementAssignment_4");
					put(grammarAccess.getIf_statementAccess().getElseStatementAssignment_5_1(), "rule__If_statement__ElseStatementAssignment_5_1");
					put(grammarAccess.getTry_statementAccess().getTryStatementAssignment_1(), "rule__Try_statement__TryStatementAssignment_1");
					put(grammarAccess.getTry_statementAccess().getLParenAssignment_2_1(), "rule__Try_statement__LParenAssignment_2_1");
					put(grammarAccess.getTry_statementAccess().getParametersAssignment_2_2(), "rule__Try_statement__ParametersAssignment_2_2");
					put(grammarAccess.getTry_statementAccess().getRparentAssignment_2_3(), "rule__Try_statement__RparentAssignment_2_3");
					put(grammarAccess.getTry_statementAccess().getCatchStatementAssignment_2_4(), "rule__Try_statement__CatchStatementAssignment_2_4");
					put(grammarAccess.getTry_statementAccess().getFinallyStatementAssignment_3_1(), "rule__Try_statement__FinallyStatementAssignment_3_1");
					put(grammarAccess.getImport_statementAccess().getClassNameAssignment_1_0_0(), "rule__Import_statement__ClassNameAssignment_1_0_0");
					put(grammarAccess.getImport_statementAccess().getPacNameAssignment_1_1_0(), "rule__Import_statement__PacNameAssignment_1_1_0");
					put(grammarAccess.getPackage_statementAccess().getPacNameAssignment_1(), "rule__Package_statement__PacNameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
